

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 28 20:48:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK0
    74  0061CC                     __pidataBANK0:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for menu_game@F3103
    78  0061CC  50                 	db	80
    79  0061CD  6C                 	db	108
    80  0061CE  61                 	db	97
    81  0061CF  79                 	db	121
    82  0061D0  65                 	db	101
    83  0061D1  72                 	db	114
    84  0061D2  20                 	db	32
    85  0061D3  32                 	db	50
    86  0061D4  28                 	db	40
    87  0061D5  30                 	db	48
    88  0061D6  29                 	db	41
    89  0061D7  20                 	db	32
    90  0061D8  77                 	db	119
    91  0061D9  69                 	db	105
    92  0061DA  6E                 	db	110
    93  0061DB  73                 	db	115
    94  0061DC  00                 	db	0
    95                           
    96                           ;initializer for menu_game@F3100
    97  0061DD  50                 	db	80
    98  0061DE  6C                 	db	108
    99  0061DF  61                 	db	97
   100  0061E0  79                 	db	121
   101  0061E1  65                 	db	101
   102  0061E2  72                 	db	114
   103  0061E3  20                 	db	32
   104  0061E4  31                 	db	49
   105  0061E5  28                 	db	40
   106  0061E6  58                 	db	88
   107  0061E7  29                 	db	41
   108  0061E8  20                 	db	32
   109  0061E9  77                 	db	119
   110  0061EA  69                 	db	105
   111  0061EB  6E                 	db	110
   112  0061EC  73                 	db	115
   113  0061ED  00                 	db	0
   114                           
   115                           	psect	mediumconst
   116  0072CC                     __pmediumconst:
   117                           	opt callstack 0
   118  0072CC  00                 	db	0
   119  0072CD                     _Font8x8:
   120                           	opt callstack 0
   121  0072CD  00                 	db	0
   122  0072CE  00                 	db	0
   123  0072CF  00                 	db	0
   124  0072D0  00                 	db	0
   125  0072D1  00                 	db	0
   126  0072D2  00                 	db	0
   127  0072D3  00                 	db	0
   128  0072D4  00                 	db	0
   129  0072D5  00                 	db	0
   130  0072D6  00                 	db	0
   131  0072D7  00                 	db	0
   132  0072D8  00                 	db	0
   133  0072D9  00                 	db	0
   134  0072DA  00                 	db	0
   135  0072DB  00                 	db	0
   136  0072DC  00                 	db	0
   137  0072DD  00                 	db	0
   138  0072DE  00                 	db	0
   139  0072DF  00                 	db	0
   140  0072E0  00                 	db	0
   141  0072E1  00                 	db	0
   142  0072E2  00                 	db	0
   143  0072E3  00                 	db	0
   144  0072E4  00                 	db	0
   145  0072E5  00                 	db	0
   146  0072E6  00                 	db	0
   147  0072E7  00                 	db	0
   148  0072E8  00                 	db	0
   149  0072E9  00                 	db	0
   150  0072EA  00                 	db	0
   151  0072EB  00                 	db	0
   152  0072EC  00                 	db	0
   153  0072ED  00                 	db	0
   154  0072EE  00                 	db	0
   155  0072EF  00                 	db	0
   156  0072F0  00                 	db	0
   157  0072F1  00                 	db	0
   158  0072F2  00                 	db	0
   159  0072F3  00                 	db	0
   160  0072F4  00                 	db	0
   161  0072F5  00                 	db	0
   162  0072F6  00                 	db	0
   163  0072F7  00                 	db	0
   164  0072F8  00                 	db	0
   165  0072F9  00                 	db	0
   166  0072FA  00                 	db	0
   167  0072FB  00                 	db	0
   168  0072FC  00                 	db	0
   169  0072FD  00                 	db	0
   170  0072FE  00                 	db	0
   171  0072FF  00                 	db	0
   172  007300  00                 	db	0
   173  007301  00                 	db	0
   174  007302  00                 	db	0
   175  007303  00                 	db	0
   176  007304  00                 	db	0
   177  007305  00                 	db	0
   178  007306  00                 	db	0
   179  007307  00                 	db	0
   180  007308  00                 	db	0
   181  007309  00                 	db	0
   182  00730A  00                 	db	0
   183  00730B  00                 	db	0
   184  00730C  00                 	db	0
   185  00730D  00                 	db	0
   186  00730E  00                 	db	0
   187  00730F  00                 	db	0
   188  007310  00                 	db	0
   189  007311  00                 	db	0
   190  007312  00                 	db	0
   191  007313  00                 	db	0
   192  007314  00                 	db	0
   193  007315  00                 	db	0
   194  007316  00                 	db	0
   195  007317  00                 	db	0
   196  007318  00                 	db	0
   197  007319  00                 	db	0
   198  00731A  00                 	db	0
   199  00731B  00                 	db	0
   200  00731C  00                 	db	0
   201  00731D  00                 	db	0
   202  00731E  00                 	db	0
   203  00731F  00                 	db	0
   204  007320  00                 	db	0
   205  007321  00                 	db	0
   206  007322  00                 	db	0
   207  007323  00                 	db	0
   208  007324  00                 	db	0
   209  007325  00                 	db	0
   210  007326  00                 	db	0
   211  007327  00                 	db	0
   212  007328  00                 	db	0
   213  007329  00                 	db	0
   214  00732A  00                 	db	0
   215  00732B  00                 	db	0
   216  00732C  00                 	db	0
   217  00732D  00                 	db	0
   218  00732E  00                 	db	0
   219  00732F  00                 	db	0
   220  007330  00                 	db	0
   221  007331  00                 	db	0
   222  007332  00                 	db	0
   223  007333  00                 	db	0
   224  007334  00                 	db	0
   225  007335  00                 	db	0
   226  007336  00                 	db	0
   227  007337  00                 	db	0
   228  007338  00                 	db	0
   229  007339  00                 	db	0
   230  00733A  00                 	db	0
   231  00733B  00                 	db	0
   232  00733C  00                 	db	0
   233  00733D  00                 	db	0
   234  00733E  00                 	db	0
   235  00733F  00                 	db	0
   236  007340  00                 	db	0
   237  007341  00                 	db	0
   238  007342  00                 	db	0
   239  007343  00                 	db	0
   240  007344  00                 	db	0
   241  007345  00                 	db	0
   242  007346  00                 	db	0
   243  007347  00                 	db	0
   244  007348  00                 	db	0
   245  007349  00                 	db	0
   246  00734A  00                 	db	0
   247  00734B  00                 	db	0
   248  00734C  00                 	db	0
   249  00734D  00                 	db	0
   250  00734E  00                 	db	0
   251  00734F  00                 	db	0
   252  007350  00                 	db	0
   253  007351  00                 	db	0
   254  007352  00                 	db	0
   255  007353  00                 	db	0
   256  007354  00                 	db	0
   257  007355  00                 	db	0
   258  007356  00                 	db	0
   259  007357  00                 	db	0
   260  007358  00                 	db	0
   261  007359  00                 	db	0
   262  00735A  00                 	db	0
   263  00735B  00                 	db	0
   264  00735C  00                 	db	0
   265  00735D  00                 	db	0
   266  00735E  00                 	db	0
   267  00735F  00                 	db	0
   268  007360  00                 	db	0
   269  007361  00                 	db	0
   270  007362  00                 	db	0
   271  007363  00                 	db	0
   272  007364  00                 	db	0
   273  007365  00                 	db	0
   274  007366  00                 	db	0
   275  007367  00                 	db	0
   276  007368  00                 	db	0
   277  007369  00                 	db	0
   278  00736A  00                 	db	0
   279  00736B  00                 	db	0
   280  00736C  00                 	db	0
   281  00736D  00                 	db	0
   282  00736E  00                 	db	0
   283  00736F  00                 	db	0
   284  007370  00                 	db	0
   285  007371  00                 	db	0
   286  007372  00                 	db	0
   287  007373  00                 	db	0
   288  007374  00                 	db	0
   289  007375  00                 	db	0
   290  007376  00                 	db	0
   291  007377  00                 	db	0
   292  007378  00                 	db	0
   293  007379  00                 	db	0
   294  00737A  00                 	db	0
   295  00737B  00                 	db	0
   296  00737C  00                 	db	0
   297  00737D  00                 	db	0
   298  00737E  00                 	db	0
   299  00737F  00                 	db	0
   300  007380  00                 	db	0
   301  007381  00                 	db	0
   302  007382  00                 	db	0
   303  007383  00                 	db	0
   304  007384  00                 	db	0
   305  007385  00                 	db	0
   306  007386  00                 	db	0
   307  007387  00                 	db	0
   308  007388  00                 	db	0
   309  007389  00                 	db	0
   310  00738A  00                 	db	0
   311  00738B  00                 	db	0
   312  00738C  00                 	db	0
   313  00738D  00                 	db	0
   314  00738E  00                 	db	0
   315  00738F  00                 	db	0
   316  007390  00                 	db	0
   317  007391  00                 	db	0
   318  007392  00                 	db	0
   319  007393  00                 	db	0
   320  007394  00                 	db	0
   321  007395  00                 	db	0
   322  007396  00                 	db	0
   323  007397  00                 	db	0
   324  007398  00                 	db	0
   325  007399  00                 	db	0
   326  00739A  00                 	db	0
   327  00739B  00                 	db	0
   328  00739C  00                 	db	0
   329  00739D  00                 	db	0
   330  00739E  00                 	db	0
   331  00739F  00                 	db	0
   332  0073A0  00                 	db	0
   333  0073A1  00                 	db	0
   334  0073A2  00                 	db	0
   335  0073A3  00                 	db	0
   336  0073A4  00                 	db	0
   337  0073A5  00                 	db	0
   338  0073A6  00                 	db	0
   339  0073A7  00                 	db	0
   340  0073A8  00                 	db	0
   341  0073A9  00                 	db	0
   342  0073AA  00                 	db	0
   343  0073AB  00                 	db	0
   344  0073AC  00                 	db	0
   345  0073AD  00                 	db	0
   346  0073AE  00                 	db	0
   347  0073AF  00                 	db	0
   348  0073B0  00                 	db	0
   349  0073B1  00                 	db	0
   350  0073B2  00                 	db	0
   351  0073B3  00                 	db	0
   352  0073B4  00                 	db	0
   353  0073B5  00                 	db	0
   354  0073B6  00                 	db	0
   355  0073B7  00                 	db	0
   356  0073B8  00                 	db	0
   357  0073B9  00                 	db	0
   358  0073BA  00                 	db	0
   359  0073BB  00                 	db	0
   360  0073BC  00                 	db	0
   361  0073BD  00                 	db	0
   362  0073BE  00                 	db	0
   363  0073BF  00                 	db	0
   364  0073C0  00                 	db	0
   365  0073C1  00                 	db	0
   366  0073C2  00                 	db	0
   367  0073C3  00                 	db	0
   368  0073C4  00                 	db	0
   369  0073C5  00                 	db	0
   370  0073C6  00                 	db	0
   371  0073C7  00                 	db	0
   372  0073C8  00                 	db	0
   373  0073C9  00                 	db	0
   374  0073CA  00                 	db	0
   375  0073CB  00                 	db	0
   376  0073CC  00                 	db	0
   377  0073CD  00                 	db	0
   378  0073CE  00                 	db	0
   379  0073CF  00                 	db	0
   380  0073D0  00                 	db	0
   381  0073D1  00                 	db	0
   382  0073D2  00                 	db	0
   383  0073D3  00                 	db	0
   384  0073D4  00                 	db	0
   385  0073D5  00                 	db	0
   386  0073D6  06                 	db	6
   387  0073D7  5F                 	db	95
   388  0073D8  5F                 	db	95
   389  0073D9  06                 	db	6
   390  0073DA  00                 	db	0
   391  0073DB  00                 	db	0
   392  0073DC  00                 	db	0
   393  0073DD  00                 	db	0
   394  0073DE  07                 	db	7
   395  0073DF  07                 	db	7
   396  0073E0  00                 	db	0
   397  0073E1  07                 	db	7
   398  0073E2  07                 	db	7
   399  0073E3  00                 	db	0
   400  0073E4  00                 	db	0
   401  0073E5  14                 	db	20
   402  0073E6  7F                 	db	127
   403  0073E7  7F                 	db	127
   404  0073E8  14                 	db	20
   405  0073E9  7F                 	db	127
   406  0073EA  7F                 	db	127
   407  0073EB  14                 	db	20
   408  0073EC  00                 	db	0
   409  0073ED  24                 	db	36
   410  0073EE  2E                 	db	46
   411  0073EF  6B                 	db	107
   412  0073F0  6B                 	db	107
   413  0073F1  3A                 	db	58
   414  0073F2  12                 	db	18
   415  0073F3  00                 	db	0
   416  0073F4  00                 	db	0
   417  0073F5  46                 	db	70
   418  0073F6  66                 	db	102
   419  0073F7  30                 	db	48
   420  0073F8  18                 	db	24
   421  0073F9  0C                 	db	12
   422  0073FA  66                 	db	102
   423  0073FB  62                 	db	98
   424  0073FC  00                 	db	0
   425  0073FD  30                 	db	48
   426  0073FE  7A                 	db	122
   427  0073FF  4F                 	db	79
   428  007400  5D                 	db	93
   429  007401  37                 	db	55
   430  007402  7A                 	db	122
   431  007403  48                 	db	72
   432  007404  00                 	db	0
   433  007405  04                 	db	4
   434  007406  07                 	db	7
   435  007407  03                 	db	3
   436  007408  00                 	db	0
   437  007409  00                 	db	0
   438  00740A  00                 	db	0
   439  00740B  00                 	db	0
   440  00740C  00                 	db	0
   441  00740D  00                 	db	0
   442  00740E  1C                 	db	28
   443  00740F  3E                 	db	62
   444  007410  63                 	db	99
   445  007411  41                 	db	65
   446  007412  00                 	db	0
   447  007413  00                 	db	0
   448  007414  00                 	db	0
   449  007415  00                 	db	0
   450  007416  41                 	db	65
   451  007417  63                 	db	99
   452  007418  3E                 	db	62
   453  007419  1C                 	db	28
   454  00741A  00                 	db	0
   455  00741B  00                 	db	0
   456  00741C  00                 	db	0
   457  00741D  08                 	db	8
   458  00741E  2A                 	db	42
   459  00741F  3E                 	db	62
   460  007420  1C                 	db	28
   461  007421  1C                 	db	28
   462  007422  3E                 	db	62
   463  007423  2A                 	db	42
   464  007424  08                 	db	8
   465  007425  08                 	db	8
   466  007426  08                 	db	8
   467  007427  3E                 	db	62
   468  007428  3E                 	db	62
   469  007429  08                 	db	8
   470  00742A  08                 	db	8
   471  00742B  00                 	db	0
   472  00742C  00                 	db	0
   473  00742D  00                 	db	0
   474  00742E  80                 	db	128
   475  00742F  E0                 	db	224
   476  007430  60                 	db	96
   477  007431  00                 	db	0
   478  007432  00                 	db	0
   479  007433  00                 	db	0
   480  007434  00                 	db	0
   481  007435  08                 	db	8
   482  007436  08                 	db	8
   483  007437  08                 	db	8
   484  007438  08                 	db	8
   485  007439  08                 	db	8
   486  00743A  08                 	db	8
   487  00743B  00                 	db	0
   488  00743C  00                 	db	0
   489  00743D  00                 	db	0
   490  00743E  00                 	db	0
   491  00743F  60                 	db	96
   492  007440  60                 	db	96
   493  007441  00                 	db	0
   494  007442  00                 	db	0
   495  007443  00                 	db	0
   496  007444  00                 	db	0
   497  007445  60                 	db	96
   498  007446  30                 	db	48
   499  007447  18                 	db	24
   500  007448  0C                 	db	12
   501  007449  06                 	db	6
   502  00744A  03                 	db	3
   503  00744B  01                 	db	1
   504  00744C  00                 	db	0
   505  00744D  3E                 	db	62
   506  00744E  7F                 	db	127
   507  00744F  71                 	db	113
   508  007450  59                 	db	89
   509  007451  4D                 	db	77
   510  007452  7F                 	db	127
   511  007453  3E                 	db	62
   512  007454  00                 	db	0
   513  007455  40                 	db	64
   514  007456  42                 	db	66
   515  007457  7F                 	db	127
   516  007458  7F                 	db	127
   517  007459  40                 	db	64
   518  00745A  40                 	db	64
   519  00745B  00                 	db	0
   520  00745C  00                 	db	0
   521  00745D  62                 	db	98
   522  00745E  73                 	db	115
   523  00745F  59                 	db	89
   524  007460  49                 	db	73
   525  007461  6F                 	db	111
   526  007462  66                 	db	102
   527  007463  00                 	db	0
   528  007464  00                 	db	0
   529  007465  22                 	db	34
   530  007466  63                 	db	99
   531  007467  49                 	db	73
   532  007468  49                 	db	73
   533  007469  7F                 	db	127
   534  00746A  36                 	db	54
   535  00746B  00                 	db	0
   536  00746C  00                 	db	0
   537  00746D  18                 	db	24
   538  00746E  1C                 	db	28
   539  00746F  16                 	db	22
   540  007470  53                 	db	83
   541  007471  7F                 	db	127
   542  007472  7F                 	db	127
   543  007473  50                 	db	80
   544  007474  00                 	db	0
   545  007475  27                 	db	39
   546  007476  67                 	db	103
   547  007477  45                 	db	69
   548  007478  45                 	db	69
   549  007479  7D                 	db	125
   550  00747A  39                 	db	57
   551  00747B  00                 	db	0
   552  00747C  00                 	db	0
   553  00747D  3C                 	db	60
   554  00747E  7E                 	db	126
   555  00747F  4B                 	db	75
   556  007480  49                 	db	73
   557  007481  79                 	db	121
   558  007482  30                 	db	48
   559  007483  00                 	db	0
   560  007484  00                 	db	0
   561  007485  03                 	db	3
   562  007486  03                 	db	3
   563  007487  71                 	db	113
   564  007488  79                 	db	121
   565  007489  0F                 	db	15
   566  00748A  07                 	db	7
   567  00748B  00                 	db	0
   568  00748C  00                 	db	0
   569  00748D  36                 	db	54
   570  00748E  7F                 	db	127
   571  00748F  49                 	db	73
   572  007490  49                 	db	73
   573  007491  7F                 	db	127
   574  007492  36                 	db	54
   575  007493  00                 	db	0
   576  007494  00                 	db	0
   577  007495  06                 	db	6
   578  007496  4F                 	db	79
   579  007497  49                 	db	73
   580  007498  69                 	db	105
   581  007499  3F                 	db	63
   582  00749A  1E                 	db	30
   583  00749B  00                 	db	0
   584  00749C  00                 	db	0
   585  00749D  00                 	db	0
   586  00749E  00                 	db	0
   587  00749F  66                 	db	102
   588  0074A0  66                 	db	102
   589  0074A1  00                 	db	0
   590  0074A2  00                 	db	0
   591  0074A3  00                 	db	0
   592  0074A4  00                 	db	0
   593  0074A5  00                 	db	0
   594  0074A6  80                 	db	128
   595  0074A7  E6                 	db	230
   596  0074A8  66                 	db	102
   597  0074A9  00                 	db	0
   598  0074AA  00                 	db	0
   599  0074AB  00                 	db	0
   600  0074AC  00                 	db	0
   601  0074AD  08                 	db	8
   602  0074AE  1C                 	db	28
   603  0074AF  36                 	db	54
   604  0074B0  63                 	db	99
   605  0074B1  41                 	db	65
   606  0074B2  00                 	db	0
   607  0074B3  00                 	db	0
   608  0074B4  00                 	db	0
   609  0074B5  24                 	db	36
   610  0074B6  24                 	db	36
   611  0074B7  24                 	db	36
   612  0074B8  24                 	db	36
   613  0074B9  24                 	db	36
   614  0074BA  24                 	db	36
   615  0074BB  00                 	db	0
   616  0074BC  00                 	db	0
   617  0074BD  00                 	db	0
   618  0074BE  41                 	db	65
   619  0074BF  63                 	db	99
   620  0074C0  36                 	db	54
   621  0074C1  1C                 	db	28
   622  0074C2  08                 	db	8
   623  0074C3  00                 	db	0
   624  0074C4  00                 	db	0
   625  0074C5  02                 	db	2
   626  0074C6  03                 	db	3
   627  0074C7  51                 	db	81
   628  0074C8  59                 	db	89
   629  0074C9  0F                 	db	15
   630  0074CA  06                 	db	6
   631  0074CB  00                 	db	0
   632  0074CC  00                 	db	0
   633  0074CD  3E                 	db	62
   634  0074CE  7F                 	db	127
   635  0074CF  41                 	db	65
   636  0074D0  5D                 	db	93
   637  0074D1  5D                 	db	93
   638  0074D2  1F                 	db	31
   639  0074D3  1E                 	db	30
   640  0074D4  00                 	db	0
   641  0074D5  7C                 	db	124
   642  0074D6  7E                 	db	126
   643  0074D7  13                 	db	19
   644  0074D8  13                 	db	19
   645  0074D9  7E                 	db	126
   646  0074DA  7C                 	db	124
   647  0074DB  00                 	db	0
   648  0074DC  00                 	db	0
   649  0074DD  41                 	db	65
   650  0074DE  7F                 	db	127
   651  0074DF  7F                 	db	127
   652  0074E0  49                 	db	73
   653  0074E1  49                 	db	73
   654  0074E2  7F                 	db	127
   655  0074E3  36                 	db	54
   656  0074E4  00                 	db	0
   657  0074E5  1C                 	db	28
   658  0074E6  3E                 	db	62
   659  0074E7  63                 	db	99
   660  0074E8  41                 	db	65
   661  0074E9  41                 	db	65
   662  0074EA  63                 	db	99
   663  0074EB  22                 	db	34
   664  0074EC  00                 	db	0
   665  0074ED  41                 	db	65
   666  0074EE  7F                 	db	127
   667  0074EF  7F                 	db	127
   668  0074F0  41                 	db	65
   669  0074F1  63                 	db	99
   670  0074F2  3E                 	db	62
   671  0074F3  1C                 	db	28
   672  0074F4  00                 	db	0
   673  0074F5  41                 	db	65
   674  0074F6  7F                 	db	127
   675  0074F7  7F                 	db	127
   676  0074F8  49                 	db	73
   677  0074F9  5D                 	db	93
   678  0074FA  41                 	db	65
   679  0074FB  63                 	db	99
   680  0074FC  00                 	db	0
   681  0074FD  41                 	db	65
   682  0074FE  7F                 	db	127
   683  0074FF  7F                 	db	127
   684  007500  49                 	db	73
   685  007501  1D                 	db	29
   686  007502  01                 	db	1
   687  007503  03                 	db	3
   688  007504  00                 	db	0
   689  007505  1C                 	db	28
   690  007506  3E                 	db	62
   691  007507  63                 	db	99
   692  007508  41                 	db	65
   693  007509  51                 	db	81
   694  00750A  73                 	db	115
   695  00750B  72                 	db	114
   696  00750C  00                 	db	0
   697  00750D  7F                 	db	127
   698  00750E  7F                 	db	127
   699  00750F  08                 	db	8
   700  007510  08                 	db	8
   701  007511  7F                 	db	127
   702  007512  7F                 	db	127
   703  007513  00                 	db	0
   704  007514  00                 	db	0
   705  007515  00                 	db	0
   706  007516  41                 	db	65
   707  007517  7F                 	db	127
   708  007518  7F                 	db	127
   709  007519  41                 	db	65
   710  00751A  00                 	db	0
   711  00751B  00                 	db	0
   712  00751C  00                 	db	0
   713  00751D  30                 	db	48
   714  00751E  70                 	db	112
   715  00751F  40                 	db	64
   716  007520  41                 	db	65
   717  007521  7F                 	db	127
   718  007522  3F                 	db	63
   719  007523  01                 	db	1
   720  007524  00                 	db	0
   721  007525  41                 	db	65
   722  007526  7F                 	db	127
   723  007527  7F                 	db	127
   724  007528  08                 	db	8
   725  007529  1C                 	db	28
   726  00752A  77                 	db	119
   727  00752B  63                 	db	99
   728  00752C  00                 	db	0
   729  00752D  41                 	db	65
   730  00752E  7F                 	db	127
   731  00752F  7F                 	db	127
   732  007530  41                 	db	65
   733  007531  40                 	db	64
   734  007532  60                 	db	96
   735  007533  70                 	db	112
   736  007534  00                 	db	0
   737  007535  7F                 	db	127
   738  007536  7F                 	db	127
   739  007537  0E                 	db	14
   740  007538  1C                 	db	28
   741  007539  0E                 	db	14
   742  00753A  7F                 	db	127
   743  00753B  7F                 	db	127
   744  00753C  00                 	db	0
   745  00753D  7F                 	db	127
   746  00753E  7F                 	db	127
   747  00753F  06                 	db	6
   748  007540  0C                 	db	12
   749  007541  18                 	db	24
   750  007542  7F                 	db	127
   751  007543  7F                 	db	127
   752  007544  00                 	db	0
   753  007545  1C                 	db	28
   754  007546  3E                 	db	62
   755  007547  63                 	db	99
   756  007548  41                 	db	65
   757  007549  63                 	db	99
   758  00754A  3E                 	db	62
   759  00754B  1C                 	db	28
   760  00754C  00                 	db	0
   761  00754D  41                 	db	65
   762  00754E  7F                 	db	127
   763  00754F  7F                 	db	127
   764  007550  49                 	db	73
   765  007551  09                 	db	9
   766  007552  0F                 	db	15
   767  007553  06                 	db	6
   768  007554  00                 	db	0
   769  007555  1E                 	db	30
   770  007556  3F                 	db	63
   771  007557  21                 	db	33
   772  007558  71                 	db	113
   773  007559  7F                 	db	127
   774  00755A  5E                 	db	94
   775  00755B  00                 	db	0
   776  00755C  00                 	db	0
   777  00755D  41                 	db	65
   778  00755E  7F                 	db	127
   779  00755F  7F                 	db	127
   780  007560  09                 	db	9
   781  007561  19                 	db	25
   782  007562  7F                 	db	127
   783  007563  66                 	db	102
   784  007564  00                 	db	0
   785  007565  26                 	db	38
   786  007566  6F                 	db	111
   787  007567  4D                 	db	77
   788  007568  59                 	db	89
   789  007569  73                 	db	115
   790  00756A  32                 	db	50
   791  00756B  00                 	db	0
   792  00756C  00                 	db	0
   793  00756D  03                 	db	3
   794  00756E  41                 	db	65
   795  00756F  7F                 	db	127
   796  007570  7F                 	db	127
   797  007571  41                 	db	65
   798  007572  03                 	db	3
   799  007573  00                 	db	0
   800  007574  00                 	db	0
   801  007575  7F                 	db	127
   802  007576  7F                 	db	127
   803  007577  40                 	db	64
   804  007578  40                 	db	64
   805  007579  7F                 	db	127
   806  00757A  7F                 	db	127
   807  00757B  00                 	db	0
   808  00757C  00                 	db	0
   809  00757D  1F                 	db	31
   810  00757E  3F                 	db	63
   811  00757F  60                 	db	96
   812  007580  60                 	db	96
   813  007581  3F                 	db	63
   814  007582  1F                 	db	31
   815  007583  00                 	db	0
   816  007584  00                 	db	0
   817  007585  7F                 	db	127
   818  007586  7F                 	db	127
   819  007587  30                 	db	48
   820  007588  18                 	db	24
   821  007589  30                 	db	48
   822  00758A  7F                 	db	127
   823  00758B  7F                 	db	127
   824  00758C  00                 	db	0
   825  00758D  43                 	db	67
   826  00758E  67                 	db	103
   827  00758F  3C                 	db	60
   828  007590  18                 	db	24
   829  007591  3C                 	db	60
   830  007592  67                 	db	103
   831  007593  43                 	db	67
   832  007594  00                 	db	0
   833  007595  07                 	db	7
   834  007596  4F                 	db	79
   835  007597  78                 	db	120
   836  007598  78                 	db	120
   837  007599  4F                 	db	79
   838  00759A  07                 	db	7
   839  00759B  00                 	db	0
   840  00759C  00                 	db	0
   841  00759D  47                 	db	71
   842  00759E  63                 	db	99
   843  00759F  71                 	db	113
   844  0075A0  59                 	db	89
   845  0075A1  4D                 	db	77
   846  0075A2  67                 	db	103
   847  0075A3  73                 	db	115
   848  0075A4  00                 	db	0
   849  0075A5  00                 	db	0
   850  0075A6  7F                 	db	127
   851  0075A7  7F                 	db	127
   852  0075A8  41                 	db	65
   853  0075A9  41                 	db	65
   854  0075AA  00                 	db	0
   855  0075AB  00                 	db	0
   856  0075AC  00                 	db	0
   857  0075AD  01                 	db	1
   858  0075AE  03                 	db	3
   859  0075AF  06                 	db	6
   860  0075B0  0C                 	db	12
   861  0075B1  18                 	db	24
   862  0075B2  30                 	db	48
   863  0075B3  60                 	db	96
   864  0075B4  00                 	db	0
   865  0075B5  00                 	db	0
   866  0075B6  41                 	db	65
   867  0075B7  41                 	db	65
   868  0075B8  7F                 	db	127
   869  0075B9  7F                 	db	127
   870  0075BA  00                 	db	0
   871  0075BB  00                 	db	0
   872  0075BC  00                 	db	0
   873  0075BD  08                 	db	8
   874  0075BE  0C                 	db	12
   875  0075BF  06                 	db	6
   876  0075C0  03                 	db	3
   877  0075C1  06                 	db	6
   878  0075C2  0C                 	db	12
   879  0075C3  08                 	db	8
   880  0075C4  00                 	db	0
   881  0075C5  80                 	db	128
   882  0075C6  80                 	db	128
   883  0075C7  80                 	db	128
   884  0075C8  80                 	db	128
   885  0075C9  80                 	db	128
   886  0075CA  80                 	db	128
   887  0075CB  80                 	db	128
   888  0075CC  80                 	db	128
   889  0075CD  00                 	db	0
   890  0075CE  00                 	db	0
   891  0075CF  03                 	db	3
   892  0075D0  07                 	db	7
   893  0075D1  04                 	db	4
   894  0075D2  00                 	db	0
   895  0075D3  00                 	db	0
   896  0075D4  00                 	db	0
   897  0075D5  20                 	db	32
   898  0075D6  74                 	db	116
   899  0075D7  54                 	db	84
   900  0075D8  54                 	db	84
   901  0075D9  3C                 	db	60
   902  0075DA  78                 	db	120
   903  0075DB  40                 	db	64
   904  0075DC  00                 	db	0
   905  0075DD  41                 	db	65
   906  0075DE  7F                 	db	127
   907  0075DF  3F                 	db	63
   908  0075E0  48                 	db	72
   909  0075E1  48                 	db	72
   910  0075E2  78                 	db	120
   911  0075E3  30                 	db	48
   912  0075E4  00                 	db	0
   913  0075E5  38                 	db	56
   914  0075E6  7C                 	db	124
   915  0075E7  44                 	db	68
   916  0075E8  44                 	db	68
   917  0075E9  6C                 	db	108
   918  0075EA  28                 	db	40
   919  0075EB  00                 	db	0
   920  0075EC  00                 	db	0
   921  0075ED  30                 	db	48
   922  0075EE  78                 	db	120
   923  0075EF  48                 	db	72
   924  0075F0  49                 	db	73
   925  0075F1  3F                 	db	63
   926  0075F2  7F                 	db	127
   927  0075F3  40                 	db	64
   928  0075F4  00                 	db	0
   929  0075F5  38                 	db	56
   930  0075F6  7C                 	db	124
   931  0075F7  54                 	db	84
   932  0075F8  54                 	db	84
   933  0075F9  5C                 	db	92
   934  0075FA  18                 	db	24
   935  0075FB  00                 	db	0
   936  0075FC  00                 	db	0
   937  0075FD  48                 	db	72
   938  0075FE  7E                 	db	126
   939  0075FF  7F                 	db	127
   940  007600  49                 	db	73
   941  007601  03                 	db	3
   942  007602  02                 	db	2
   943  007603  00                 	db	0
   944  007604  00                 	db	0
   945  007605  98                 	db	152
   946  007606  BC                 	db	188
   947  007607  A4                 	db	164
   948  007608  A4                 	db	164
   949  007609  F8                 	db	248
   950  00760A  7C                 	db	124
   951  00760B  04                 	db	4
   952  00760C  00                 	db	0
   953  00760D  41                 	db	65
   954  00760E  7F                 	db	127
   955  00760F  7F                 	db	127
   956  007610  08                 	db	8
   957  007611  04                 	db	4
   958  007612  7C                 	db	124
   959  007613  78                 	db	120
   960  007614  00                 	db	0
   961  007615  00                 	db	0
   962  007616  44                 	db	68
   963  007617  7D                 	db	125
   964  007618  7D                 	db	125
   965  007619  40                 	db	64
   966  00761A  00                 	db	0
   967  00761B  00                 	db	0
   968  00761C  00                 	db	0
   969  00761D  60                 	db	96
   970  00761E  E0                 	db	224
   971  00761F  80                 	db	128
   972  007620  80                 	db	128
   973  007621  FD                 	db	253
   974  007622  7D                 	db	125
   975  007623  00                 	db	0
   976  007624  00                 	db	0
   977  007625  41                 	db	65
   978  007626  7F                 	db	127
   979  007627  7F                 	db	127
   980  007628  10                 	db	16
   981  007629  38                 	db	56
   982  00762A  6C                 	db	108
   983  00762B  44                 	db	68
   984  00762C  00                 	db	0
   985  00762D  00                 	db	0
   986  00762E  41                 	db	65
   987  00762F  7F                 	db	127
   988  007630  7F                 	db	127
   989  007631  40                 	db	64
   990  007632  00                 	db	0
   991  007633  00                 	db	0
   992  007634  00                 	db	0
   993  007635  7C                 	db	124
   994  007636  7C                 	db	124
   995  007637  18                 	db	24
   996  007638  38                 	db	56
   997  007639  1C                 	db	28
   998  00763A  7C                 	db	124
   999  00763B  78                 	db	120
  1000  00763C  00                 	db	0
  1001  00763D  7C                 	db	124
  1002  00763E  7C                 	db	124
  1003  00763F  04                 	db	4
  1004  007640  04                 	db	4
  1005  007641  7C                 	db	124
  1006  007642  78                 	db	120
  1007  007643  00                 	db	0
  1008  007644  00                 	db	0
  1009  007645  38                 	db	56
  1010  007646  7C                 	db	124
  1011  007647  44                 	db	68
  1012  007648  44                 	db	68
  1013  007649  7C                 	db	124
  1014  00764A  38                 	db	56
  1015  00764B  00                 	db	0
  1016  00764C  00                 	db	0
  1017  00764D  84                 	db	132
  1018  00764E  FC                 	db	252
  1019  00764F  F8                 	db	248
  1020  007650  A4                 	db	164
  1021  007651  24                 	db	36
  1022  007652  3C                 	db	60
  1023  007653  18                 	db	24
  1024  007654  00                 	db	0
  1025  007655  18                 	db	24
  1026  007656  3C                 	db	60
  1027  007657  24                 	db	36
  1028  007658  A4                 	db	164
  1029  007659  F8                 	db	248
  1030  00765A  FC                 	db	252
  1031  00765B  84                 	db	132
  1032  00765C  00                 	db	0
  1033  00765D  44                 	db	68
  1034  00765E  7C                 	db	124
  1035  00765F  78                 	db	120
  1036  007660  4C                 	db	76
  1037  007661  04                 	db	4
  1038  007662  1C                 	db	28
  1039  007663  18                 	db	24
  1040  007664  00                 	db	0
  1041  007665  48                 	db	72
  1042  007666  5C                 	db	92
  1043  007667  54                 	db	84
  1044  007668  54                 	db	84
  1045  007669  74                 	db	116
  1046  00766A  24                 	db	36
  1047  00766B  00                 	db	0
  1048  00766C  00                 	db	0
  1049  00766D  00                 	db	0
  1050  00766E  04                 	db	4
  1051  00766F  3E                 	db	62
  1052  007670  7F                 	db	127
  1053  007671  44                 	db	68
  1054  007672  24                 	db	36
  1055  007673  00                 	db	0
  1056  007674  00                 	db	0
  1057  007675  3C                 	db	60
  1058  007676  7C                 	db	124
  1059  007677  40                 	db	64
  1060  007678  40                 	db	64
  1061  007679  3C                 	db	60
  1062  00767A  7C                 	db	124
  1063  00767B  40                 	db	64
  1064  00767C  00                 	db	0
  1065  00767D  1C                 	db	28
  1066  00767E  3C                 	db	60
  1067  00767F  60                 	db	96
  1068  007680  60                 	db	96
  1069  007681  3C                 	db	60
  1070  007682  1C                 	db	28
  1071  007683  00                 	db	0
  1072  007684  00                 	db	0
  1073  007685  3C                 	db	60
  1074  007686  7C                 	db	124
  1075  007687  70                 	db	112
  1076  007688  38                 	db	56
  1077  007689  70                 	db	112
  1078  00768A  7C                 	db	124
  1079  00768B  3C                 	db	60
  1080  00768C  00                 	db	0
  1081  00768D  44                 	db	68
  1082  00768E  6C                 	db	108
  1083  00768F  38                 	db	56
  1084  007690  10                 	db	16
  1085  007691  38                 	db	56
  1086  007692  6C                 	db	108
  1087  007693  44                 	db	68
  1088  007694  00                 	db	0
  1089  007695  9C                 	db	156
  1090  007696  BC                 	db	188
  1091  007697  A0                 	db	160
  1092  007698  A0                 	db	160
  1093  007699  FC                 	db	252
  1094  00769A  7C                 	db	124
  1095  00769B  00                 	db	0
  1096  00769C  00                 	db	0
  1097  00769D  4C                 	db	76
  1098  00769E  64                 	db	100
  1099  00769F  74                 	db	116
  1100  0076A0  5C                 	db	92
  1101  0076A1  4C                 	db	76
  1102  0076A2  64                 	db	100
  1103  0076A3  00                 	db	0
  1104  0076A4  00                 	db	0
  1105  0076A5  08                 	db	8
  1106  0076A6  08                 	db	8
  1107  0076A7  3E                 	db	62
  1108  0076A8  77                 	db	119
  1109  0076A9  41                 	db	65
  1110  0076AA  41                 	db	65
  1111  0076AB  00                 	db	0
  1112  0076AC  00                 	db	0
  1113  0076AD  00                 	db	0
  1114  0076AE  00                 	db	0
  1115  0076AF  00                 	db	0
  1116  0076B0  77                 	db	119
  1117  0076B1  77                 	db	119
  1118  0076B2  00                 	db	0
  1119  0076B3  00                 	db	0
  1120  0076B4  00                 	db	0
  1121  0076B5  41                 	db	65
  1122  0076B6  41                 	db	65
  1123  0076B7  77                 	db	119
  1124  0076B8  3E                 	db	62
  1125  0076B9  08                 	db	8
  1126  0076BA  08                 	db	8
  1127  0076BB  00                 	db	0
  1128  0076BC  00                 	db	0
  1129  0076BD  02                 	db	2
  1130  0076BE  03                 	db	3
  1131  0076BF  01                 	db	1
  1132  0076C0  03                 	db	3
  1133  0076C1  02                 	db	2
  1134  0076C2  03                 	db	3
  1135  0076C3  01                 	db	1
  1136  0076C4  00                 	db	0
  1137  0076C5  70                 	db	112
  1138  0076C6  78                 	db	120
  1139  0076C7  4C                 	db	76
  1140  0076C8  46                 	db	70
  1141  0076C9  4C                 	db	76
  1142  0076CA  78                 	db	120
  1143  0076CB  70                 	db	112
  1144  0076CC  00                 	db	0
  1145  0076CD  0E                 	db	14
  1146  0076CE  9F                 	db	159
  1147  0076CF  91                 	db	145
  1148  0076D0  B1                 	db	177
  1149  0076D1  FB                 	db	251
  1150  0076D2  4A                 	db	74
  1151  0076D3  00                 	db	0
  1152  0076D4  00                 	db	0
  1153  0076D5  3A                 	db	58
  1154  0076D6  7A                 	db	122
  1155  0076D7  40                 	db	64
  1156  0076D8  40                 	db	64
  1157  0076D9  7A                 	db	122
  1158  0076DA  7A                 	db	122
  1159  0076DB  40                 	db	64
  1160  0076DC  00                 	db	0
  1161  0076DD  38                 	db	56
  1162  0076DE  7C                 	db	124
  1163  0076DF  54                 	db	84
  1164  0076E0  55                 	db	85
  1165  0076E1  5D                 	db	93
  1166  0076E2  19                 	db	25
  1167  0076E3  00                 	db	0
  1168  0076E4  00                 	db	0
  1169  0076E5  02                 	db	2
  1170  0076E6  23                 	db	35
  1171  0076E7  75                 	db	117
  1172  0076E8  55                 	db	85
  1173  0076E9  55                 	db	85
  1174  0076EA  7D                 	db	125
  1175  0076EB  7B                 	db	123
  1176  0076EC  42                 	db	66
  1177  0076ED  21                 	db	33
  1178  0076EE  75                 	db	117
  1179  0076EF  54                 	db	84
  1180  0076F0  54                 	db	84
  1181  0076F1  7D                 	db	125
  1182  0076F2  79                 	db	121
  1183  0076F3  40                 	db	64
  1184  0076F4  00                 	db	0
  1185  0076F5  21                 	db	33
  1186  0076F6  75                 	db	117
  1187  0076F7  55                 	db	85
  1188  0076F8  54                 	db	84
  1189  0076F9  7C                 	db	124
  1190  0076FA  78                 	db	120
  1191  0076FB  40                 	db	64
  1192  0076FC  00                 	db	0
  1193  0076FD  20                 	db	32
  1194  0076FE  74                 	db	116
  1195  0076FF  57                 	db	87
  1196  007700  57                 	db	87
  1197  007701  7C                 	db	124
  1198  007702  78                 	db	120
  1199  007703  40                 	db	64
  1200  007704  00                 	db	0
  1201  007705  18                 	db	24
  1202  007706  3C                 	db	60
  1203  007707  A4                 	db	164
  1204  007708  A4                 	db	164
  1205  007709  E4                 	db	228
  1206  00770A  40                 	db	64
  1207  00770B  00                 	db	0
  1208  00770C  00                 	db	0
  1209  00770D  02                 	db	2
  1210  00770E  3B                 	db	59
  1211  00770F  7D                 	db	125
  1212  007710  55                 	db	85
  1213  007711  55                 	db	85
  1214  007712  5D                 	db	93
  1215  007713  1B                 	db	27
  1216  007714  02                 	db	2
  1217  007715  39                 	db	57
  1218  007716  7D                 	db	125
  1219  007717  54                 	db	84
  1220  007718  54                 	db	84
  1221  007719  5D                 	db	93
  1222  00771A  19                 	db	25
  1223  00771B  00                 	db	0
  1224  00771C  00                 	db	0
  1225  00771D  39                 	db	57
  1226  00771E  7D                 	db	125
  1227  00771F  55                 	db	85
  1228  007720  54                 	db	84
  1229  007721  5C                 	db	92
  1230  007722  18                 	db	24
  1231  007723  00                 	db	0
  1232  007724  00                 	db	0
  1233  007725  01                 	db	1
  1234  007726  45                 	db	69
  1235  007727  7C                 	db	124
  1236  007728  7C                 	db	124
  1237  007729  41                 	db	65
  1238  00772A  01                 	db	1
  1239  00772B  00                 	db	0
  1240  00772C  00                 	db	0
  1241  00772D  02                 	db	2
  1242  00772E  03                 	db	3
  1243  00772F  45                 	db	69
  1244  007730  7D                 	db	125
  1245  007731  7D                 	db	125
  1246  007732  43                 	db	67
  1247  007733  02                 	db	2
  1248  007734  00                 	db	0
  1249  007735  01                 	db	1
  1250  007736  45                 	db	69
  1251  007737  7D                 	db	125
  1252  007738  7C                 	db	124
  1253  007739  40                 	db	64
  1254  00773A  00                 	db	0
  1255  00773B  00                 	db	0
  1256  00773C  00                 	db	0
  1257  00773D  79                 	db	121
  1258  00773E  7D                 	db	125
  1259  00773F  16                 	db	22
  1260  007740  12                 	db	18
  1261  007741  16                 	db	22
  1262  007742  7D                 	db	125
  1263  007743  79                 	db	121
  1264  007744  00                 	db	0
  1265  007745  70                 	db	112
  1266  007746  78                 	db	120
  1267  007747  2B                 	db	43
  1268  007748  2B                 	db	43
  1269  007749  78                 	db	120
  1270  00774A  70                 	db	112
  1271  00774B  00                 	db	0
  1272  00774C  00                 	db	0
  1273  00774D  44                 	db	68
  1274  00774E  7C                 	db	124
  1275  00774F  7C                 	db	124
  1276  007750  55                 	db	85
  1277  007751  55                 	db	85
  1278  007752  45                 	db	69
  1279  007753  00                 	db	0
  1280  007754  00                 	db	0
  1281  007755  20                 	db	32
  1282  007756  74                 	db	116
  1283  007757  54                 	db	84
  1284  007758  54                 	db	84
  1285  007759  7C                 	db	124
  1286  00775A  7C                 	db	124
  1287  00775B  54                 	db	84
  1288  00775C  54                 	db	84
  1289  00775D  7C                 	db	124
  1290  00775E  7E                 	db	126
  1291  00775F  0B                 	db	11
  1292  007760  09                 	db	9
  1293  007761  7F                 	db	127
  1294  007762  7F                 	db	127
  1295  007763  49                 	db	73
  1296  007764  00                 	db	0
  1297  007765  32                 	db	50
  1298  007766  7B                 	db	123
  1299  007767  49                 	db	73
  1300  007768  49                 	db	73
  1301  007769  7B                 	db	123
  1302  00776A  32                 	db	50
  1303  00776B  00                 	db	0
  1304  00776C  00                 	db	0
  1305  00776D  32                 	db	50
  1306  00776E  7A                 	db	122
  1307  00776F  48                 	db	72
  1308  007770  48                 	db	72
  1309  007771  7A                 	db	122
  1310  007772  32                 	db	50
  1311  007773  00                 	db	0
  1312  007774  00                 	db	0
  1313  007775  32                 	db	50
  1314  007776  7A                 	db	122
  1315  007777  4A                 	db	74
  1316  007778  48                 	db	72
  1317  007779  78                 	db	120
  1318  00777A  30                 	db	48
  1319  00777B  00                 	db	0
  1320  00777C  00                 	db	0
  1321  00777D  3A                 	db	58
  1322  00777E  7B                 	db	123
  1323  00777F  41                 	db	65
  1324  007780  41                 	db	65
  1325  007781  7B                 	db	123
  1326  007782  7A                 	db	122
  1327  007783  40                 	db	64
  1328  007784  00                 	db	0
  1329  007785  3A                 	db	58
  1330  007786  7A                 	db	122
  1331  007787  42                 	db	66
  1332  007788  40                 	db	64
  1333  007789  78                 	db	120
  1334  00778A  78                 	db	120
  1335  00778B  40                 	db	64
  1336  00778C  00                 	db	0
  1337  00778D  9A                 	db	154
  1338  00778E  BA                 	db	186
  1339  00778F  A0                 	db	160
  1340  007790  A0                 	db	160
  1341  007791  FA                 	db	250
  1342  007792  7A                 	db	122
  1343  007793  00                 	db	0
  1344  007794  00                 	db	0
  1345  007795  01                 	db	1
  1346  007796  19                 	db	25
  1347  007797  3C                 	db	60
  1348  007798  66                 	db	102
  1349  007799  66                 	db	102
  1350  00779A  3C                 	db	60
  1351  00779B  19                 	db	25
  1352  00779C  01                 	db	1
  1353  00779D  3D                 	db	61
  1354  00779E  7D                 	db	125
  1355  00779F  40                 	db	64
  1356  0077A0  40                 	db	64
  1357  0077A1  7D                 	db	125
  1358  0077A2  3D                 	db	61
  1359  0077A3  00                 	db	0
  1360  0077A4  00                 	db	0
  1361  0077A5  18                 	db	24
  1362  0077A6  3C                 	db	60
  1363  0077A7  24                 	db	36
  1364  0077A8  E7                 	db	231
  1365  0077A9  E7                 	db	231
  1366  0077AA  24                 	db	36
  1367  0077AB  24                 	db	36
  1368  0077AC  00                 	db	0
  1369  0077AD  68                 	db	104
  1370  0077AE  7E                 	db	126
  1371  0077AF  7F                 	db	127
  1372  0077B0  49                 	db	73
  1373  0077B1  43                 	db	67
  1374  0077B2  66                 	db	102
  1375  0077B3  20                 	db	32
  1376  0077B4  00                 	db	0
  1377  0077B5  2B                 	db	43
  1378  0077B6  2F                 	db	47
  1379  0077B7  FC                 	db	252
  1380  0077B8  FC                 	db	252
  1381  0077B9  2F                 	db	47
  1382  0077BA  2B                 	db	43
  1383  0077BB  00                 	db	0
  1384  0077BC  00                 	db	0
  1385  0077BD  FF                 	db	255
  1386  0077BE  FF                 	db	255
  1387  0077BF  09                 	db	9
  1388  0077C0  09                 	db	9
  1389  0077C1  2F                 	db	47
  1390  0077C2  F6                 	db	246
  1391  0077C3  F8                 	db	248
  1392  0077C4  A0                 	db	160
  1393  0077C5  40                 	db	64
  1394  0077C6  C0                 	db	192
  1395  0077C7  88                 	db	136
  1396  0077C8  FE                 	db	254
  1397  0077C9  7F                 	db	127
  1398  0077CA  09                 	db	9
  1399  0077CB  03                 	db	3
  1400  0077CC  02                 	db	2
  1401  0077CD  20                 	db	32
  1402  0077CE  74                 	db	116
  1403  0077CF  54                 	db	84
  1404  0077D0  55                 	db	85
  1405  0077D1  7D                 	db	125
  1406  0077D2  79                 	db	121
  1407  0077D3  40                 	db	64
  1408  0077D4  00                 	db	0
  1409  0077D5  00                 	db	0
  1410  0077D6  44                 	db	68
  1411  0077D7  7D                 	db	125
  1412  0077D8  7D                 	db	125
  1413  0077D9  41                 	db	65
  1414  0077DA  00                 	db	0
  1415  0077DB  00                 	db	0
  1416  0077DC  00                 	db	0
  1417  0077DD  30                 	db	48
  1418  0077DE  78                 	db	120
  1419  0077DF  48                 	db	72
  1420  0077E0  4A                 	db	74
  1421  0077E1  7A                 	db	122
  1422  0077E2  32                 	db	50
  1423  0077E3  00                 	db	0
  1424  0077E4  00                 	db	0
  1425  0077E5  38                 	db	56
  1426  0077E6  78                 	db	120
  1427  0077E7  40                 	db	64
  1428  0077E8  42                 	db	66
  1429  0077E9  7A                 	db	122
  1430  0077EA  7A                 	db	122
  1431  0077EB  40                 	db	64
  1432  0077EC  00                 	db	0
  1433  0077ED  7A                 	db	122
  1434  0077EE  7A                 	db	122
  1435  0077EF  0A                 	db	10
  1436  0077F0  0A                 	db	10
  1437  0077F1  7A                 	db	122
  1438  0077F2  70                 	db	112
  1439  0077F3  00                 	db	0
  1440  0077F4  00                 	db	0
  1441  0077F5  7D                 	db	125
  1442  0077F6  7D                 	db	125
  1443  0077F7  19                 	db	25
  1444  0077F8  31                 	db	49
  1445  0077F9  7D                 	db	125
  1446  0077FA  7D                 	db	125
  1447  0077FB  00                 	db	0
  1448  0077FC  00                 	db	0
  1449  0077FD  00                 	db	0
  1450  0077FE  26                 	db	38
  1451  0077FF  2F                 	db	47
  1452  007800  29                 	db	41
  1453  007801  2F                 	db	47
  1454  007802  2F                 	db	47
  1455  007803  28                 	db	40
  1456  007804  00                 	db	0
  1457  007805  00                 	db	0
  1458  007806  26                 	db	38
  1459  007807  2F                 	db	47
  1460  007808  29                 	db	41
  1461  007809  2F                 	db	47
  1462  00780A  26                 	db	38
  1463  00780B  00                 	db	0
  1464  00780C  00                 	db	0
  1465  00780D  30                 	db	48
  1466  00780E  78                 	db	120
  1467  00780F  4D                 	db	77
  1468  007810  45                 	db	69
  1469  007811  60                 	db	96
  1470  007812  20                 	db	32
  1471  007813  00                 	db	0
  1472  007814  00                 	db	0
  1473  007815  38                 	db	56
  1474  007816  38                 	db	56
  1475  007817  08                 	db	8
  1476  007818  08                 	db	8
  1477  007819  08                 	db	8
  1478  00781A  08                 	db	8
  1479  00781B  00                 	db	0
  1480  00781C  00                 	db	0
  1481  00781D  08                 	db	8
  1482  00781E  08                 	db	8
  1483  00781F  08                 	db	8
  1484  007820  08                 	db	8
  1485  007821  38                 	db	56
  1486  007822  38                 	db	56
  1487  007823  00                 	db	0
  1488  007824  00                 	db	0
  1489  007825  4F                 	db	79
  1490  007826  6F                 	db	111
  1491  007827  30                 	db	48
  1492  007828  18                 	db	24
  1493  007829  CC                 	db	204
  1494  00782A  EE                 	db	238
  1495  00782B  BB                 	db	187
  1496  00782C  91                 	db	145
  1497  00782D  4F                 	db	79
  1498  00782E  6F                 	db	111
  1499  00782F  30                 	db	48
  1500  007830  18                 	db	24
  1501  007831  6C                 	db	108
  1502  007832  76                 	db	118
  1503  007833  FB                 	db	251
  1504  007834  F9                 	db	249
  1505  007835  00                 	db	0
  1506  007836  00                 	db	0
  1507  007837  00                 	db	0
  1508  007838  7B                 	db	123
  1509  007839  7B                 	db	123
  1510  00783A  00                 	db	0
  1511  00783B  00                 	db	0
  1512  00783C  00                 	db	0
  1513  00783D  08                 	db	8
  1514  00783E  1C                 	db	28
  1515  00783F  36                 	db	54
  1516  007840  22                 	db	34
  1517  007841  08                 	db	8
  1518  007842  1C                 	db	28
  1519  007843  36                 	db	54
  1520  007844  22                 	db	34
  1521  007845  22                 	db	34
  1522  007846  36                 	db	54
  1523  007847  1C                 	db	28
  1524  007848  08                 	db	8
  1525  007849  22                 	db	34
  1526  00784A  36                 	db	54
  1527  00784B  1C                 	db	28
  1528  00784C  08                 	db	8
  1529  00784D  AA                 	db	170
  1530  00784E  00                 	db	0
  1531  00784F  55                 	db	85
  1532  007850  00                 	db	0
  1533  007851  AA                 	db	170
  1534  007852  00                 	db	0
  1535  007853  55                 	db	85
  1536  007854  00                 	db	0
  1537  007855  AA                 	db	170
  1538  007856  55                 	db	85
  1539  007857  AA                 	db	170
  1540  007858  55                 	db	85
  1541  007859  AA                 	db	170
  1542  00785A  55                 	db	85
  1543  00785B  AA                 	db	170
  1544  00785C  55                 	db	85
  1545  00785D  DD                 	db	221
  1546  00785E  FF                 	db	255
  1547  00785F  AA                 	db	170
  1548  007860  77                 	db	119
  1549  007861  DD                 	db	221
  1550  007862  AA                 	db	170
  1551  007863  FF                 	db	255
  1552  007864  77                 	db	119
  1553  007865  00                 	db	0
  1554  007866  00                 	db	0
  1555  007867  00                 	db	0
  1556  007868  FF                 	db	255
  1557  007869  FF                 	db	255
  1558  00786A  00                 	db	0
  1559  00786B  00                 	db	0
  1560  00786C  00                 	db	0
  1561  00786D  10                 	db	16
  1562  00786E  10                 	db	16
  1563  00786F  10                 	db	16
  1564  007870  FF                 	db	255
  1565  007871  FF                 	db	255
  1566  007872  00                 	db	0
  1567  007873  00                 	db	0
  1568  007874  00                 	db	0
  1569  007875  14                 	db	20
  1570  007876  14                 	db	20
  1571  007877  14                 	db	20
  1572  007878  FF                 	db	255
  1573  007879  FF                 	db	255
  1574  00787A  00                 	db	0
  1575  00787B  00                 	db	0
  1576  00787C  00                 	db	0
  1577  00787D  10                 	db	16
  1578  00787E  10                 	db	16
  1579  00787F  FF                 	db	255
  1580  007880  FF                 	db	255
  1581  007881  00                 	db	0
  1582  007882  FF                 	db	255
  1583  007883  FF                 	db	255
  1584  007884  00                 	db	0
  1585  007885  10                 	db	16
  1586  007886  10                 	db	16
  1587  007887  F0                 	db	240
  1588  007888  F0                 	db	240
  1589  007889  10                 	db	16
  1590  00788A  F0                 	db	240
  1591  00788B  F0                 	db	240
  1592  00788C  00                 	db	0
  1593  00788D  14                 	db	20
  1594  00788E  14                 	db	20
  1595  00788F  14                 	db	20
  1596  007890  FC                 	db	252
  1597  007891  FC                 	db	252
  1598  007892  00                 	db	0
  1599  007893  00                 	db	0
  1600  007894  00                 	db	0
  1601  007895  14                 	db	20
  1602  007896  14                 	db	20
  1603  007897  F7                 	db	247
  1604  007898  F7                 	db	247
  1605  007899  00                 	db	0
  1606  00789A  FF                 	db	255
  1607  00789B  FF                 	db	255
  1608  00789C  00                 	db	0
  1609  00789D  00                 	db	0
  1610  00789E  00                 	db	0
  1611  00789F  FF                 	db	255
  1612  0078A0  FF                 	db	255
  1613  0078A1  00                 	db	0
  1614  0078A2  FF                 	db	255
  1615  0078A3  FF                 	db	255
  1616  0078A4  00                 	db	0
  1617  0078A5  14                 	db	20
  1618  0078A6  14                 	db	20
  1619  0078A7  F4                 	db	244
  1620  0078A8  F4                 	db	244
  1621  0078A9  04                 	db	4
  1622  0078AA  FC                 	db	252
  1623  0078AB  FC                 	db	252
  1624  0078AC  00                 	db	0
  1625  0078AD  14                 	db	20
  1626  0078AE  14                 	db	20
  1627  0078AF  17                 	db	23
  1628  0078B0  17                 	db	23
  1629  0078B1  10                 	db	16
  1630  0078B2  1F                 	db	31
  1631  0078B3  1F                 	db	31
  1632  0078B4  00                 	db	0
  1633  0078B5  10                 	db	16
  1634  0078B6  10                 	db	16
  1635  0078B7  1F                 	db	31
  1636  0078B8  1F                 	db	31
  1637  0078B9  10                 	db	16
  1638  0078BA  1F                 	db	31
  1639  0078BB  1F                 	db	31
  1640  0078BC  00                 	db	0
  1641  0078BD  14                 	db	20
  1642  0078BE  14                 	db	20
  1643  0078BF  14                 	db	20
  1644  0078C0  1F                 	db	31
  1645  0078C1  1F                 	db	31
  1646  0078C2  00                 	db	0
  1647  0078C3  00                 	db	0
  1648  0078C4  00                 	db	0
  1649  0078C5  10                 	db	16
  1650  0078C6  10                 	db	16
  1651  0078C7  10                 	db	16
  1652  0078C8  F0                 	db	240
  1653  0078C9  F0                 	db	240
  1654  0078CA  00                 	db	0
  1655  0078CB  00                 	db	0
  1656  0078CC  00                 	db	0
  1657  0078CD  00                 	db	0
  1658  0078CE  00                 	db	0
  1659  0078CF  00                 	db	0
  1660  0078D0  1F                 	db	31
  1661  0078D1  1F                 	db	31
  1662  0078D2  10                 	db	16
  1663  0078D3  10                 	db	16
  1664  0078D4  10                 	db	16
  1665  0078D5  10                 	db	16
  1666  0078D6  10                 	db	16
  1667  0078D7  10                 	db	16
  1668  0078D8  1F                 	db	31
  1669  0078D9  1F                 	db	31
  1670  0078DA  10                 	db	16
  1671  0078DB  10                 	db	16
  1672  0078DC  10                 	db	16
  1673  0078DD  10                 	db	16
  1674  0078DE  10                 	db	16
  1675  0078DF  10                 	db	16
  1676  0078E0  F0                 	db	240
  1677  0078E1  F0                 	db	240
  1678  0078E2  10                 	db	16
  1679  0078E3  10                 	db	16
  1680  0078E4  10                 	db	16
  1681  0078E5  00                 	db	0
  1682  0078E6  00                 	db	0
  1683  0078E7  00                 	db	0
  1684  0078E8  FF                 	db	255
  1685  0078E9  FF                 	db	255
  1686  0078EA  10                 	db	16
  1687  0078EB  10                 	db	16
  1688  0078EC  10                 	db	16
  1689  0078ED  10                 	db	16
  1690  0078EE  10                 	db	16
  1691  0078EF  10                 	db	16
  1692  0078F0  10                 	db	16
  1693  0078F1  10                 	db	16
  1694  0078F2  10                 	db	16
  1695  0078F3  10                 	db	16
  1696  0078F4  10                 	db	16
  1697  0078F5  10                 	db	16
  1698  0078F6  10                 	db	16
  1699  0078F7  10                 	db	16
  1700  0078F8  FF                 	db	255
  1701  0078F9  FF                 	db	255
  1702  0078FA  10                 	db	16
  1703  0078FB  10                 	db	16
  1704  0078FC  10                 	db	16
  1705  0078FD  00                 	db	0
  1706  0078FE  00                 	db	0
  1707  0078FF  00                 	db	0
  1708  007900  FF                 	db	255
  1709  007901  FF                 	db	255
  1710  007902  14                 	db	20
  1711  007903  14                 	db	20
  1712  007904  14                 	db	20
  1713  007905  00                 	db	0
  1714  007906  00                 	db	0
  1715  007907  FF                 	db	255
  1716  007908  FF                 	db	255
  1717  007909  00                 	db	0
  1718  00790A  FF                 	db	255
  1719  00790B  FF                 	db	255
  1720  00790C  10                 	db	16
  1721  00790D  00                 	db	0
  1722  00790E  00                 	db	0
  1723  00790F  1F                 	db	31
  1724  007910  1F                 	db	31
  1725  007911  10                 	db	16
  1726  007912  17                 	db	23
  1727  007913  17                 	db	23
  1728  007914  14                 	db	20
  1729  007915  00                 	db	0
  1730  007916  00                 	db	0
  1731  007917  FC                 	db	252
  1732  007918  FC                 	db	252
  1733  007919  04                 	db	4
  1734  00791A  F4                 	db	244
  1735  00791B  F4                 	db	244
  1736  00791C  14                 	db	20
  1737  00791D  14                 	db	20
  1738  00791E  14                 	db	20
  1739  00791F  17                 	db	23
  1740  007920  17                 	db	23
  1741  007921  10                 	db	16
  1742  007922  17                 	db	23
  1743  007923  17                 	db	23
  1744  007924  14                 	db	20
  1745  007925  14                 	db	20
  1746  007926  14                 	db	20
  1747  007927  F4                 	db	244
  1748  007928  F4                 	db	244
  1749  007929  04                 	db	4
  1750  00792A  F4                 	db	244
  1751  00792B  F4                 	db	244
  1752  00792C  14                 	db	20
  1753  00792D  00                 	db	0
  1754  00792E  00                 	db	0
  1755  00792F  FF                 	db	255
  1756  007930  FF                 	db	255
  1757  007931  00                 	db	0
  1758  007932  F7                 	db	247
  1759  007933  F7                 	db	247
  1760  007934  14                 	db	20
  1761  007935  14                 	db	20
  1762  007936  14                 	db	20
  1763  007937  14                 	db	20
  1764  007938  14                 	db	20
  1765  007939  14                 	db	20
  1766  00793A  14                 	db	20
  1767  00793B  14                 	db	20
  1768  00793C  14                 	db	20
  1769  00793D  14                 	db	20
  1770  00793E  14                 	db	20
  1771  00793F  F7                 	db	247
  1772  007940  F7                 	db	247
  1773  007941  00                 	db	0
  1774  007942  F7                 	db	247
  1775  007943  F7                 	db	247
  1776  007944  14                 	db	20
  1777  007945  14                 	db	20
  1778  007946  14                 	db	20
  1779  007947  14                 	db	20
  1780  007948  17                 	db	23
  1781  007949  17                 	db	23
  1782  00794A  14                 	db	20
  1783  00794B  14                 	db	20
  1784  00794C  14                 	db	20
  1785  00794D  10                 	db	16
  1786  00794E  10                 	db	16
  1787  00794F  1F                 	db	31
  1788  007950  1F                 	db	31
  1789  007951  10                 	db	16
  1790  007952  1F                 	db	31
  1791  007953  1F                 	db	31
  1792  007954  10                 	db	16
  1793  007955  14                 	db	20
  1794  007956  14                 	db	20
  1795  007957  14                 	db	20
  1796  007958  F4                 	db	244
  1797  007959  F4                 	db	244
  1798  00795A  14                 	db	20
  1799  00795B  14                 	db	20
  1800  00795C  14                 	db	20
  1801  00795D  10                 	db	16
  1802  00795E  10                 	db	16
  1803  00795F  F0                 	db	240
  1804  007960  F0                 	db	240
  1805  007961  10                 	db	16
  1806  007962  F0                 	db	240
  1807  007963  F0                 	db	240
  1808  007964  10                 	db	16
  1809  007965  00                 	db	0
  1810  007966  00                 	db	0
  1811  007967  1F                 	db	31
  1812  007968  1F                 	db	31
  1813  007969  10                 	db	16
  1814  00796A  1F                 	db	31
  1815  00796B  1F                 	db	31
  1816  00796C  10                 	db	16
  1817  00796D  00                 	db	0
  1818  00796E  00                 	db	0
  1819  00796F  00                 	db	0
  1820  007970  1F                 	db	31
  1821  007971  1F                 	db	31
  1822  007972  14                 	db	20
  1823  007973  14                 	db	20
  1824  007974  14                 	db	20
  1825  007975  00                 	db	0
  1826  007976  00                 	db	0
  1827  007977  00                 	db	0
  1828  007978  FC                 	db	252
  1829  007979  FC                 	db	252
  1830  00797A  14                 	db	20
  1831  00797B  14                 	db	20
  1832  00797C  14                 	db	20
  1833  00797D  00                 	db	0
  1834  00797E  00                 	db	0
  1835  00797F  F0                 	db	240
  1836  007980  F0                 	db	240
  1837  007981  10                 	db	16
  1838  007982  F0                 	db	240
  1839  007983  F0                 	db	240
  1840  007984  10                 	db	16
  1841  007985  10                 	db	16
  1842  007986  10                 	db	16
  1843  007987  FF                 	db	255
  1844  007988  FF                 	db	255
  1845  007989  10                 	db	16
  1846  00798A  FF                 	db	255
  1847  00798B  FF                 	db	255
  1848  00798C  10                 	db	16
  1849  00798D  14                 	db	20
  1850  00798E  14                 	db	20
  1851  00798F  14                 	db	20
  1852  007990  FF                 	db	255
  1853  007991  FF                 	db	255
  1854  007992  14                 	db	20
  1855  007993  14                 	db	20
  1856  007994  14                 	db	20
  1857  007995  10                 	db	16
  1858  007996  10                 	db	16
  1859  007997  10                 	db	16
  1860  007998  1F                 	db	31
  1861  007999  1F                 	db	31
  1862  00799A  00                 	db	0
  1863  00799B  00                 	db	0
  1864  00799C  00                 	db	0
  1865  00799D  00                 	db	0
  1866  00799E  00                 	db	0
  1867  00799F  00                 	db	0
  1868  0079A0  F0                 	db	240
  1869  0079A1  F0                 	db	240
  1870  0079A2  10                 	db	16
  1871  0079A3  10                 	db	16
  1872  0079A4  10                 	db	16
  1873  0079A5  FF                 	db	255
  1874  0079A6  FF                 	db	255
  1875  0079A7  FF                 	db	255
  1876  0079A8  FF                 	db	255
  1877  0079A9  FF                 	db	255
  1878  0079AA  FF                 	db	255
  1879  0079AB  FF                 	db	255
  1880  0079AC  FF                 	db	255
  1881  0079AD  F0                 	db	240
  1882  0079AE  F0                 	db	240
  1883  0079AF  F0                 	db	240
  1884  0079B0  F0                 	db	240
  1885  0079B1  F0                 	db	240
  1886  0079B2  F0                 	db	240
  1887  0079B3  F0                 	db	240
  1888  0079B4  F0                 	db	240
  1889  0079B5  FF                 	db	255
  1890  0079B6  FF                 	db	255
  1891  0079B7  FF                 	db	255
  1892  0079B8  FF                 	db	255
  1893  0079B9  00                 	db	0
  1894  0079BA  00                 	db	0
  1895  0079BB  00                 	db	0
  1896  0079BC  00                 	db	0
  1897  0079BD  00                 	db	0
  1898  0079BE  00                 	db	0
  1899  0079BF  00                 	db	0
  1900  0079C0  00                 	db	0
  1901  0079C1  FF                 	db	255
  1902  0079C2  FF                 	db	255
  1903  0079C3  FF                 	db	255
  1904  0079C4  FF                 	db	255
  1905  0079C5  0F                 	db	15
  1906  0079C6  0F                 	db	15
  1907  0079C7  0F                 	db	15
  1908  0079C8  0F                 	db	15
  1909  0079C9  0F                 	db	15
  1910  0079CA  0F                 	db	15
  1911  0079CB  0F                 	db	15
  1912  0079CC  0F                 	db	15
  1913  0079CD  38                 	db	56
  1914  0079CE  7C                 	db	124
  1915  0079CF  44                 	db	68
  1916  0079D0  6C                 	db	108
  1917  0079D1  38                 	db	56
  1918  0079D2  6C                 	db	108
  1919  0079D3  44                 	db	68
  1920  0079D4  00                 	db	0
  1921  0079D5  FC                 	db	252
  1922  0079D6  FE                 	db	254
  1923  0079D7  2A                 	db	42
  1924  0079D8  2A                 	db	42
  1925  0079D9  3E                 	db	62
  1926  0079DA  14                 	db	20
  1927  0079DB  00                 	db	0
  1928  0079DC  00                 	db	0
  1929  0079DD  7E                 	db	126
  1930  0079DE  7E                 	db	126
  1931  0079DF  02                 	db	2
  1932  0079E0  02                 	db	2
  1933  0079E1  06                 	db	6
  1934  0079E2  06                 	db	6
  1935  0079E3  00                 	db	0
  1936  0079E4  00                 	db	0
  1937  0079E5  02                 	db	2
  1938  0079E6  7E                 	db	126
  1939  0079E7  7E                 	db	126
  1940  0079E8  02                 	db	2
  1941  0079E9  7E                 	db	126
  1942  0079EA  7E                 	db	126
  1943  0079EB  02                 	db	2
  1944  0079EC  00                 	db	0
  1945  0079ED  63                 	db	99
  1946  0079EE  77                 	db	119
  1947  0079EF  5D                 	db	93
  1948  0079F0  49                 	db	73
  1949  0079F1  63                 	db	99
  1950  0079F2  63                 	db	99
  1951  0079F3  00                 	db	0
  1952  0079F4  00                 	db	0
  1953  0079F5  38                 	db	56
  1954  0079F6  7C                 	db	124
  1955  0079F7  44                 	db	68
  1956  0079F8  7C                 	db	124
  1957  0079F9  3C                 	db	60
  1958  0079FA  04                 	db	4
  1959  0079FB  04                 	db	4
  1960  0079FC  00                 	db	0
  1961  0079FD  80                 	db	128
  1962  0079FE  FE                 	db	254
  1963  0079FF  7E                 	db	126
  1964  007A00  20                 	db	32
  1965  007A01  20                 	db	32
  1966  007A02  3E                 	db	62
  1967  007A03  1E                 	db	30
  1968  007A04  00                 	db	0
  1969  007A05  04                 	db	4
  1970  007A06  06                 	db	6
  1971  007A07  02                 	db	2
  1972  007A08  7E                 	db	126
  1973  007A09  7C                 	db	124
  1974  007A0A  06                 	db	6
  1975  007A0B  02                 	db	2
  1976  007A0C  00                 	db	0
  1977  007A0D  99                 	db	153
  1978  007A0E  BD                 	db	189
  1979  007A0F  E7                 	db	231
  1980  007A10  E7                 	db	231
  1981  007A11  BD                 	db	189
  1982  007A12  99                 	db	153
  1983  007A13  00                 	db	0
  1984  007A14  00                 	db	0
  1985  007A15  1C                 	db	28
  1986  007A16  3E                 	db	62
  1987  007A17  6B                 	db	107
  1988  007A18  49                 	db	73
  1989  007A19  6B                 	db	107
  1990  007A1A  3E                 	db	62
  1991  007A1B  1C                 	db	28
  1992  007A1C  00                 	db	0
  1993  007A1D  4C                 	db	76
  1994  007A1E  7E                 	db	126
  1995  007A1F  73                 	db	115
  1996  007A20  01                 	db	1
  1997  007A21  73                 	db	115
  1998  007A22  7E                 	db	126
  1999  007A23  4C                 	db	76
  2000  007A24  00                 	db	0
  2001  007A25  30                 	db	48
  2002  007A26  78                 	db	120
  2003  007A27  4A                 	db	74
  2004  007A28  4F                 	db	79
  2005  007A29  7D                 	db	125
  2006  007A2A  39                 	db	57
  2007  007A2B  00                 	db	0
  2008  007A2C  00                 	db	0
  2009  007A2D  18                 	db	24
  2010  007A2E  3C                 	db	60
  2011  007A2F  24                 	db	36
  2012  007A30  3C                 	db	60
  2013  007A31  3C                 	db	60
  2014  007A32  24                 	db	36
  2015  007A33  3C                 	db	60
  2016  007A34  18                 	db	24
  2017  007A35  98                 	db	152
  2018  007A36  FC                 	db	252
  2019  007A37  64                 	db	100
  2020  007A38  3C                 	db	60
  2021  007A39  3E                 	db	62
  2022  007A3A  27                 	db	39
  2023  007A3B  3D                 	db	61
  2024  007A3C  18                 	db	24
  2025  007A3D  00                 	db	0
  2026  007A3E  00                 	db	0
  2027  007A3F  00                 	db	0
  2028  007A40  00                 	db	0
  2029  007A41  00                 	db	0
  2030  007A42  00                 	db	0
  2031  007A43  00                 	db	0
  2032  007A44  00                 	db	0
  2033  007A45  00                 	db	0
  2034  007A46  00                 	db	0
  2035  007A47  00                 	db	0
  2036  007A48  00                 	db	0
  2037  007A49  00                 	db	0
  2038  007A4A  00                 	db	0
  2039  007A4B  00                 	db	0
  2040  007A4C  00                 	db	0
  2041  007A4D  00                 	db	0
  2042  007A4E  00                 	db	0
  2043  007A4F  00                 	db	0
  2044  007A50  00                 	db	0
  2045  007A51  00                 	db	0
  2046  007A52  00                 	db	0
  2047  007A53  00                 	db	0
  2048  007A54  00                 	db	0
  2049  007A55  00                 	db	0
  2050  007A56  00                 	db	0
  2051  007A57  00                 	db	0
  2052  007A58  00                 	db	0
  2053  007A59  00                 	db	0
  2054  007A5A  00                 	db	0
  2055  007A5B  00                 	db	0
  2056  007A5C  00                 	db	0
  2057  007A5D  00                 	db	0
  2058  007A5E  00                 	db	0
  2059  007A5F  00                 	db	0
  2060  007A60  00                 	db	0
  2061  007A61  00                 	db	0
  2062  007A62  00                 	db	0
  2063  007A63  00                 	db	0
  2064  007A64  00                 	db	0
  2065  007A65  00                 	db	0
  2066  007A66  00                 	db	0
  2067  007A67  00                 	db	0
  2068  007A68  00                 	db	0
  2069  007A69  00                 	db	0
  2070  007A6A  00                 	db	0
  2071  007A6B  00                 	db	0
  2072  007A6C  00                 	db	0
  2073  007A6D  00                 	db	0
  2074  007A6E  00                 	db	0
  2075  007A6F  00                 	db	0
  2076  007A70  00                 	db	0
  2077  007A71  00                 	db	0
  2078  007A72  00                 	db	0
  2079  007A73  00                 	db	0
  2080  007A74  00                 	db	0
  2081  007A75  00                 	db	0
  2082  007A76  00                 	db	0
  2083  007A77  00                 	db	0
  2084  007A78  00                 	db	0
  2085  007A79  00                 	db	0
  2086  007A7A  00                 	db	0
  2087  007A7B  00                 	db	0
  2088  007A7C  00                 	db	0
  2089  007A7D  00                 	db	0
  2090  007A7E  00                 	db	0
  2091  007A7F  00                 	db	0
  2092  007A80  00                 	db	0
  2093  007A81  00                 	db	0
  2094  007A82  00                 	db	0
  2095  007A83  00                 	db	0
  2096  007A84  00                 	db	0
  2097  007A85  00                 	db	0
  2098  007A86  00                 	db	0
  2099  007A87  00                 	db	0
  2100  007A88  00                 	db	0
  2101  007A89  00                 	db	0
  2102  007A8A  00                 	db	0
  2103  007A8B  00                 	db	0
  2104  007A8C  00                 	db	0
  2105  007A8D  00                 	db	0
  2106  007A8E  00                 	db	0
  2107  007A8F  00                 	db	0
  2108  007A90  00                 	db	0
  2109  007A91  00                 	db	0
  2110  007A92  00                 	db	0
  2111  007A93  00                 	db	0
  2112  007A94  00                 	db	0
  2113  007A95  00                 	db	0
  2114  007A96  00                 	db	0
  2115  007A97  00                 	db	0
  2116  007A98  00                 	db	0
  2117  007A99  00                 	db	0
  2118  007A9A  00                 	db	0
  2119  007A9B  00                 	db	0
  2120  007A9C  00                 	db	0
  2121  007A9D  00                 	db	0
  2122  007A9E  00                 	db	0
  2123  007A9F  00                 	db	0
  2124  007AA0  00                 	db	0
  2125  007AA1  00                 	db	0
  2126  007AA2  00                 	db	0
  2127  007AA3  00                 	db	0
  2128  007AA4  00                 	db	0
  2129  007AA5  00                 	db	0
  2130  007AA6  00                 	db	0
  2131  007AA7  00                 	db	0
  2132  007AA8  00                 	db	0
  2133  007AA9  00                 	db	0
  2134  007AAA  00                 	db	0
  2135  007AAB  00                 	db	0
  2136  007AAC  00                 	db	0
  2137  007AAD  00                 	db	0
  2138  007AAE  00                 	db	0
  2139  007AAF  00                 	db	0
  2140  007AB0  00                 	db	0
  2141  007AB1  00                 	db	0
  2142  007AB2  00                 	db	0
  2143  007AB3  00                 	db	0
  2144  007AB4  00                 	db	0
  2145  007AB5  00                 	db	0
  2146  007AB6  00                 	db	0
  2147  007AB7  00                 	db	0
  2148  007AB8  00                 	db	0
  2149  007AB9  00                 	db	0
  2150  007ABA  00                 	db	0
  2151  007ABB  00                 	db	0
  2152  007ABC  00                 	db	0
  2153  007ABD  00                 	db	0
  2154  007ABE  00                 	db	0
  2155  007ABF  00                 	db	0
  2156  007AC0  00                 	db	0
  2157  007AC1  00                 	db	0
  2158  007AC2  00                 	db	0
  2159  007AC3  00                 	db	0
  2160  007AC4  00                 	db	0
  2161  007AC5  00                 	db	0
  2162  007AC6  00                 	db	0
  2163  007AC7  00                 	db	0
  2164  007AC8  00                 	db	0
  2165  007AC9  00                 	db	0
  2166  007ACA  00                 	db	0
  2167  007ACB  00                 	db	0
  2168  007ACC  00                 	db	0
  2169  007ACD                     __end_of_Font8x8:
  2170                           	opt callstack 0
  2171  007ACD  00                 	db	0
  2172  007ACE  00                 	db	0
  2173  007ACF  00                 	db	0
  2174  007AD0  00                 	db	0
  2175  007AD1  00                 	db	0
  2176  007AD2  00                 	db	0
  2177  007AD3  00                 	db	0
  2178  007AD4  00                 	db	0
  2179  007AD5  80                 	db	128
  2180  007AD6  80                 	db	128
  2181  007AD7  80                 	db	128
  2182  007AD8  80                 	db	128
  2183  007AD9  00                 	db	0
  2184  007ADA  00                 	db	0
  2185  007ADB  00                 	db	0
  2186  007ADC  00                 	db	0
  2187  007ADD  00                 	db	0
  2188  007ADE  00                 	db	0
  2189  007ADF  00                 	db	0
  2190  007AE0  00                 	db	0
  2191  007AE1  00                 	db	0
  2192  007AE2  00                 	db	0
  2193  007AE3  00                 	db	0
  2194  007AE4  00                 	db	0
  2195  007AE5  00                 	db	0
  2196  007AE6  00                 	db	0
  2197  007AE7  00                 	db	0
  2198  007AE8  00                 	db	0
  2199  007AE9  80                 	db	128
  2200  007AEA  00                 	db	0
  2201  007AEB  00                 	db	0
  2202  007AEC  80                 	db	128
  2203  007AED  00                 	db	0
  2204  007AEE  00                 	db	0
  2205  007AEF  80                 	db	128
  2206  007AF0  00                 	db	0
  2207  007AF1  00                 	db	0
  2208  007AF2  00                 	db	0
  2209  007AF3  00                 	db	0
  2210  007AF4  00                 	db	0
  2211  007AF5  00                 	db	0
  2212  007AF6  00                 	db	0
  2213  007AF7  00                 	db	0
  2214  007AF8  00                 	db	0
  2215  007AF9  00                 	db	0
  2216  007AFA  00                 	db	0
  2217  007AFB  00                 	db	0
  2218  007AFC  00                 	db	0
  2219  007AFD  00                 	db	0
  2220  007AFE  00                 	db	0
  2221  007AFF  00                 	db	0
  2222  007B00  00                 	db	0
  2223  007B01  00                 	db	0
  2224  007B02  00                 	db	0
  2225  007B03  00                 	db	0
  2226  007B04  00                 	db	0
  2227  007B05  00                 	db	0
  2228  007B06  00                 	db	0
  2229  007B07  00                 	db	0
  2230  007B08  00                 	db	0
  2231  007B09  00                 	db	0
  2232  007B0A  00                 	db	0
  2233  007B0B  00                 	db	0
  2234  007B0C  00                 	db	0
  2235  007B0D  00                 	db	0
  2236  007B0E  00                 	db	0
  2237  007B0F  00                 	db	0
  2238  007B10  00                 	db	0
  2239  007B11  00                 	db	0
  2240  007B12  00                 	db	0
  2241  007B13  00                 	db	0
  2242  007B14  00                 	db	0
  2243  007B15  00                 	db	0
  2244  007B16  00                 	db	0
  2245  007B17  00                 	db	0
  2246  007B18  00                 	db	0
  2247  007B19  00                 	db	0
  2248  007B1A  00                 	db	0
  2249  007B1B  00                 	db	0
  2250  007B1C  00                 	db	0
  2251  007B1D  00                 	db	0
  2252  007B1E  00                 	db	0
  2253  007B1F  00                 	db	0
  2254  007B20  00                 	db	0
  2255  007B21  00                 	db	0
  2256  007B22  00                 	db	0
  2257  007B23  00                 	db	0
  2258  007B24  00                 	db	0
  2259  007B25  00                 	db	0
  2260  007B26  00                 	db	0
  2261  007B27  00                 	db	0
  2262  007B28  00                 	db	0
  2263  007B29  00                 	db	0
  2264  007B2A  00                 	db	0
  2265  007B2B  00                 	db	0
  2266  007B2C  00                 	db	0
  2267  007B2D  00                 	db	0
  2268  007B2E  00                 	db	0
  2269  007B2F  00                 	db	0
  2270  007B30  00                 	db	0
  2271  007B31  00                 	db	0
  2272  007B32  00                 	db	0
  2273  007B33  00                 	db	0
  2274  007B34  00                 	db	0
  2275  007B35  00                 	db	0
  2276  007B36  00                 	db	0
  2277  007B37  00                 	db	0
  2278  007B38  00                 	db	0
  2279  007B39  00                 	db	0
  2280  007B3A  00                 	db	0
  2281  007B3B  00                 	db	0
  2282  007B3C  00                 	db	0
  2283  007B3D  00                 	db	0
  2284  007B3E  00                 	db	0
  2285  007B3F  00                 	db	0
  2286  007B40  00                 	db	0
  2287  007B41  00                 	db	0
  2288  007B42  00                 	db	0
  2289  007B43  00                 	db	0
  2290  007B44  00                 	db	0
  2291  007B45  00                 	db	0
  2292  007B46  00                 	db	0
  2293  007B47  00                 	db	0
  2294  007B48  00                 	db	0
  2295  007B49  00                 	db	0
  2296  007B4A  00                 	db	0
  2297  007B4B  00                 	db	0
  2298  007B4C  00                 	db	0
  2299  007B4D  00                 	db	0
  2300  007B4E  00                 	db	0
  2301  007B4F  00                 	db	0
  2302  007B50  00                 	db	0
  2303  007B51  00                 	db	0
  2304  007B52  00                 	db	0
  2305  007B53  3E                 	db	62
  2306  007B54  41                 	db	65
  2307  007B55  80                 	db	128
  2308  007B56  80                 	db	128
  2309  007B57  80                 	db	128
  2310  007B58  80                 	db	128
  2311  007B59  41                 	db	65
  2312  007B5A  3E                 	db	62
  2313  007B5B  00                 	db	0
  2314  007B5C  00                 	db	0
  2315  007B5D  D8                 	db	216
  2316  007B5E  94                 	db	148
  2317  007B5F  A4                 	db	164
  2318  007B60  6C                 	db	108
  2319  007B61  00                 	db	0
  2320  007B62  00                 	db	0
  2321  007B63  78                 	db	120
  2322  007B64  84                 	db	132
  2323  007B65  84                 	db	132
  2324  007B66  4C                 	db	76
  2325  007B67  00                 	db	0
  2326  007B68  88                 	db	136
  2327  007B69  FC                 	db	252
  2328  007B6A  80                 	db	128
  2329  007B6B  81                 	db	129
  2330  007B6C  FF                 	db	255
  2331  007B6D  80                 	db	128
  2332  007B6E  81                 	db	129
  2333  007B6F  FF                 	db	255
  2334  007B70  80                 	db	128
  2335  007B71  00                 	db	0
  2336  007B72  78                 	db	120
  2337  007B73  84                 	db	132
  2338  007B74  84                 	db	132
  2339  007B75  84                 	db	132
  2340  007B76  78                 	db	120
  2341  007B77  00                 	db	0
  2342  007B78  00                 	db	0
  2343  007B79  D8                 	db	216
  2344  007B7A  94                 	db	148
  2345  007B7B  A4                 	db	164
  2346  007B7C  6C                 	db	108
  2347  007B7D  00                 	db	0
  2348  007B7E  00                 	db	0
  2349  007B7F  78                 	db	120
  2350  007B80  84                 	db	132
  2351  007B81  84                 	db	132
  2352  007B82  4C                 	db	76
  2353  007B83  00                 	db	0
  2354  007B84  00                 	db	0
  2355  007B85  78                 	db	120
  2356  007B86  84                 	db	132
  2357  007B87  84                 	db	132
  2358  007B88  84                 	db	132
  2359  007B89  78                 	db	120
  2360  007B8A  00                 	db	0
  2361  007B8B  08                 	db	8
  2362  007B8C  FC                 	db	252
  2363  007B8D  48                 	db	72
  2364  007B8E  84                 	db	132
  2365  007B8F  84                 	db	132
  2366  007B90  78                 	db	120
  2367  007B91  00                 	db	0
  2368  007B92  00                 	db	0
  2369  007B93  78                 	db	120
  2370  007B94  94                 	db	148
  2371  007B95  94                 	db	148
  2372  007B96  58                 	db	88
  2373  007B97  00                 	db	0
  2374  007B98  00                 	db	0
  2375  007B99  00                 	db	0
  2376  007B9A  00                 	db	0
  2377  007B9B  00                 	db	0
  2378  007B9C  D8                 	db	216
  2379  007B9D  94                 	db	148
  2380  007B9E  A4                 	db	164
  2381  007B9F  6C                 	db	108
  2382  007BA0  00                 	db	0
  2383  007BA1  04                 	db	4
  2384  007BA2  1C                 	db	28
  2385  007BA3  64                 	db	100
  2386  007BA4  80                 	db	128
  2387  007BA5  74                 	db	116
  2388  007BA6  0C                 	db	12
  2389  007BA7  04                 	db	4
  2390  007BA8  00                 	db	0
  2391  007BA9  D8                 	db	216
  2392  007BAA  94                 	db	148
  2393  007BAB  A4                 	db	164
  2394  007BAC  6C                 	db	108
  2395  007BAD  00                 	db	0
  2396  007BAE  04                 	db	4
  2397  007BAF  FF                 	db	255
  2398  007BB0  84                 	db	132
  2399  007BB1  40                 	db	64
  2400  007BB2  00                 	db	0
  2401  007BB3  78                 	db	120
  2402  007BB4  94                 	db	148
  2403  007BB5  94                 	db	148
  2404  007BB6  58                 	db	88
  2405  007BB7  00                 	db	0
  2406  007BB8  88                 	db	136
  2407  007BB9  FC                 	db	252
  2408  007BBA  88                 	db	136
  2409  007BBB  04                 	db	4
  2410  007BBC  FC                 	db	252
  2411  007BBD  88                 	db	136
  2412  007BBE  04                 	db	4
  2413  007BBF  F8                 	db	248
  2414  007BC0  80                 	db	128
  2415  007BC1  00                 	db	0
  2416  007BC2  00                 	db	0
  2417  007BC3  00                 	db	0
  2418  007BC4  00                 	db	0
  2419  007BC5  00                 	db	0
  2420  007BC6  00                 	db	0
  2421  007BC7  00                 	db	0
  2422  007BC8  00                 	db	0
  2423  007BC9  00                 	db	0
  2424  007BCA  00                 	db	0
  2425  007BCB  00                 	db	0
  2426  007BCC  00                 	db	0
  2427  007BCD  00                 	db	0
  2428  007BCE  00                 	db	0
  2429  007BCF  00                 	db	0
  2430  007BD0  00                 	db	0
  2431  007BD1  00                 	db	0
  2432  007BD2  00                 	db	0
  2433  007BD3  00                 	db	0
  2434  007BD4  00                 	db	0
  2435  007BD5  00                 	db	0
  2436  007BD6  00                 	db	0
  2437  007BD7  00                 	db	0
  2438  007BD8  00                 	db	0
  2439  007BD9  00                 	db	0
  2440  007BDA  00                 	db	0
  2441  007BDB  00                 	db	0
  2442  007BDC  00                 	db	0
  2443  007BDD  00                 	db	0
  2444  007BDE  00                 	db	0
  2445  007BDF  00                 	db	0
  2446  007BE0  00                 	db	0
  2447  007BE1  00                 	db	0
  2448  007BE2  00                 	db	0
  2449  007BE3  00                 	db	0
  2450  007BE4  00                 	db	0
  2451  007BE5  00                 	db	0
  2452  007BE6  00                 	db	0
  2453  007BE7  00                 	db	0
  2454  007BE8  00                 	db	0
  2455  007BE9  00                 	db	0
  2456  007BEA  00                 	db	0
  2457  007BEB  00                 	db	0
  2458  007BEC  00                 	db	0
  2459  007BED  00                 	db	0
  2460  007BEE  00                 	db	0
  2461  007BEF  00                 	db	0
  2462  007BF0  00                 	db	0
  2463  007BF1  00                 	db	0
  2464  007BF2  00                 	db	0
  2465  007BF3  00                 	db	0
  2466  007BF4  00                 	db	0
  2467  007BF5  00                 	db	0
  2468  007BF6  00                 	db	0
  2469  007BF7  00                 	db	0
  2470  007BF8  00                 	db	0
  2471  007BF9  00                 	db	0
  2472  007BFA  00                 	db	0
  2473  007BFB  00                 	db	0
  2474  007BFC  00                 	db	0
  2475  007BFD  00                 	db	0
  2476  007BFE  00                 	db	0
  2477  007BFF  00                 	db	0
  2478  007C00  00                 	db	0
  2479  007C01  00                 	db	0
  2480  007C02  00                 	db	0
  2481  007C03  00                 	db	0
  2482  007C04  00                 	db	0
  2483  007C05  00                 	db	0
  2484  007C06  00                 	db	0
  2485  007C07  00                 	db	0
  2486  007C08  00                 	db	0
  2487  007C09  00                 	db	0
  2488  007C0A  00                 	db	0
  2489  007C0B  04                 	db	4
  2490  007C0C  07                 	db	7
  2491  007C0D  04                 	db	4
  2492  007C0E  00                 	db	0
  2493  007C0F  00                 	db	0
  2494  007C10  00                 	db	0
  2495  007C11  00                 	db	0
  2496  007C12  00                 	db	0
  2497  007C13  00                 	db	0
  2498  007C14  00                 	db	0
  2499  007C15  00                 	db	0
  2500  007C16  00                 	db	0
  2501  007C17  00                 	db	0
  2502  007C18  00                 	db	0
  2503  007C19  00                 	db	0
  2504  007C1A  00                 	db	0
  2505  007C1B  00                 	db	0
  2506  007C1C  00                 	db	0
  2507  007C1D  00                 	db	0
  2508  007C1E  00                 	db	0
  2509  007C1F  00                 	db	0
  2510  007C20  00                 	db	0
  2511  007C21  04                 	db	4
  2512  007C22  04                 	db	4
  2513  007C23  06                 	db	6
  2514  007C24  01                 	db	1
  2515  007C25  00                 	db	0
  2516  007C26  00                 	db	0
  2517  007C27  00                 	db	0
  2518  007C28  00                 	db	0
  2519  007C29  00                 	db	0
  2520  007C2A  00                 	db	0
  2521  007C2B  00                 	db	0
  2522  007C2C  00                 	db	0
  2523  007C2D  00                 	db	0
  2524  007C2E  00                 	db	0
  2525  007C2F  00                 	db	0
  2526  007C30  00                 	db	0
  2527  007C31  00                 	db	0
  2528  007C32  00                 	db	0
  2529  007C33  00                 	db	0
  2530  007C34  00                 	db	0
  2531  007C35  00                 	db	0
  2532  007C36  00                 	db	0
  2533  007C37  00                 	db	0
  2534  007C38  00                 	db	0
  2535  007C39  00                 	db	0
  2536  007C3A  00                 	db	0
  2537  007C3B  00                 	db	0
  2538  007C3C  00                 	db	0
  2539  007C3D  00                 	db	0
  2540  007C3E  00                 	db	0
  2541  007C3F  00                 	db	0
  2542  007C40  00                 	db	0
  2543  007C41  00                 	db	0
  2544  007C42  00                 	db	0
  2545  007C43  00                 	db	0
  2546  007C44  00                 	db	0
  2547  007C45  00                 	db	0
  2548  007C46  00                 	db	0
  2549  007C47  00                 	db	0
  2550  007C48  00                 	db	0
  2551  007C49  00                 	db	0
  2552  007C4A  00                 	db	0
  2553  007C4B  00                 	db	0
  2554  007C4C  00                 	db	0
  2555  007C4D  00                 	db	0
  2556  007C4E  00                 	db	0
  2557  007C4F  00                 	db	0
  2558  007C50  00                 	db	0
  2559  007C51  00                 	db	0
  2560  007C52  00                 	db	0
  2561  007C53  00                 	db	0
  2562  007C54  00                 	db	0
  2563  007C55  00                 	db	0
  2564  007C56  00                 	db	0
  2565  007C57  00                 	db	0
  2566  007C58  00                 	db	0
  2567  007C59  00                 	db	0
  2568  007C5A  00                 	db	0
  2569  007C5B  00                 	db	0
  2570  007C5C  00                 	db	0
  2571  007C5D  00                 	db	0
  2572  007C5E  00                 	db	0
  2573  007C5F  00                 	db	0
  2574  007C60  00                 	db	0
  2575  007C61  00                 	db	0
  2576  007C62  00                 	db	0
  2577  007C63  00                 	db	0
  2578  007C64  00                 	db	0
  2579  007C65  00                 	db	0
  2580  007C66  00                 	db	0
  2581  007C67  00                 	db	0
  2582  007C68  00                 	db	0
  2583  007C69  00                 	db	0
  2584  007C6A  00                 	db	0
  2585  007C6B  00                 	db	0
  2586  007C6C  00                 	db	0
  2587  007C6D  00                 	db	0
  2588  007C6E  00                 	db	0
  2589  007C6F  00                 	db	0
  2590  007C70  00                 	db	0
  2591  007C71  00                 	db	0
  2592  007C72  00                 	db	0
  2593  007C73  00                 	db	0
  2594  007C74  00                 	db	0
  2595  007C75  00                 	db	0
  2596  007C76  00                 	db	0
  2597  007C77  00                 	db	0
  2598  007C78  00                 	db	0
  2599  007C79  00                 	db	0
  2600  007C7A  00                 	db	0
  2601  007C7B  00                 	db	0
  2602  007C7C  00                 	db	0
  2603  007C7D  80                 	db	128
  2604  007C7E  F0                 	db	240
  2605  007C7F  F8                 	db	248
  2606  007C80  18                 	db	24
  2607  007C81  1C                 	db	28
  2608  007C82  0E                 	db	14
  2609  007C83  0E                 	db	14
  2610  007C84  1C                 	db	28
  2611  007C85  18                 	db	24
  2612  007C86  78                 	db	120
  2613  007C87  F0                 	db	240
  2614  007C88  C0                 	db	192
  2615  007C89  80                 	db	128
  2616  007C8A  00                 	db	0
  2617  007C8B  00                 	db	0
  2618  007C8C  00                 	db	0
  2619  007C8D  00                 	db	0
  2620  007C8E  00                 	db	0
  2621  007C8F  00                 	db	0
  2622  007C90  00                 	db	0
  2623  007C91  00                 	db	0
  2624  007C92  00                 	db	0
  2625  007C93  00                 	db	0
  2626  007C94  00                 	db	0
  2627  007C95  00                 	db	0
  2628  007C96  00                 	db	0
  2629  007C97  00                 	db	0
  2630  007C98  00                 	db	0
  2631  007C99  00                 	db	0
  2632  007C9A  00                 	db	0
  2633  007C9B  80                 	db	128
  2634  007C9C  F0                 	db	240
  2635  007C9D  F8                 	db	248
  2636  007C9E  18                 	db	24
  2637  007C9F  1C                 	db	28
  2638  007CA0  0C                 	db	12
  2639  007CA1  0E                 	db	14
  2640  007CA2  0E                 	db	14
  2641  007CA3  1C                 	db	28
  2642  007CA4  18                 	db	24
  2643  007CA5  F8                 	db	248
  2644  007CA6  F0                 	db	240
  2645  007CA7  80                 	db	128
  2646  007CA8  00                 	db	0
  2647  007CA9  00                 	db	0
  2648  007CAA  00                 	db	0
  2649  007CAB  00                 	db	0
  2650  007CAC  00                 	db	0
  2651  007CAD  00                 	db	0
  2652  007CAE  00                 	db	0
  2653  007CAF  00                 	db	0
  2654  007CB0  00                 	db	0
  2655  007CB1  00                 	db	0
  2656  007CB2  00                 	db	0
  2657  007CB3  00                 	db	0
  2658  007CB4  00                 	db	0
  2659  007CB5  00                 	db	0
  2660  007CB6  00                 	db	0
  2661  007CB7  00                 	db	0
  2662  007CB8  00                 	db	0
  2663  007CB9  00                 	db	0
  2664  007CBA  00                 	db	0
  2665  007CBB  00                 	db	0
  2666  007CBC  00                 	db	0
  2667  007CBD  00                 	db	0
  2668  007CBE  00                 	db	0
  2669  007CBF  00                 	db	0
  2670  007CC0  00                 	db	0
  2671  007CC1  00                 	db	0
  2672  007CC2  00                 	db	0
  2673  007CC3  00                 	db	0
  2674  007CC4  00                 	db	0
  2675  007CC5  00                 	db	0
  2676  007CC6  00                 	db	0
  2677  007CC7  00                 	db	0
  2678  007CC8  00                 	db	0
  2679  007CC9  00                 	db	0
  2680  007CCA  00                 	db	0
  2681  007CCB  00                 	db	0
  2682  007CCC  00                 	db	0
  2683  007CCD  00                 	db	0
  2684  007CCE  00                 	db	0
  2685  007CCF  00                 	db	0
  2686  007CD0  00                 	db	0
  2687  007CD1  00                 	db	0
  2688  007CD2  00                 	db	0
  2689  007CD3  00                 	db	0
  2690  007CD4  00                 	db	0
  2691  007CD5  00                 	db	0
  2692  007CD6  00                 	db	0
  2693  007CD7  00                 	db	0
  2694  007CD8  00                 	db	0
  2695  007CD9  00                 	db	0
  2696  007CDA  00                 	db	0
  2697  007CDB  00                 	db	0
  2698  007CDC  00                 	db	0
  2699  007CDD  00                 	db	0
  2700  007CDE  00                 	db	0
  2701  007CDF  00                 	db	0
  2702  007CE0  00                 	db	0
  2703  007CE1  00                 	db	0
  2704  007CE2  00                 	db	0
  2705  007CE3  00                 	db	0
  2706  007CE4  00                 	db	0
  2707  007CE5  00                 	db	0
  2708  007CE6  00                 	db	0
  2709  007CE7  00                 	db	0
  2710  007CE8  00                 	db	0
  2711  007CE9  00                 	db	0
  2712  007CEA  00                 	db	0
  2713  007CEB  00                 	db	0
  2714  007CEC  00                 	db	0
  2715  007CED  00                 	db	0
  2716  007CEE  00                 	db	0
  2717  007CEF  00                 	db	0
  2718  007CF0  00                 	db	0
  2719  007CF1  00                 	db	0
  2720  007CF2  00                 	db	0
  2721  007CF3  00                 	db	0
  2722  007CF4  00                 	db	0
  2723  007CF5  00                 	db	0
  2724  007CF6  00                 	db	0
  2725  007CF7  00                 	db	0
  2726  007CF8  00                 	db	0
  2727  007CF9  00                 	db	0
  2728  007CFA  00                 	db	0
  2729  007CFB  00                 	db	0
  2730  007CFC  F8                 	db	248
  2731  007CFD  FF                 	db	255
  2732  007CFE  0F                 	db	15
  2733  007CFF  00                 	db	0
  2734  007D00  00                 	db	0
  2735  007D01  00                 	db	0
  2736  007D02  00                 	db	0
  2737  007D03  00                 	db	0
  2738  007D04  00                 	db	0
  2739  007D05  00                 	db	0
  2740  007D06  00                 	db	0
  2741  007D07  00                 	db	0
  2742  007D08  0F                 	db	15
  2743  007D09  FF                 	db	255
  2744  007D0A  F8                 	db	248
  2745  007D0B  00                 	db	0
  2746  007D0C  00                 	db	0
  2747  007D0D  00                 	db	0
  2748  007D0E  00                 	db	0
  2749  007D0F  00                 	db	0
  2750  007D10  00                 	db	0
  2751  007D11  00                 	db	0
  2752  007D12  00                 	db	0
  2753  007D13  00                 	db	0
  2754  007D14  00                 	db	0
  2755  007D15  00                 	db	0
  2756  007D16  00                 	db	0
  2757  007D17  00                 	db	0
  2758  007D18  00                 	db	0
  2759  007D19  00                 	db	0
  2760  007D1A  F8                 	db	248
  2761  007D1B  FF                 	db	255
  2762  007D1C  0F                 	db	15
  2763  007D1D  00                 	db	0
  2764  007D1E  00                 	db	0
  2765  007D1F  00                 	db	0
  2766  007D20  00                 	db	0
  2767  007D21  00                 	db	0
  2768  007D22  00                 	db	0
  2769  007D23  00                 	db	0
  2770  007D24  00                 	db	0
  2771  007D25  00                 	db	0
  2772  007D26  0F                 	db	15
  2773  007D27  FF                 	db	255
  2774  007D28  F8                 	db	248
  2775  007D29  00                 	db	0
  2776  007D2A  00                 	db	0
  2777  007D2B  00                 	db	0
  2778  007D2C  00                 	db	0
  2779  007D2D  00                 	db	0
  2780  007D2E  00                 	db	0
  2781  007D2F  00                 	db	0
  2782  007D30  00                 	db	0
  2783  007D31  00                 	db	0
  2784  007D32  00                 	db	0
  2785  007D33  00                 	db	0
  2786  007D34  00                 	db	0
  2787  007D35  00                 	db	0
  2788  007D36  00                 	db	0
  2789  007D37  00                 	db	0
  2790  007D38  00                 	db	0
  2791  007D39  00                 	db	0
  2792  007D3A  00                 	db	0
  2793  007D3B  00                 	db	0
  2794  007D3C  00                 	db	0
  2795  007D3D  00                 	db	0
  2796  007D3E  00                 	db	0
  2797  007D3F  00                 	db	0
  2798  007D40  00                 	db	0
  2799  007D41  00                 	db	0
  2800  007D42  00                 	db	0
  2801  007D43  00                 	db	0
  2802  007D44  00                 	db	0
  2803  007D45  00                 	db	0
  2804  007D46  00                 	db	0
  2805  007D47  00                 	db	0
  2806  007D48  00                 	db	0
  2807  007D49  00                 	db	0
  2808  007D4A  00                 	db	0
  2809  007D4B  00                 	db	0
  2810  007D4C  00                 	db	0
  2811  007D4D  00                 	db	0
  2812  007D4E  00                 	db	0
  2813  007D4F  00                 	db	0
  2814  007D50  00                 	db	0
  2815  007D51  00                 	db	0
  2816  007D52  00                 	db	0
  2817  007D53  00                 	db	0
  2818  007D54  00                 	db	0
  2819  007D55  00                 	db	0
  2820  007D56  00                 	db	0
  2821  007D57  00                 	db	0
  2822  007D58  00                 	db	0
  2823  007D59  00                 	db	0
  2824  007D5A  00                 	db	0
  2825  007D5B  00                 	db	0
  2826  007D5C  00                 	db	0
  2827  007D5D  00                 	db	0
  2828  007D5E  00                 	db	0
  2829  007D5F  00                 	db	0
  2830  007D60  00                 	db	0
  2831  007D61  00                 	db	0
  2832  007D62  00                 	db	0
  2833  007D63  00                 	db	0
  2834  007D64  00                 	db	0
  2835  007D65  08                 	db	8
  2836  007D66  00                 	db	0
  2837  007D67  08                 	db	8
  2838  007D68  00                 	db	0
  2839  007D69  08                 	db	8
  2840  007D6A  00                 	db	0
  2841  007D6B  1C                 	db	28
  2842  007D6C  FC                 	db	252
  2843  007D6D  F8                 	db	248
  2844  007D6E  80                 	db	128
  2845  007D6F  08                 	db	8
  2846  007D70  00                 	db	0
  2847  007D71  08                 	db	8
  2848  007D72  00                 	db	0
  2849  007D73  08                 	db	8
  2850  007D74  00                 	db	0
  2851  007D75  08                 	db	8
  2852  007D76  00                 	db	0
  2853  007D77  08                 	db	8
  2854  007D78  00                 	db	0
  2855  007D79  08                 	db	8
  2856  007D7A  E0                 	db	224
  2857  007D7B  FF                 	db	255
  2858  007D7C  3F                 	db	63
  2859  007D7D  09                 	db	9
  2860  007D7E  00                 	db	0
  2861  007D7F  08                 	db	8
  2862  007D80  00                 	db	0
  2863  007D81  08                 	db	8
  2864  007D82  00                 	db	0
  2865  007D83  08                 	db	8
  2866  007D84  00                 	db	0
  2867  007D85  08                 	db	8
  2868  007D86  00                 	db	0
  2869  007D87  08                 	db	8
  2870  007D88  00                 	db	0
  2871  007D89  09                 	db	9
  2872  007D8A  3F                 	db	63
  2873  007D8B  FF                 	db	255
  2874  007D8C  E0                 	db	224
  2875  007D8D  08                 	db	8
  2876  007D8E  00                 	db	0
  2877  007D8F  08                 	db	8
  2878  007D90  00                 	db	0
  2879  007D91  08                 	db	8
  2880  007D92  00                 	db	0
  2881  007D93  08                 	db	8
  2882  007D94  00                 	db	0
  2883  007D95  08                 	db	8
  2884  007D96  00                 	db	0
  2885  007D97  08                 	db	8
  2886  007D98  E0                 	db	224
  2887  007D99  FF                 	db	255
  2888  007D9A  3F                 	db	63
  2889  007D9B  09                 	db	9
  2890  007D9C  00                 	db	0
  2891  007D9D  08                 	db	8
  2892  007D9E  00                 	db	0
  2893  007D9F  08                 	db	8
  2894  007DA0  00                 	db	0
  2895  007DA1  08                 	db	8
  2896  007DA2  00                 	db	0
  2897  007DA3  08                 	db	8
  2898  007DA4  00                 	db	0
  2899  007DA5  08                 	db	8
  2900  007DA6  00                 	db	0
  2901  007DA7  09                 	db	9
  2902  007DA8  0F                 	db	15
  2903  007DA9  0F                 	db	15
  2904  007DAA  00                 	db	0
  2905  007DAB  08                 	db	8
  2906  007DAC  00                 	db	0
  2907  007DAD  08                 	db	8
  2908  007DAE  00                 	db	0
  2909  007DAF  08                 	db	8
  2910  007DB0  00                 	db	0
  2911  007DB1  00                 	db	0
  2912  007DB2  00                 	db	0
  2913  007DB3  00                 	db	0
  2914  007DB4  00                 	db	0
  2915  007DB5  00                 	db	0
  2916  007DB6  00                 	db	0
  2917  007DB7  00                 	db	0
  2918  007DB8  00                 	db	0
  2919  007DB9  00                 	db	0
  2920  007DBA  00                 	db	0
  2921  007DBB  00                 	db	0
  2922  007DBC  00                 	db	0
  2923  007DBD  00                 	db	0
  2924  007DBE  00                 	db	0
  2925  007DBF  00                 	db	0
  2926  007DC0  00                 	db	0
  2927  007DC1  00                 	db	0
  2928  007DC2  00                 	db	0
  2929  007DC3  00                 	db	0
  2930  007DC4  00                 	db	0
  2931  007DC5  00                 	db	0
  2932  007DC6  00                 	db	0
  2933  007DC7  00                 	db	0
  2934  007DC8  00                 	db	0
  2935  007DC9  00                 	db	0
  2936  007DCA  00                 	db	0
  2937  007DCB  00                 	db	0
  2938  007DCC  00                 	db	0
  2939  007DCD  00                 	db	0
  2940  007DCE  00                 	db	0
  2941  007DCF  00                 	db	0
  2942  007DD0  00                 	db	0
  2943  007DD1  00                 	db	0
  2944  007DD2  00                 	db	0
  2945  007DD3  00                 	db	0
  2946  007DD4  00                 	db	0
  2947  007DD5  00                 	db	0
  2948  007DD6  00                 	db	0
  2949  007DD7  00                 	db	0
  2950  007DD8  00                 	db	0
  2951  007DD9  00                 	db	0
  2952  007DDA  00                 	db	0
  2953  007DDB  00                 	db	0
  2954  007DDC  00                 	db	0
  2955  007DDD  00                 	db	0
  2956  007DDE  00                 	db	0
  2957  007DDF  00                 	db	0
  2958  007DE0  00                 	db	0
  2959  007DE1  00                 	db	0
  2960  007DE2  00                 	db	0
  2961  007DE3  00                 	db	0
  2962  007DE4  00                 	db	0
  2963  007DE5  00                 	db	0
  2964  007DE6  00                 	db	0
  2965  007DE7  00                 	db	0
  2966  007DE8  00                 	db	0
  2967  007DE9  00                 	db	0
  2968  007DEA  00                 	db	0
  2969  007DEB  00                 	db	0
  2970  007DEC  00                 	db	0
  2971  007DED  07                 	db	7
  2972  007DEE  3F                 	db	63
  2973  007DEF  FC                 	db	252
  2974  007DF0  E0                 	db	224
  2975  007DF1  00                 	db	0
  2976  007DF2  00                 	db	0
  2977  007DF3  00                 	db	0
  2978  007DF4  00                 	db	0
  2979  007DF5  00                 	db	0
  2980  007DF6  00                 	db	0
  2981  007DF7  80                 	db	128
  2982  007DF8  C0                 	db	192
  2983  007DF9  FC                 	db	252
  2984  007DFA  7F                 	db	127
  2985  007DFB  07                 	db	7
  2986  007DFC  00                 	db	0
  2987  007DFD  00                 	db	0
  2988  007DFE  00                 	db	0
  2989  007DFF  00                 	db	0
  2990  007E00  00                 	db	0
  2991  007E01  00                 	db	0
  2992  007E02  00                 	db	0
  2993  007E03  00                 	db	0
  2994  007E04  00                 	db	0
  2995  007E05  00                 	db	0
  2996  007E06  00                 	db	0
  2997  007E07  00                 	db	0
  2998  007E08  00                 	db	0
  2999  007E09  00                 	db	0
  3000  007E0A  00                 	db	0
  3001  007E0B  07                 	db	7
  3002  007E0C  3F                 	db	63
  3003  007E0D  FC                 	db	252
  3004  007E0E  E0                 	db	224
  3005  007E0F  00                 	db	0
  3006  007E10  00                 	db	0
  3007  007E11  00                 	db	0
  3008  007E12  00                 	db	0
  3009  007E13  00                 	db	0
  3010  007E14  00                 	db	0
  3011  007E15  00                 	db	0
  3012  007E16  C0                 	db	192
  3013  007E17  FC                 	db	252
  3014  007E18  7F                 	db	127
  3015  007E19  07                 	db	7
  3016  007E1A  00                 	db	0
  3017  007E1B  00                 	db	0
  3018  007E1C  00                 	db	0
  3019  007E1D  00                 	db	0
  3020  007E1E  00                 	db	0
  3021  007E1F  00                 	db	0
  3022  007E20  00                 	db	0
  3023  007E21  00                 	db	0
  3024  007E22  00                 	db	0
  3025  007E23  00                 	db	0
  3026  007E24  00                 	db	0
  3027  007E25  00                 	db	0
  3028  007E26  00                 	db	0
  3029  007E27  00                 	db	0
  3030  007E28  00                 	db	0
  3031  007E29  00                 	db	0
  3032  007E2A  00                 	db	0
  3033  007E2B  00                 	db	0
  3034  007E2C  00                 	db	0
  3035  007E2D  00                 	db	0
  3036  007E2E  00                 	db	0
  3037  007E2F  00                 	db	0
  3038  007E30  00                 	db	0
  3039  007E31  00                 	db	0
  3040  007E32  00                 	db	0
  3041  007E33  00                 	db	0
  3042  007E34  00                 	db	0
  3043  007E35  00                 	db	0
  3044  007E36  00                 	db	0
  3045  007E37  00                 	db	0
  3046  007E38  00                 	db	0
  3047  007E39  00                 	db	0
  3048  007E3A  00                 	db	0
  3049  007E3B  00                 	db	0
  3050  007E3C  00                 	db	0
  3051  007E3D  00                 	db	0
  3052  007E3E  00                 	db	0
  3053  007E3F  00                 	db	0
  3054  007E40  00                 	db	0
  3055  007E41  00                 	db	0
  3056  007E42  00                 	db	0
  3057  007E43  00                 	db	0
  3058  007E44  00                 	db	0
  3059  007E45  00                 	db	0
  3060  007E46  00                 	db	0
  3061  007E47  00                 	db	0
  3062  007E48  00                 	db	0
  3063  007E49  00                 	db	0
  3064  007E4A  00                 	db	0
  3065  007E4B  00                 	db	0
  3066  007E4C  00                 	db	0
  3067  007E4D  00                 	db	0
  3068  007E4E  00                 	db	0
  3069  007E4F  00                 	db	0
  3070  007E50  00                 	db	0
  3071  007E51  00                 	db	0
  3072  007E52  00                 	db	0
  3073  007E53  00                 	db	0
  3074  007E54  00                 	db	0
  3075  007E55  00                 	db	0
  3076  007E56  00                 	db	0
  3077  007E57  00                 	db	0
  3078  007E58  00                 	db	0
  3079  007E59  00                 	db	0
  3080  007E5A  00                 	db	0
  3081  007E5B  00                 	db	0
  3082  007E5C  00                 	db	0
  3083  007E5D  00                 	db	0
  3084  007E5E  00                 	db	0
  3085  007E5F  00                 	db	0
  3086  007E60  00                 	db	0
  3087  007E61  00                 	db	0
  3088  007E62  00                 	db	0
  3089  007E63  00                 	db	0
  3090  007E64  00                 	db	0
  3091  007E65  00                 	db	0
  3092  007E66  00                 	db	0
  3093  007E67  00                 	db	0
  3094  007E68  00                 	db	0
  3095  007E69  00                 	db	0
  3096  007E6A  00                 	db	0
  3097  007E6B  00                 	db	0
  3098  007E6C  00                 	db	0
  3099  007E6D  00                 	db	0
  3100  007E6E  00                 	db	0
  3101  007E6F  01                 	db	1
  3102  007E70  07                 	db	7
  3103  007E71  0F                 	db	15
  3104  007E72  1C                 	db	28
  3105  007E73  18                 	db	24
  3106  007E74  18                 	db	24
  3107  007E75  1C                 	db	28
  3108  007E76  0F                 	db	15
  3109  007E77  07                 	db	7
  3110  007E78  01                 	db	1
  3111  007E79  00                 	db	0
  3112  007E7A  00                 	db	0
  3113  007E7B  00                 	db	0
  3114  007E7C  00                 	db	0
  3115  007E7D  00                 	db	0
  3116  007E7E  00                 	db	0
  3117  007E7F  00                 	db	0
  3118  007E80  00                 	db	0
  3119  007E81  00                 	db	0
  3120  007E82  00                 	db	0
  3121  007E83  00                 	db	0
  3122  007E84  00                 	db	0
  3123  007E85  00                 	db	0
  3124  007E86  00                 	db	0
  3125  007E87  00                 	db	0
  3126  007E88  00                 	db	0
  3127  007E89  00                 	db	0
  3128  007E8A  00                 	db	0
  3129  007E8B  00                 	db	0
  3130  007E8C  00                 	db	0
  3131  007E8D  01                 	db	1
  3132  007E8E  07                 	db	7
  3133  007E8F  0F                 	db	15
  3134  007E90  1C                 	db	28
  3135  007E91  18                 	db	24
  3136  007E92  18                 	db	24
  3137  007E93  1C                 	db	28
  3138  007E94  0C                 	db	12
  3139  007E95  0F                 	db	15
  3140  007E96  07                 	db	7
  3141  007E97  01                 	db	1
  3142  007E98  00                 	db	0
  3143  007E99  00                 	db	0
  3144  007E9A  00                 	db	0
  3145  007E9B  00                 	db	0
  3146  007E9C  00                 	db	0
  3147  007E9D  00                 	db	0
  3148  007E9E  00                 	db	0
  3149  007E9F  00                 	db	0
  3150  007EA0  00                 	db	0
  3151  007EA1  00                 	db	0
  3152  007EA2  00                 	db	0
  3153  007EA3  00                 	db	0
  3154  007EA4  00                 	db	0
  3155  007EA5  00                 	db	0
  3156  007EA6  00                 	db	0
  3157  007EA7  00                 	db	0
  3158  007EA8  00                 	db	0
  3159  007EA9  00                 	db	0
  3160  007EAA  00                 	db	0
  3161  007EAB  00                 	db	0
  3162  007EAC  00                 	db	0
  3163  007EAD  00                 	db	0
  3164  007EAE  00                 	db	0
  3165  007EAF  00                 	db	0
  3166  007EB0  00                 	db	0
  3167  007EB1  00                 	db	0
  3168  007EB2  00                 	db	0
  3169  007EB3  00                 	db	0
  3170  007EB4  00                 	db	0
  3171  007EB5  00                 	db	0
  3172  007EB6  00                 	db	0
  3173  007EB7  00                 	db	0
  3174  007EB8  00                 	db	0
  3175  007EB9  00                 	db	0
  3176  007EBA  00                 	db	0
  3177  007EBB  00                 	db	0
  3178  007EBC  00                 	db	0
  3179  007EBD  00                 	db	0
  3180  007EBE  00                 	db	0
  3181  007EBF  00                 	db	0
  3182  007EC0  00                 	db	0
  3183  007EC1  00                 	db	0
  3184  007EC2  00                 	db	0
  3185  007EC3  00                 	db	0
  3186  007EC4  00                 	db	0
  3187  007EC5  00                 	db	0
  3188  007EC6  00                 	db	0
  3189  007EC7  00                 	db	0
  3190  007EC8  00                 	db	0
  3191  007EC9  00                 	db	0
  3192  007ECA  00                 	db	0
  3193  007ECB  00                 	db	0
  3194  007ECC  00                 	db	0
  3195  007ECD                     __end_of_acceuil:
  3196                           	opt callstack 0
  3197  007ECD                     _Font3x6:
  3198                           	opt callstack 0
  3199  007ECD  00                 	db	0
  3200  007ECE  00                 	db	0
  3201  007ECF  00                 	db	0
  3202  007ED0  00                 	db	0
  3203  007ED1  5C                 	db	92
  3204  007ED2  00                 	db	0
  3205  007ED3  0C                 	db	12
  3206  007ED4  00                 	db	0
  3207  007ED5  0C                 	db	12
  3208  007ED6  7C                 	db	124
  3209  007ED7  28                 	db	40
  3210  007ED8  7C                 	db	124
  3211  007ED9  7C                 	db	124
  3212  007EDA  44                 	db	68
  3213  007EDB  7C                 	db	124
  3214  007EDC  24                 	db	36
  3215  007EDD  10                 	db	16
  3216  007EDE  48                 	db	72
  3217  007EDF  28                 	db	40
  3218  007EE0  54                 	db	84
  3219  007EE1  08                 	db	8
  3220  007EE2  00                 	db	0
  3221  007EE3  0C                 	db	12
  3222  007EE4  00                 	db	0
  3223  007EE5  38                 	db	56
  3224  007EE6  44                 	db	68
  3225  007EE7  00                 	db	0
  3226  007EE8  44                 	db	68
  3227  007EE9  38                 	db	56
  3228  007EEA  00                 	db	0
  3229  007EEB  20                 	db	32
  3230  007EEC  10                 	db	16
  3231  007EED  08                 	db	8
  3232  007EEE  10                 	db	16
  3233  007EEF  38                 	db	56
  3234  007EF0  10                 	db	16
  3235  007EF1  80                 	db	128
  3236  007EF2  40                 	db	64
  3237  007EF3  00                 	db	0
  3238  007EF4  10                 	db	16
  3239  007EF5  10                 	db	16
  3240  007EF6  10                 	db	16
  3241  007EF7  00                 	db	0
  3242  007EF8  40                 	db	64
  3243  007EF9  00                 	db	0
  3244  007EFA  20                 	db	32
  3245  007EFB  10                 	db	16
  3246  007EFC  08                 	db	8
  3247  007EFD  38                 	db	56
  3248  007EFE  44                 	db	68
  3249  007EFF  38                 	db	56
  3250  007F00  00                 	db	0
  3251  007F01  7C                 	db	124
  3252  007F02  00                 	db	0
  3253  007F03  64                 	db	100
  3254  007F04  54                 	db	84
  3255  007F05  48                 	db	72
  3256  007F06  44                 	db	68
  3257  007F07  54                 	db	84
  3258  007F08  28                 	db	40
  3259  007F09  1C                 	db	28
  3260  007F0A  10                 	db	16
  3261  007F0B  7C                 	db	124
  3262  007F0C  4C                 	db	76
  3263  007F0D  54                 	db	84
  3264  007F0E  24                 	db	36
  3265  007F0F  38                 	db	56
  3266  007F10  54                 	db	84
  3267  007F11  20                 	db	32
  3268  007F12  04                 	db	4
  3269  007F13  74                 	db	116
  3270  007F14  0C                 	db	12
  3271  007F15  28                 	db	40
  3272  007F16  54                 	db	84
  3273  007F17  28                 	db	40
  3274  007F18  08                 	db	8
  3275  007F19  54                 	db	84
  3276  007F1A  38                 	db	56
  3277  007F1B  00                 	db	0
  3278  007F1C  50                 	db	80
  3279  007F1D  00                 	db	0
  3280  007F1E  80                 	db	128
  3281  007F1F  50                 	db	80
  3282  007F20  00                 	db	0
  3283  007F21  10                 	db	16
  3284  007F22  28                 	db	40
  3285  007F23  44                 	db	68
  3286  007F24  28                 	db	40
  3287  007F25  28                 	db	40
  3288  007F26  28                 	db	40
  3289  007F27  44                 	db	68
  3290  007F28  28                 	db	40
  3291  007F29  10                 	db	16
  3292  007F2A  04                 	db	4
  3293  007F2B  54                 	db	84
  3294  007F2C  08                 	db	8
  3295  007F2D  38                 	db	56
  3296  007F2E  4C                 	db	76
  3297  007F2F  5C                 	db	92
  3298  007F30  78                 	db	120
  3299  007F31  14                 	db	20
  3300  007F32  78                 	db	120
  3301  007F33  7C                 	db	124
  3302  007F34  54                 	db	84
  3303  007F35  28                 	db	40
  3304  007F36  38                 	db	56
  3305  007F37  44                 	db	68
  3306  007F38  44                 	db	68
  3307  007F39  7C                 	db	124
  3308  007F3A  44                 	db	68
  3309  007F3B  38                 	db	56
  3310  007F3C  7C                 	db	124
  3311  007F3D  54                 	db	84
  3312  007F3E  44                 	db	68
  3313  007F3F  7C                 	db	124
  3314  007F40  14                 	db	20
  3315  007F41  04                 	db	4
  3316  007F42  38                 	db	56
  3317  007F43  44                 	db	68
  3318  007F44  34                 	db	52
  3319  007F45  7C                 	db	124
  3320  007F46  10                 	db	16
  3321  007F47  7C                 	db	124
  3322  007F48  00                 	db	0
  3323  007F49  7C                 	db	124
  3324  007F4A  00                 	db	0
  3325  007F4B  20                 	db	32
  3326  007F4C  40                 	db	64
  3327  007F4D  3C                 	db	60
  3328  007F4E  7C                 	db	124
  3329  007F4F  10                 	db	16
  3330  007F50  6C                 	db	108
  3331  007F51  7C                 	db	124
  3332  007F52  40                 	db	64
  3333  007F53  40                 	db	64
  3334  007F54  7C                 	db	124
  3335  007F55  08                 	db	8
  3336  007F56  7C                 	db	124
  3337  007F57  7C                 	db	124
  3338  007F58  04                 	db	4
  3339  007F59  7C                 	db	124
  3340  007F5A  7C                 	db	124
  3341  007F5B  44                 	db	68
  3342  007F5C  7C                 	db	124
  3343  007F5D  7C                 	db	124
  3344  007F5E  14                 	db	20
  3345  007F5F  08                 	db	8
  3346  007F60  38                 	db	56
  3347  007F61  44                 	db	68
  3348  007F62  78                 	db	120
  3349  007F63  7C                 	db	124
  3350  007F64  14                 	db	20
  3351  007F65  68                 	db	104
  3352  007F66  48                 	db	72
  3353  007F67  54                 	db	84
  3354  007F68  24                 	db	36
  3355  007F69  04                 	db	4
  3356  007F6A  7C                 	db	124
  3357  007F6B  04                 	db	4
  3358  007F6C  7C                 	db	124
  3359  007F6D  40                 	db	64
  3360  007F6E  7C                 	db	124
  3361  007F6F  3C                 	db	60
  3362  007F70  40                 	db	64
  3363  007F71  3C                 	db	60
  3364  007F72  7C                 	db	124
  3365  007F73  20                 	db	32
  3366  007F74  7C                 	db	124
  3367  007F75  6C                 	db	108
  3368  007F76  10                 	db	16
  3369  007F77  6C                 	db	108
  3370  007F78  1C                 	db	28
  3371  007F79  60                 	db	96
  3372  007F7A  1C                 	db	28
  3373  007F7B  64                 	db	100
  3374  007F7C  54                 	db	84
  3375  007F7D  4C                 	db	76
  3376  007F7E  7C                 	db	124
  3377  007F7F  44                 	db	68
  3378  007F80  00                 	db	0
  3379  007F81  08                 	db	8
  3380  007F82  10                 	db	16
  3381  007F83  20                 	db	32
  3382  007F84  44                 	db	68
  3383  007F85  7C                 	db	124
  3384  007F86  00                 	db	0
  3385  007F87  08                 	db	8
  3386  007F88  04                 	db	4
  3387  007F89  08                 	db	8
  3388  007F8A  80                 	db	128
  3389  007F8B  80                 	db	128
  3390  007F8C  80                 	db	128
  3391  007F8D  04                 	db	4
  3392  007F8E  08                 	db	8
  3393  007F8F  00                 	db	0
  3394  007F90                     __end_of_Font3x6:
  3395                           	opt callstack 0
  3396  007F90  01                 	db	1
  3397  007F91                     __end_of_color:
  3398                           	opt callstack 0
  3399  0000                     _TXREG	set	4013
  3400  0000                     _PIR1bits	set	3998
  3401  0000                     _SPBRG	set	4015
  3402  0000                     _RCSTAbits	set	4011
  3403  0000                     _TXSTAbits	set	4012
  3404  0000                     _ADRESL	set	4035
  3405  0000                     _ADRESH	set	4036
  3406  0000                     _PORTCbits	set	3970
  3407  0000                     _LATD	set	3980
  3408  0000                     _TRISD	set	3989
  3409  0000                     _LATBbits	set	3978
  3410  0000                     _PORTD	set	3971
  3411  0000                     _TRISE	set	3990
  3412  0000                     _TRISC	set	3988
  3413  0000                     _TRISA	set	3986
  3414  0000                     _TRISB	set	3987
  3415  0000                     _ADCON0bits	set	4034
  3416  0000                     _CMCON	set	4020
  3417  0000                     _OSCCON	set	4051
  3418  007F91                     STR_8:
  3419  007F91  20                 	db	32
  3420  007F92  20                 	db	32
  3421  007F93  20                 	db	32
  3422  007F94  20                 	db	32
  3423  007F95  20                 	db	32
  3424  007F96  20                 	db	32
  3425  007F97  20                 	db	32
  3426  007F98  20                 	db	32
  3427  007F99  20                 	db	32
  3428  007F9A  20                 	db	32
  3429  007F9B  20                 	db	32
  3430  007F9C  20                 	db	32
  3431  007F9D  20                 	db	32
  3432  007F9E  20                 	db	32
  3433  007F9F  20                 	db	32
  3434  007FA0  20                 	db	32
  3435  007FA1  00                 	db	0
  3436  007FA2                     STR_7:
  3437  007FA2  20                 	db	32
  3438  007FA3  43                 	db	67	;'C'
  3439  007FA4  6F                 	db	111	;'o'
  3440  007FA5  6C                 	db	108	;'l'
  3441  007FA6  6C                 	db	108	;'l'
  3442  007FA7  75                 	db	117	;'u'
  3443  007FA8  6D                 	db	109	;'m'
  3444  007FA9  6E                 	db	110	;'n'
  3445  007FAA  20                 	db	32
  3446  007FAB  66                 	db	102	;'f'
  3447  007FAC  75                 	db	117	;'u'
  3448  007FAD  6C                 	db	108	;'l'
  3449  007FAE  6C                 	db	108	;'l'
  3450  007FAF  20                 	db	32
  3451  007FB0  21                 	db	33
  3452  007FB1  00                 	db	0
  3453  007FB2                     STR_5:
  3454  007FB2  50                 	db	80	;'P'
  3455  007FB3  6C                 	db	108	;'l'
  3456  007FB4  61                 	db	97	;'a'
  3457  007FB5  79                 	db	121	;'y'
  3458  007FB6  65                 	db	101	;'e'
  3459  007FB7  72                 	db	114	;'r'
  3460  007FB8  20                 	db	32
  3461  007FB9  31                 	db	49	;'1'
  3462  007FBA  20                 	db	32
  3463  007FBB  74                 	db	116	;'t'
  3464  007FBC  75                 	db	117	;'u'
  3465  007FBD  72                 	db	114	;'r'
  3466  007FBE  6E                 	db	110	;'n'
  3467  007FBF  00                 	db	0
  3468  007FC0                     STR_6:
  3469  007FC0  50                 	db	80	;'P'
  3470  007FC1  6C                 	db	108	;'l'
  3471  007FC2  61                 	db	97	;'a'
  3472  007FC3  79                 	db	121	;'y'
  3473  007FC4  65                 	db	101	;'e'
  3474  007FC5  72                 	db	114	;'r'
  3475  007FC6  20                 	db	32
  3476  007FC7  32                 	db	50	;'2'
  3477  007FC8  20                 	db	32
  3478  007FC9  74                 	db	116	;'t'
  3479  007FCA  75                 	db	117	;'u'
  3480  007FCB  72                 	db	114	;'r'
  3481  007FCC  6E                 	db	110	;'n'
  3482  007FCD  00                 	db	0
  3483  007FCE                     STR_10:
  3484  007FCE  49                 	db	73	;'I'
  3485  007FCF  74                 	db	116	;'t'
  3486  007FD0  27                 	db	39
  3487  007FD1  73                 	db	115	;'s'
  3488  007FD2  20                 	db	32
  3489  007FD3  61                 	db	97	;'a'
  3490  007FD4  20                 	db	32
  3491  007FD5  74                 	db	116	;'t'
  3492  007FD6  69                 	db	105	;'i'
  3493  007FD7  65                 	db	101	;'e'
  3494  007FD8  21                 	db	33
  3495  007FD9  00                 	db	0
  3496  007FDA                     STR_3:
  3497  007FDA  2D                 	db	45
  3498  007FDB  2D                 	db	45
  3499  007FDC  2D                 	db	45
  3500  007FDD  2D                 	db	45
  3501  007FDE  2D                 	db	45
  3502  007FDF  2D                 	db	45
  3503  007FE0  2D                 	db	45
  3504  007FE1  2D                 	db	45
  3505  007FE2  2D                 	db	45
  3506  007FE3  2D                 	db	45
  3507  007FE4  00                 	db	0
  3508  007FE5                     STR_2:
  3509  007FE5  53                 	db	83	;'S'
  3510  007FE6  74                 	db	116	;'t'
  3511  007FE7  61                 	db	97	;'a'
  3512  007FE8  72                 	db	114	;'r'
  3513  007FE9  74                 	db	116	;'t'
  3514  007FEA  20                 	db	32
  3515  007FEB  47                 	db	71	;'G'
  3516  007FEC  61                 	db	97	;'a'
  3517  007FED  6D                 	db	109	;'m'
  3518  007FEE  65                 	db	101	;'e'
  3519  007FEF  00                 	db	0
  3520  007FF0                     STR_1:
  3521  007FF0  43                 	db	67	;'C'
  3522  007FF1  6F                 	db	111	;'o'
  3523  007FF2  6E                 	db	110	;'n'
  3524  007FF3  6E                 	db	110	;'n'
  3525  007FF4  65                 	db	101	;'e'
  3526  007FF5  63                 	db	99	;'c'
  3527  007FF6  74                 	db	116	;'t'
  3528  007FF7  20                 	db	32
  3529  007FF8  34                 	db	52	;'4'
  3530  007FF9  00                 	db	0
  3531  007FFA                     STR_4:
  3532  007FFA  58                 	db	88	;'X'
  3533  007FFB  4F                 	db	79	;'O'
  3534  007FFC  00                 	db	0
  3535  007FFD                     STR_13:
  3536  007FFD  49                 	db	73	;'I'
  3537  007FFE  00                 	db	0
  3538  0000                     
  3539                           ; #config settings
  3540  007FFF  00                 	db	0	; dummy byte at the end
  3541  0000                     
  3542                           	psect	cinit
  3543  006262                     __pcinit:
  3544                           	opt callstack 0
  3545  006262                     start_initialization:
  3546                           	opt callstack 0
  3547  006262                     __initialization:
  3548                           	opt callstack 0
  3549                           
  3550                           ; Initialize objects allocated to BANK0 (34 bytes)
  3551                           ; load TBLPTR registers with __pidataBANK0
  3552  006262  0ECC               	movlw	low __pidataBANK0
  3553  006264  6EF6               	movwf	tblptrl,c
  3554  006266  0E61               	movlw	high __pidataBANK0
  3555  006268  6EF7               	movwf	tblptrh,c
  3556  00626A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3557  00626C  6EF8               	movwf	tblptru,c
  3558  00626E  EE00  F0B4         	lfsr	0,__pdataBANK0
  3559  006272  EE10 F022          	lfsr	1,34
  3560  006276                     copy_data0:
  3561  006276  0009               	tblrd		*+
  3562  006278  CFF5 FFEE          	movff	tablat,postinc0
  3563  00627C  50E5               	movf	postdec1,w,c
  3564  00627E  50E1               	movf	fsr1l,w,c
  3565  006280  E1FA               	bnz	copy_data0
  3566                           
  3567                           ; Clear objects allocated to COMRAM (24 bytes)
  3568  006282  EE00  F022         	lfsr	0,__pbssCOMRAM
  3569  006286  0E18               	movlw	24
  3570  006288                     clear_0:
  3571  006288  6AEE               	clrf	postinc0,c
  3572  00628A  06E8               	decf	wreg,f,c
  3573  00628C  E1FD               	bnz	clear_0
  3574  00628E                     end_of_initialization:
  3575                           	opt callstack 0
  3576  00628E                     __end_of__initialization:
  3577                           	opt callstack 0
  3578  00628E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3579  006290  6EF8               	movwf	tblptru,c
  3580  006292  0100               	movlb	0
  3581  006294  EFF7  F030         	goto	_main	;jump to C main() function
  3582                           
  3583                           	psect	bssCOMRAM
  3584  000022                     __pbssCOMRAM:
  3585                           	opt callstack 0
  3586  000022                     _count:
  3587                           	opt callstack 0
  3588  000022                     	ds	2
  3589  000024                     _idx:
  3590                           	opt callstack 0
  3591  000024                     	ds	2
  3592  000026                     _col:
  3593                           	opt callstack 0
  3594  000026                     	ds	2
  3595  000028                     _mode:
  3596                           	opt callstack 0
  3597  000028                     	ds	2
  3598  00002A                     _choice:
  3599                           	opt callstack 0
  3600  00002A                     	ds	2
  3601  00002C                     _resulty:
  3602                           	opt callstack 0
  3603  00002C                     	ds	2
  3604  00002E                     _resultx:
  3605                           	opt callstack 0
  3606  00002E                     	ds	2
  3607  000030                     _pressed:
  3608                           	opt callstack 0
  3609  000030                     	ds	2
  3610  000032                     _tempy:
  3611                           	opt callstack 0
  3612  000032                     	ds	2
  3613  000034                     _tempx:
  3614                           	opt callstack 0
  3615  000034                     	ds	2
  3616  000036                     _y:
  3617                           	opt callstack 0
  3618  000036                     	ds	1
  3619  000037                     _x:
  3620                           	opt callstack 0
  3621  000037                     	ds	1
  3622  000038                     _row:
  3623                           	opt callstack 0
  3624  000038                     	ds	2
  3625                           
  3626                           	psect	dataBANK0
  3627  0000B4                     __pdataBANK0:
  3628                           	opt callstack 0
  3629  0000B4                     menu_game@F3103:
  3630                           	opt callstack 0
  3631  0000B4                     	ds	17
  3632  0000C5                     menu_game@F3100:
  3633                           	opt callstack 0
  3634  0000C5                     	ds	17
  3635                           
  3636                           	psect	cstackBANK0
  3637  000060                     __pcstackBANK0:
  3638                           	opt callstack 0
  3639  000060                     menu_game@message1:
  3640                           	opt callstack 0
  3641                           
  3642                           ; 17 bytes @ 0x0
  3643  000060                     	ds	17
  3644  000071                     menu_game@message2:
  3645                           	opt callstack 0
  3646                           
  3647                           ; 17 bytes @ 0x11
  3648  000071                     	ds	17
  3649  000082                     menu_game@board:
  3650                           	opt callstack 0
  3651                           
  3652                           ; 42 bytes @ 0x22
  3653  000082                     	ds	42
  3654  0000AC                     menu_game@PIECES:
  3655                           	opt callstack 0
  3656                           
  3657                           ; 2 bytes @ 0x4C
  3658  0000AC                     	ds	2
  3659  0000AE                     menu_game@done:
  3660                           	opt callstack 0
  3661                           
  3662                           ; 2 bytes @ 0x4E
  3663  0000AE                     	ds	2
  3664  0000B0                     menu_game@i:
  3665                           	opt callstack 0
  3666                           
  3667                           ; 2 bytes @ 0x50
  3668  0000B0                     	ds	2
  3669  0000B2                     menu_game@turn:
  3670                           	opt callstack 0
  3671                           
  3672                           ; 2 bytes @ 0x52
  3673  0000B2                     	ds	2
  3674                           
  3675                           	psect	cstackCOMRAM
  3676  000001                     __pcstackCOMRAM:
  3677                           	opt callstack 0
  3678  000001                     ?_mode_choice:
  3679                           	opt callstack 0
  3680  000001                     ?_player_choice:
  3681                           	opt callstack 0
  3682  000001                     ?___wmul:
  3683                           	opt callstack 0
  3684  000001                     glcd_WriteByte@data:
  3685                           	opt callstack 0
  3686  000001                     uartWrite@c:
  3687                           	opt callstack 0
  3688  000001                     ___wmul@multiplier:
  3689                           	opt callstack 0
  3690                           
  3691                           ; 2 bytes @ 0x0
  3692  000001                     	ds	1
  3693  000002                     glcd_WriteByte@side:
  3694                           	opt callstack 0
  3695                           
  3696                           ; 1 bytes @ 0x1
  3697  000002                     	ds	1
  3698  000003                     ??_mode_choice:
  3699  000003                     ??_player_choice:
  3700  000003                     glcd_FillScreen@color:
  3701                           	opt callstack 0
  3702  000003                     glcd_SetCursor@ypos:
  3703                           	opt callstack 0
  3704  000003                     glcd_WriteChar8X8@color:
  3705                           	opt callstack 0
  3706  000003                     glcd_WriteChar3x6@color:
  3707                           	opt callstack 0
  3708  000003                     ___wmul@multiplicand:
  3709                           	opt callstack 0
  3710                           
  3711                           ; 2 bytes @ 0x2
  3712  000003                     	ds	1
  3713  000004                     ??_glcd_WriteChar8X8:
  3714  000004                     ??_glcd_WriteChar3x6:
  3715  000004                     glcd_FillScreen@j:
  3716                           	opt callstack 0
  3717  000004                     glcd_SetCursor@side:
  3718                           	opt callstack 0
  3719                           
  3720                           ; 1 bytes @ 0x3
  3721  000004                     	ds	1
  3722  000005                     ?_takeTurn:
  3723                           	opt callstack 0
  3724  000005                     glcd_FillScreen@i:
  3725                           	opt callstack 0
  3726  000005                     glcd_SetCursor@xpos:
  3727                           	opt callstack 0
  3728  000005                     takeTurn@board:
  3729                           	opt callstack 0
  3730  000005                     ___wmul@product:
  3731                           	opt callstack 0
  3732                           
  3733                           ; 2 bytes @ 0x4
  3734  000005                     	ds	1
  3735  000006                     glcd_Init@mode:
  3736                           	opt callstack 0
  3737  000006                     glcd_WriteChar3x6@xpos:
  3738                           	opt callstack 0
  3739  000006                     glcd_WriteChar8X8@chr:
  3740                           	opt callstack 0
  3741  000006                     takeTurn@player:
  3742                           	opt callstack 0
  3743                           
  3744                           ; 2 bytes @ 0x5
  3745  000006                     	ds	1
  3746  000007                     ?_checkFour:
  3747                           	opt callstack 0
  3748  000007                     glcd_WriteChar3x6@ch:
  3749                           	opt callstack 0
  3750  000007                     checkFour@board:
  3751                           	opt callstack 0
  3752                           
  3753                           ; 1 bytes @ 0x6
  3754  000007                     	ds	1
  3755  000008                     glcd_WriteChar8X8@ch:
  3756                           	opt callstack 0
  3757  000008                     glcd_WriteChar3x6@i:
  3758                           	opt callstack 0
  3759  000008                     takeTurn@PIECES:
  3760                           	opt callstack 0
  3761  000008                     checkFour@a:
  3762                           	opt callstack 0
  3763                           
  3764                           ; 2 bytes @ 0x7
  3765  000008                     	ds	1
  3766  000009                     glcd_WriteChar8X8@xpos:
  3767                           	opt callstack 0
  3768  000009                     glcd_WriteChar3x6@side:
  3769                           	opt callstack 0
  3770                           
  3771                           ; 1 bytes @ 0x8
  3772  000009                     	ds	1
  3773  00000A                     ??_takeTurn:
  3774  00000A                     glcd_WriteChar8X8@i:
  3775                           	opt callstack 0
  3776  00000A                     checkFour@b:
  3777                           	opt callstack 0
  3778                           
  3779                           ; 2 bytes @ 0x9
  3780  00000A                     	ds	1
  3781  00000B                     glcd_WriteChar8X8@side:
  3782                           	opt callstack 0
  3783                           
  3784                           ; 1 bytes @ 0xA
  3785  00000B                     	ds	1
  3786  00000C                     glcd_WriteString@str:
  3787                           	opt callstack 0
  3788  00000C                     takeTurn@col:
  3789                           	opt callstack 0
  3790  00000C                     checkFour@c:
  3791                           	opt callstack 0
  3792                           
  3793                           ; 2 bytes @ 0xB
  3794  00000C                     	ds	2
  3795  00000E                     glcd_WriteString@font:
  3796                           	opt callstack 0
  3797  00000E                     takeTurn@row:
  3798                           	opt callstack 0
  3799  00000E                     checkFour@d:
  3800                           	opt callstack 0
  3801                           
  3802                           ; 2 bytes @ 0xD
  3803  00000E                     	ds	1
  3804  00000F                     glcd_WriteString@color:
  3805                           	opt callstack 0
  3806                           
  3807                           ; 1 bytes @ 0xE
  3808  00000F                     	ds	1
  3809  000010                     printBoard@board:
  3810                           	opt callstack 0
  3811                           
  3812                           ; 1 bytes @ 0xF
  3813  000010                     	ds	1
  3814  000011                     printBoard@temp:
  3815                           	opt callstack 0
  3816                           
  3817                           ; 1 bytes @ 0x10
  3818  000011                     	ds	1
  3819  000012                     _checkFour$478:
  3820                           	opt callstack 0
  3821  000012                     printBoard@row:
  3822                           	opt callstack 0
  3823                           
  3824                           ; 2 bytes @ 0x11
  3825  000012                     	ds	1
  3826  000013                     ?_horizontalCheck:
  3827                           	opt callstack 0
  3828  000013                     ?_verticalCheck:
  3829                           	opt callstack 0
  3830  000013                     ?_diagonalCheck:
  3831                           	opt callstack 0
  3832  000013                     horizontalCheck@board:
  3833                           	opt callstack 0
  3834  000013                     verticalCheck@board:
  3835                           	opt callstack 0
  3836  000013                     diagonalCheck@board:
  3837                           	opt callstack 0
  3838                           
  3839                           ; 1 bytes @ 0x12
  3840  000013                     	ds	1
  3841  000014                     printBoard@col:
  3842                           	opt callstack 0
  3843                           
  3844                           ; 2 bytes @ 0x13
  3845  000014                     	ds	1
  3846  000015                     ??_horizontalCheck:
  3847  000015                     ??_verticalCheck:
  3848  000015                     ??_diagonalCheck:
  3849                           
  3850                           ; 1 bytes @ 0x14
  3851  000015                     	ds	2
  3852  000017                     horizontalCheck@WIDTH:
  3853                           	opt callstack 0
  3854  000017                     verticalCheck@HEIGHT:
  3855                           	opt callstack 0
  3856  000017                     diagonalCheck@DIAG_RGT:
  3857                           	opt callstack 0
  3858                           
  3859                           ; 2 bytes @ 0x16
  3860  000017                     	ds	2
  3861  000019                     diagonalCheck@DIAG_LFT:
  3862                           	opt callstack 0
  3863                           
  3864                           ; 2 bytes @ 0x18
  3865  000019                     	ds	2
  3866  00001B                     ?_checkWin:
  3867                           	opt callstack 0
  3868  00001B                     checkWin@board:
  3869                           	opt callstack 0
  3870                           
  3871                           ; 1 bytes @ 0x1A
  3872  00001B                     	ds	2
  3873  00001D                     _checkWin$471:
  3874                           	opt callstack 0
  3875                           
  3876                           ; 1 bytes @ 0x1C
  3877  00001D                     	ds	1
  3878  00001E                     ??_menu_game:
  3879                           
  3880                           ; 1 bytes @ 0x1D
  3881  00001E                     	ds	2
  3882  000020                     ??_opening_menu:
  3883                           
  3884                           ; 1 bytes @ 0x1F
  3885  000020                     	ds	2
  3886  000022                     
  3887                           ; 1 bytes @ 0x21
  3888 ;;
  3889 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3890 ;;
  3891 ;; *************** function _main *****************
  3892 ;; Defined at:
  3893 ;;		line 14 in file "newmain.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels required when called:    6
  3913 ;; This function calls:
  3914 ;;		_glcd_Init
  3915 ;;		_initMyPIC18F
  3916 ;;		_opening_menu
  3917 ;;		_uartInit
  3918 ;; This function is called by:
  3919 ;;		Startup code after reset
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text0
  3924  0061EE                     __ptext0:
  3925                           	opt callstack 0
  3926  0061EE                     _main:
  3927                           	opt callstack 25
  3928                           
  3929                           ;newmain.c: 17: initMyPIC18F();
  3930                           
  3931                           ;incstack = 0
  3932  0061EE  ECD6  F030         	call	_initMyPIC18F	;wreg free
  3933                           
  3934                           ;newmain.c: 18: glcd_Init(1);
  3935  0061F2  0E01               	movlw	1
  3936  0061F4  EC7D  F032         	call	_glcd_Init
  3937                           
  3938                           ;newmain.c: 20: OSCCON|=0x70;
  3939  0061F8  0E70               	movlw	112
  3940  0061FA  12D3               	iorwf	211,f,c	;volatile
  3941                           
  3942                           ;newmain.c: 22: CMCON=0x07;
  3943  0061FC  0E07               	movlw	7
  3944  0061FE  6EB4               	movwf	180,c	;volatile
  3945                           
  3946                           ;newmain.c: 24: uartInit();
  3947  006200  ECDD  F030         	call	_uartInit	;wreg free
  3948                           
  3949                           ;newmain.c: 25: ADCON0bits.CHS = 0;
  3950  006204  0EC3               	movlw	-61
  3951  006206  16C2               	andwf	194,f,c	;volatile
  3952                           
  3953                           ;newmain.c: 26: ADCON0bits.ADON = 1;
  3954  006208  80C2               	bsf	194,0,c	;volatile
  3955                           
  3956                           ;newmain.c: 28: opening_menu();
  3957  00620A  EC0E  F033         	call	_opening_menu	;wreg free
  3958  00620E  EF00  F000         	goto	start
  3959  006212                     __end_of_main:
  3960                           	opt callstack 0
  3961                           
  3962 ;; *************** function _uartInit *****************
  3963 ;; Defined at:
  3964 ;;		line 9 in file "uart.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text1
  3992  0061BA                     __ptext1:
  3993                           	opt callstack 0
  3994  0061BA                     _uartInit:
  3995                           	opt callstack 30
  3996                           
  3997                           ;uart.c: 13: TXSTAbits.TX9=0;
  3998                           
  3999                           ;incstack = 0
  4000  0061BA  9CAC               	bcf	172,6,c	;volatile
  4001                           
  4002                           ;uart.c: 14: TXSTAbits.TXEN=1;
  4003  0061BC  8AAC               	bsf	172,5,c	;volatile
  4004                           
  4005                           ;uart.c: 15: TXSTAbits.SYNC=0;
  4006  0061BE  98AC               	bcf	172,4,c	;volatile
  4007                           
  4008                           ;uart.c: 16: TXSTAbits.BRGH=0;
  4009  0061C0  94AC               	bcf	172,2,c	;volatile
  4010                           
  4011                           ;uart.c: 17: RCSTAbits.SPEN=1;
  4012  0061C2  8EAB               	bsf	171,7,c	;volatile
  4013                           
  4014                           ;uart.c: 18: RCSTAbits.CREN=1;
  4015  0061C4  88AB               	bsf	171,4,c	;volatile
  4016                           
  4017                           ;uart.c: 19: SPBRG=12;
  4018  0061C6  0E0C               	movlw	12
  4019  0061C8  6EAF               	movwf	175,c	;volatile
  4020  0061CA  0012               	return		;funcret
  4021  0061CC                     __end_of_uartInit:
  4022                           	opt callstack 0
  4023                           
  4024 ;; *************** function _opening_menu *****************
  4025 ;; Defined at:
  4026 ;;		line 17 in file "menu.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4042 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4043 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4044 ;;Total ram usage:        2 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    5
  4047 ;; This function calls:
  4048 ;;		_glcd_FillScreen
  4049 ;;		_glcd_SetCursor
  4050 ;;		_glcd_WriteString
  4051 ;;		_menu_game
  4052 ;;		_mode_choice
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text2
  4059  00661C                     __ptext2:
  4060                           	opt callstack 0
  4061  00661C                     _opening_menu:
  4062                           	opt callstack 25
  4063                           
  4064                           ;menu.c: 19: glcd_SetCursor(25,0);
  4065                           
  4066                           ;incstack = 0
  4067  00661C  0E00               	movlw	0
  4068  00661E  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4069  006620  0E19               	movlw	25
  4070  006622  EC6C  F031         	call	_glcd_SetCursor
  4071                           
  4072                           ;menu.c: 20: glcd_WriteString("Connect 4", 1, 2);
  4073  006626  0EF0               	movlw	low STR_1
  4074  006628  6E0C               	movwf	glcd_WriteString@str^0,c
  4075  00662A  0E7F               	movlw	high STR_1
  4076  00662C  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4077  00662E  0E01               	movlw	1
  4078  006630  6E0E               	movwf	glcd_WriteString@font^0,c
  4079  006632  0E02               	movlw	2
  4080  006634  6E0F               	movwf	glcd_WriteString@color^0,c
  4081  006636  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4082                           
  4083                           ;menu.c: 21: glcd_SetCursor(22,4);
  4084  00663A  0E04               	movlw	4
  4085  00663C  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4086  00663E  0E16               	movlw	22
  4087  006640  EC6C  F031         	call	_glcd_SetCursor
  4088                           
  4089                           ;menu.c: 22: glcd_WriteString("Start Game", 1, 2);
  4090  006644  0EE5               	movlw	low STR_2
  4091  006646  6E0C               	movwf	glcd_WriteString@str^0,c
  4092  006648  0E7F               	movlw	high STR_2
  4093  00664A  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4094  00664C  0E01               	movlw	1
  4095  00664E  6E0E               	movwf	glcd_WriteString@font^0,c
  4096  006650  0E02               	movlw	2
  4097  006652  6E0F               	movwf	glcd_WriteString@color^0,c
  4098  006654  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4099                           
  4100                           ;menu.c: 25: _delay((unsigned long)((1000)*(8000000/4000.0)));
  4101  006658  0E0B               	movlw	11
  4102  00665A  6E21               	movwf	(??_opening_menu+1)^0,c
  4103  00665C  0E26               	movlw	38
  4104  00665E  6E20               	movwf	??_opening_menu^0,c
  4105  006660  0E5E               	movlw	94
  4106  006662                     u2357:
  4107  006662  2EE8               	decfsz	wreg,f,c
  4108  006664  D7FE               	bra	u2357
  4109  006666  2E20               	decfsz	??_opening_menu^0,f,c
  4110  006668  D7FC               	bra	u2357
  4111  00666A  2E21               	decfsz	(??_opening_menu+1)^0,f,c
  4112  00666C  D7FA               	bra	u2357
  4113                           
  4114                           ;menu.c: 29: mode = mode_choice();
  4115  00666E  EC17  F035         	call	_mode_choice	;wreg free
  4116  006672  C001  F028         	movff	?_mode_choice,_mode
  4117  006676  C002  F029         	movff	?_mode_choice+1,_mode+1
  4118                           
  4119                           ;menu.c: 31: if (mode){
  4120  00667A  5028               	movf	_mode^0,w,c
  4121  00667C  1029               	iorwf	(_mode+1)^0,w,c
  4122  00667E  B4D8               	btfsc	status,2,c
  4123  006680  0012               	return	
  4124                           
  4125                           ;menu.c: 32: glcd_SetCursor(22,5);
  4126  006682  0E05               	movlw	5
  4127  006684  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4128  006686  0E16               	movlw	22
  4129  006688  EC6C  F031         	call	_glcd_SetCursor
  4130                           
  4131                           ;menu.c: 33: glcd_WriteString("----------", 1, 2);
  4132  00668C  0EDA               	movlw	low STR_3
  4133  00668E  6E0C               	movwf	glcd_WriteString@str^0,c
  4134  006690  0E7F               	movlw	high STR_3
  4135  006692  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4136  006694  0E01               	movlw	1
  4137  006696  6E0E               	movwf	glcd_WriteString@font^0,c
  4138  006698  0E02               	movlw	2
  4139  00669A  6E0F               	movwf	glcd_WriteString@color^0,c
  4140  00669C  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4141                           
  4142                           ;menu.c: 34: _delay((unsigned long)((250)*(8000000/4000.0)));
  4143  0066A0  0E03               	movlw	3
  4144  0066A2  6E21               	movwf	(??_opening_menu+1)^0,c
  4145  0066A4  0E8A               	movlw	138
  4146  0066A6  6E20               	movwf	??_opening_menu^0,c
  4147  0066A8  0E56               	movlw	86
  4148  0066AA                     u2367:
  4149  0066AA  2EE8               	decfsz	wreg,f,c
  4150  0066AC  D7FE               	bra	u2367
  4151  0066AE  2E20               	decfsz	??_opening_menu^0,f,c
  4152  0066B0  D7FC               	bra	u2367
  4153  0066B2  2E21               	decfsz	(??_opening_menu+1)^0,f,c
  4154  0066B4  D7FA               	bra	u2367
  4155                           
  4156                           ;menu.c: 35: glcd_FillScreen(0);
  4157  0066B6  0E00               	movlw	0
  4158  0066B8  ECC4  F031         	call	_glcd_FillScreen
  4159                           
  4160                           ;menu.c: 36: menu_game();}
  4161  0066BC  EC79  F036         	call	_menu_game	;wreg free
  4162  0066C0  0012               	return		;funcret
  4163  0066C2                     __end_of_opening_menu:
  4164                           	opt callstack 0
  4165                           
  4166 ;; *************** function _mode_choice *****************
  4167 ;; Defined at:
  4168 ;;		line 251 in file "menu.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  2    0[COMRAM] int 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         2       0       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4185 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        4 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_opening_menu
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text3
  4196  006A2E                     __ptext3:
  4197                           	opt callstack 0
  4198  006A2E                     _mode_choice:
  4199                           	opt callstack 29
  4200                           
  4201                           ;menu.c: 253: tempx = 0;
  4202                           
  4203                           ;incstack = 0
  4204  006A2E  0E00               	movlw	0
  4205  006A30  6E35               	movwf	(_tempx+1)^0,c
  4206  006A32  0E00               	movlw	0
  4207  006A34  6E34               	movwf	_tempx^0,c
  4208                           
  4209                           ;menu.c: 254: tempy = 0;
  4210  006A36  0E00               	movlw	0
  4211  006A38  6E33               	movwf	(_tempy+1)^0,c
  4212  006A3A  0E00               	movlw	0
  4213  006A3C  6E32               	movwf	_tempy^0,c
  4214                           
  4215                           ;menu.c: 255: pressed = 0;
  4216  006A3E  0E00               	movlw	0
  4217  006A40  6E31               	movwf	(_pressed+1)^0,c
  4218  006A42  0E00               	movlw	0
  4219  006A44  6E30               	movwf	_pressed^0,c
  4220  006A46                     l2507:
  4221                           
  4222                           ;menu.c: 258: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4223  006A46  0E03               	movlw	3
  4224  006A48                     u2377:
  4225  006A48  2EE8               	decfsz	wreg,f,c
  4226  006A4A  D7FE               	bra	u2377
  4227  006A4C  F000               	nop	
  4228                           
  4229                           ;menu.c: 260: ADCON0bits.CHS = 0;
  4230  006A4E  0EC3               	movlw	-61
  4231  006A50  16C2               	andwf	194,f,c	;volatile
  4232                           
  4233                           ;menu.c: 261: ADCON0bits.GO = 1;
  4234  006A52  82C2               	bsf	194,1,c	;volatile
  4235                           
  4236                           ;menu.c: 262: PORTCbits.RC0 = 1;
  4237  006A54  8082               	bsf	130,0,c	;volatile
  4238  006A56                     l295:
  4239  006A56  B2C2               	btfsc	194,1,c	;volatile
  4240  006A58  D7FE               	goto	l295
  4241                           
  4242                           ;menu.c: 265: resultx = (ADRESH<<8)+ADRESL;
  4243  006A5A  50C4               	movf	196,w,c	;volatile
  4244  006A5C  6E04               	movwf	(??_mode_choice+1)^0,c
  4245  006A5E  6A03               	clrf	??_mode_choice^0,c
  4246  006A60  50C3               	movf	195,w,c	;volatile
  4247  006A62  2403               	addwf	??_mode_choice^0,w,c
  4248  006A64  6E2E               	movwf	_resultx^0,c
  4249  006A66  0E00               	movlw	0
  4250  006A68  2004               	addwfc	(??_mode_choice+1)^0,w,c
  4251  006A6A  6E2F               	movwf	(_resultx+1)^0,c
  4252                           
  4253                           ;menu.c: 266: PORTCbits.RC0 = 0;
  4254  006A6C  9082               	bcf	130,0,c	;volatile
  4255                           
  4256                           ;menu.c: 268: _delay((unsigned long)((5)*(8000000/4000000.0)));
  4257  006A6E  0E03               	movlw	3
  4258  006A70                     u2387:
  4259  006A70  2EE8               	decfsz	wreg,f,c
  4260  006A72  D7FE               	bra	u2387
  4261  006A74  F000               	nop	
  4262                           
  4263                           ;menu.c: 270: ADCON0bits.CHS = 1;
  4264  006A76  50C2               	movf	194,w,c	;volatile
  4265  006A78  0BC3               	andlw	-61
  4266  006A7A  0904               	iorlw	4
  4267  006A7C  6EC2               	movwf	194,c	;volatile
  4268                           
  4269                           ;menu.c: 271: ADCON0bits.GO = 1;
  4270  006A7E  82C2               	bsf	194,1,c	;volatile
  4271                           
  4272                           ;menu.c: 272: PORTCbits.RC1 = 1;
  4273  006A80  8282               	bsf	130,1,c	;volatile
  4274  006A82                     l298:
  4275  006A82  B2C2               	btfsc	194,1,c	;volatile
  4276  006A84  D7FE               	goto	l298
  4277                           
  4278                           ;menu.c: 275: resulty = (ADRESH<<8)+ADRESL;
  4279  006A86  50C4               	movf	196,w,c	;volatile
  4280  006A88  6E04               	movwf	(??_mode_choice+1)^0,c
  4281  006A8A  6A03               	clrf	??_mode_choice^0,c
  4282  006A8C  50C3               	movf	195,w,c	;volatile
  4283  006A8E  2403               	addwf	??_mode_choice^0,w,c
  4284  006A90  6E2C               	movwf	_resulty^0,c
  4285  006A92  0E00               	movlw	0
  4286  006A94  2004               	addwfc	(??_mode_choice+1)^0,w,c
  4287  006A96  6E2D               	movwf	(_resulty+1)^0,c
  4288                           
  4289                           ;menu.c: 276: PORTCbits.RC1 = 0;
  4290  006A98  9282               	bcf	130,1,c	;volatile
  4291                           
  4292                           ;menu.c: 279: if (((resultx == tempx) && (resulty == tempy)) && ((tempx > 350) && ((temp
      +                          y < 896)))){
  4293  006A9A  5034               	movf	_tempx^0,w,c
  4294  006A9C  182E               	xorwf	_resultx^0,w,c
  4295  006A9E  E151               	bnz	l2555
  4296  006AA0  5035               	movf	(_tempx+1)^0,w,c
  4297  006AA2  182F               	xorwf	(_resultx+1)^0,w,c
  4298  006AA4  A4D8               	btfss	status,2,c
  4299  006AA6  D04D               	goto	l2555
  4300  006AA8  5032               	movf	_tempy^0,w,c
  4301  006AAA  182C               	xorwf	_resulty^0,w,c
  4302  006AAC  E14A               	bnz	l2555
  4303  006AAE  5033               	movf	(_tempy+1)^0,w,c
  4304  006AB0  182D               	xorwf	(_resulty+1)^0,w,c
  4305  006AB2  B4D8               	btfsc	status,2,c
  4306  006AB4  BE35               	btfsc	(_tempx+1)^0,7,c
  4307  006AB6  D045               	goto	l2555
  4308  006AB8  0E5F               	movlw	95
  4309  006ABA  5C34               	subwf	_tempx^0,w,c
  4310  006ABC  0E01               	movlw	1
  4311  006ABE  5835               	subwfb	(_tempx+1)^0,w,c
  4312  006AC0  A0D8               	btfss	status,0,c
  4313  006AC2  D03F               	goto	l2555
  4314  006AC4  BE33               	btfsc	(_tempy+1)^0,7,c
  4315  006AC6  D006               	goto	u2150
  4316  006AC8  0E80               	movlw	128
  4317  006ACA  5C32               	subwf	_tempy^0,w,c
  4318  006ACC  0E03               	movlw	3
  4319  006ACE  5833               	subwfb	(_tempy+1)^0,w,c
  4320  006AD0  B0D8               	btfsc	status,0,c
  4321  006AD2  D037               	goto	l2555
  4322  006AD4                     u2150:
  4323                           
  4324                           ;menu.c: 282: if ( ((resultx == 512) || (resultx == 576) || (resultx == 704) || (resultx
      +                           == 640) || (resultx == 768)) && ((resulty == 704) || (resulty == 640) || (resulty == 76
      +                          8)))
  4325  006AD4  0E02               	movlw	2
  4326  006AD6  182F               	xorwf	(_resultx+1)^0,w,c
  4327  006AD8  102E               	iorwf	_resultx^0,w,c
  4328  006ADA  B4D8               	btfsc	status,2,c
  4329  006ADC  D01A               	goto	u2200
  4330  006ADE  0E40               	movlw	64
  4331  006AE0  182E               	xorwf	_resultx^0,w,c
  4332  006AE2  E104               	bnz	u2170
  4333  006AE4  0E02               	movlw	2
  4334  006AE6  182F               	xorwf	(_resultx+1)^0,w,c
  4335  006AE8  B4D8               	btfsc	status,2,c
  4336  006AEA  D013               	goto	u2200
  4337  006AEC                     u2170:
  4338  006AEC  0EC0               	movlw	192
  4339  006AEE  182E               	xorwf	_resultx^0,w,c
  4340  006AF0  E104               	bnz	u2180
  4341  006AF2  0E02               	movlw	2
  4342  006AF4  182F               	xorwf	(_resultx+1)^0,w,c
  4343  006AF6  B4D8               	btfsc	status,2,c
  4344  006AF8  D00C               	goto	u2200
  4345  006AFA                     u2180:
  4346  006AFA  0E80               	movlw	128
  4347  006AFC  182E               	xorwf	_resultx^0,w,c
  4348  006AFE  E104               	bnz	u2190
  4349  006B00  0E02               	movlw	2
  4350  006B02  182F               	xorwf	(_resultx+1)^0,w,c
  4351  006B04  B4D8               	btfsc	status,2,c
  4352  006B06  D005               	goto	u2200
  4353  006B08                     u2190:
  4354  006B08  0E03               	movlw	3
  4355  006B0A  182F               	xorwf	(_resultx+1)^0,w,c
  4356  006B0C  102E               	iorwf	_resultx^0,w,c
  4357  006B0E  A4D8               	btfss	status,2,c
  4358  006B10  D018               	goto	l2555
  4359  006B12                     u2200:
  4360  006B12  0EC0               	movlw	192
  4361  006B14  182C               	xorwf	_resulty^0,w,c
  4362  006B16  E104               	bnz	u2210
  4363  006B18  0E02               	movlw	2
  4364  006B1A  182D               	xorwf	(_resulty+1)^0,w,c
  4365  006B1C  B4D8               	btfsc	status,2,c
  4366  006B1E  D00C               	goto	u2230
  4367  006B20                     u2210:
  4368  006B20  0E80               	movlw	128
  4369  006B22  182C               	xorwf	_resulty^0,w,c
  4370  006B24  E104               	bnz	u2220
  4371  006B26  0E02               	movlw	2
  4372  006B28  182D               	xorwf	(_resulty+1)^0,w,c
  4373  006B2A  B4D8               	btfsc	status,2,c
  4374  006B2C  D005               	goto	u2230
  4375  006B2E                     u2220:
  4376  006B2E  0E03               	movlw	3
  4377  006B30  182D               	xorwf	(_resulty+1)^0,w,c
  4378  006B32  102C               	iorwf	_resulty^0,w,c
  4379  006B34  A4D8               	btfss	status,2,c
  4380  006B36  D005               	goto	l2555
  4381  006B38                     u2230:
  4382                           
  4383                           ;menu.c: 283: {;menu.c: 284: pressed = 1;
  4384  006B38  0E00               	movlw	0
  4385  006B3A  6E31               	movwf	(_pressed+1)^0,c
  4386  006B3C  0E01               	movlw	1
  4387  006B3E  6E30               	movwf	_pressed^0,c
  4388                           
  4389                           ;menu.c: 285: break;
  4390  006B40  D017               	goto	u2240
  4391  006B42                     l2555:
  4392                           
  4393                           ;menu.c: 286: };menu.c: 287: };menu.c: 289: _delay((unsigned long)((250)*(8000000/4000.0
      +                          )));
  4394  006B42  0E03               	movlw	3
  4395  006B44  6E04               	movwf	(??_mode_choice+1)^0,c
  4396  006B46  0E8A               	movlw	138
  4397  006B48  6E03               	movwf	??_mode_choice^0,c
  4398  006B4A  0E56               	movlw	86
  4399  006B4C                     u2397:
  4400  006B4C  2EE8               	decfsz	wreg,f,c
  4401  006B4E  D7FE               	bra	u2397
  4402  006B50  2E03               	decfsz	??_mode_choice^0,f,c
  4403  006B52  D7FC               	bra	u2397
  4404  006B54  2E04               	decfsz	(??_mode_choice+1)^0,f,c
  4405  006B56  D7FA               	bra	u2397
  4406                           
  4407                           ;menu.c: 291: tempx = resultx;
  4408  006B58  C02E  F034         	movff	_resultx,_tempx
  4409  006B5C  C02F  F035         	movff	_resultx+1,_tempx+1
  4410                           
  4411                           ;menu.c: 292: tempy = resulty;
  4412  006B60  C02C  F032         	movff	_resulty,_tempy
  4413  006B64  C02D  F033         	movff	_resulty+1,_tempy+1
  4414                           
  4415                           ;menu.c: 295: } while(pressed != 1);
  4416  006B68  0430               	decf	_pressed^0,w,c
  4417  006B6A  1031               	iorwf	(_pressed+1)^0,w,c
  4418  006B6C  A4D8               	btfss	status,2,c
  4419  006B6E  D76B               	goto	l2507
  4420  006B70                     u2240:
  4421                           
  4422                           ;menu.c: 297: return pressed;
  4423  006B70  C030  F001         	movff	_pressed,?_mode_choice
  4424  006B74  C031  F002         	movff	_pressed+1,?_mode_choice+1
  4425  006B78  0012               	return		;funcret
  4426  006B7A                     __end_of_mode_choice:
  4427                           	opt callstack 0
  4428                           
  4429 ;; *************** function _menu_game *****************
  4430 ;; Defined at:
  4431 ;;		line 40 in file "menu.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  message2       17   17[BANK0 ] unsigned char [17]
  4436 ;;  message1       17    0[BANK0 ] unsigned char [17]
  4437 ;;  i               2   80[BANK0 ] int 
  4438 ;;  board          42   34[BANK0 ] unsigned char [42]
  4439 ;;  turn            2   82[BANK0 ] int 
  4440 ;;  done            2   78[BANK0 ] int 
  4441 ;;  PIECES          2   76[BANK0 ] PTR const unsigned char 
  4442 ;;		 -> STR_4(3), 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0
  4453 ;;      Locals:         0      84       0       0       0       0       0       0       0
  4454 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4455 ;;      Totals:         2      84       0       0       0       0       0       0       0
  4456 ;;Total ram usage:       86 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    4
  4459 ;; This function calls:
  4460 ;;		_checkWin
  4461 ;;		_glcd_SetCursor
  4462 ;;		_glcd_WriteString
  4463 ;;		_printBoard
  4464 ;;		_takeTurn
  4465 ;;		_uartWrite
  4466 ;; This function is called by:
  4467 ;;		_opening_menu
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text4
  4472  006CF2                     __ptext4:
  4473                           	opt callstack 0
  4474  006CF2                     _menu_game:
  4475                           	opt callstack 25
  4476                           
  4477                           ;menu.c: 42: unsigned char board[42];;menu.c: 43: const char *PIECES = "XO";
  4478                           
  4479                           ;incstack = 0
  4480  006CF2  0EFA               	movlw	low STR_4
  4481  006CF4  0100               	movlb	0	; () banked
  4482  006CF6  6FAC               	movwf	menu_game@PIECES& (0+255),b
  4483  006CF8  0E7F               	movlw	high STR_4
  4484  006CFA  6FAD               	movwf	(menu_game@PIECES+1)& (0+255),b
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;menu.c: 45: for (int i=0;i<42;i++) {
  4488  006CFC  0E00               	movlw	0
  4489  006CFE  6FB1               	movwf	(menu_game@i+1)& (0+255),b
  4490  006D00  0E00               	movlw	0
  4491  006D02  6FB0               	movwf	menu_game@i& (0+255),b
  4492  006D04                     l2571:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;menu.c: 46: board[i]= ' ';}
  4496  006D04  51B0               	movf	menu_game@i& (0+255),w,b
  4497  006D06  0F82               	addlw	low menu_game@board
  4498  006D08  6ED9               	movwf	fsr2l,c
  4499  006D0A  6ADA               	clrf	fsr2h,c
  4500  006D0C  0E20               	movlw	32
  4501  006D0E  6EDF               	movwf	indf2,c
  4502                           
  4503                           ; BSR set to: 0
  4504  006D10  4BB0               	infsnz	menu_game@i& (0+255),f,b
  4505  006D12  2BB1               	incf	(menu_game@i+1)& (0+255),f,b
  4506                           
  4507                           ; BSR set to: 0
  4508  006D14  BFB1               	btfsc	(menu_game@i+1)& (0+255),7,b
  4509  006D16  D7F6               	goto	l2571
  4510  006D18  51B1               	movf	(menu_game@i+1)& (0+255),w,b
  4511  006D1A  E104               	bnz	u2250
  4512  006D1C  0E2A               	movlw	42
  4513  006D1E  5DB0               	subwf	menu_game@i& (0+255),w,b
  4514  006D20  A0D8               	btfss	status,0,c
  4515  006D22  D7F0               	goto	l2571
  4516  006D24                     u2250:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;menu.c: 48: int turn = 0;
  4520  006D24  0E00               	movlw	0
  4521  006D26  6FB3               	movwf	(menu_game@turn+1)& (0+255),b
  4522  006D28  0E00               	movlw	0
  4523  006D2A  6FB2               	movwf	menu_game@turn& (0+255),b
  4524                           
  4525                           ;menu.c: 49: int done = 0;
  4526  006D2C  0E00               	movlw	0
  4527  006D2E  6FAF               	movwf	(menu_game@done+1)& (0+255),b
  4528  006D30  0E00               	movlw	0
  4529  006D32  6FAE               	movwf	menu_game@done& (0+255),b
  4530                           
  4531                           ;menu.c: 52: for(turn = 0; turn < 6 * 7 && !done; turn++){
  4532  006D34  0E00               	movlw	0
  4533  006D36  6FB3               	movwf	(menu_game@turn+1)& (0+255),b
  4534  006D38  0E00               	movlw	0
  4535  006D3A  6FB2               	movwf	menu_game@turn& (0+255),b
  4536  006D3C  D081               	goto	l2611
  4537  006D3E                     l2579:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;menu.c: 53: printBoard(board);
  4541  006D3E  0E82               	movlw	low menu_game@board
  4542  006D40  6E10               	movwf	printBoard@board^0,c
  4543  006D42  ECC5  F032         	call	_printBoard	;wreg free
  4544                           
  4545                           ;menu.c: 56: switch (turn%2){
  4546  006D46  D020               	goto	l2591
  4547  006D48                     l2581:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;menu.c: 58: glcd_SetCursor(10,0);
  4551  006D48  0E00               	movlw	0
  4552  006D4A  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4553  006D4C  0E0A               	movlw	10
  4554  006D4E  EC6C  F031         	call	_glcd_SetCursor
  4555                           
  4556                           ;menu.c: 59: glcd_WriteString("Player 1 turn", 1, 2);
  4557  006D52  0EB2               	movlw	low STR_5
  4558  006D54  6E0C               	movwf	glcd_WriteString@str^0,c
  4559  006D56  0E7F               	movlw	high STR_5
  4560  006D58  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4561  006D5A  0E01               	movlw	1
  4562  006D5C  6E0E               	movwf	glcd_WriteString@font^0,c
  4563  006D5E  0E02               	movlw	2
  4564  006D60  6E0F               	movwf	glcd_WriteString@color^0,c
  4565  006D62  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4566                           
  4567                           ;menu.c: 60: break;
  4568  006D66  D022               	goto	l2593
  4569  006D68                     l2585:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;menu.c: 62: glcd_SetCursor(10,0);
  4573  006D68  0E00               	movlw	0
  4574  006D6A  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4575  006D6C  0E0A               	movlw	10
  4576  006D6E  EC6C  F031         	call	_glcd_SetCursor
  4577                           
  4578                           ;menu.c: 63: glcd_WriteString("Player 2 turn", 1, 2);
  4579  006D72  0EC0               	movlw	low STR_6
  4580  006D74  6E0C               	movwf	glcd_WriteString@str^0,c
  4581  006D76  0E7F               	movlw	high STR_6
  4582  006D78  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4583  006D7A  0E01               	movlw	1
  4584  006D7C  6E0E               	movwf	glcd_WriteString@font^0,c
  4585  006D7E  0E02               	movlw	2
  4586  006D80  6E0F               	movwf	glcd_WriteString@color^0,c
  4587  006D82  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4588                           
  4589                           ;menu.c: 64: break;
  4590  006D86  D012               	goto	l2593
  4591  006D88                     l2591:
  4592  006D88  0E01               	movlw	1
  4593  006D8A  0100               	movlb	0	; () banked
  4594  006D8C  15B2               	andwf	menu_game@turn& (0+255),w,b
  4595  006D8E  6E1E               	movwf	??_menu_game^0,c
  4596  006D90  0E00               	movlw	0
  4597  006D92  15B3               	andwf	(menu_game@turn+1)& (0+255),w,b
  4598  006D94  6E1F               	movwf	(??_menu_game+1)^0,c
  4599                           
  4600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4601                           ; Switch size 1, requested type "simple"
  4602                           ; Number of cases is 1, Range of values is 0 to 0
  4603                           ; switch strategies available:
  4604                           ; Name         Instructions Cycles
  4605                           ; simple_byte            4     3 (average)
  4606                           ;	Chosen strategy is simple_byte
  4607  006D96  501F               	movf	(??_menu_game+1)^0,w,c
  4608  006D98  0A00               	xorlw	0	; case 0
  4609  006D9A  A4D8               	btfss	status,2,c
  4610  006D9C  D007               	goto	l2593
  4611                           
  4612                           ; BSR set to: 0
  4613                           ; Switch size 1, requested type "simple"
  4614                           ; Number of cases is 2, Range of values is 0 to 1
  4615                           ; switch strategies available:
  4616                           ; Name         Instructions Cycles
  4617                           ; simple_byte            7     4 (average)
  4618                           ;	Chosen strategy is simple_byte
  4619  006D9E  501E               	movf	??_menu_game^0,w,c
  4620  006DA0  0A00               	xorlw	0	; case 0
  4621  006DA2  B4D8               	btfsc	status,2,c
  4622  006DA4  D7D1               	goto	l2581
  4623  006DA6  0A01               	xorlw	1	; case 1
  4624  006DA8  B4D8               	btfsc	status,2,c
  4625  006DAA  D7DE               	goto	l2585
  4626  006DAC                     l2593:
  4627                           
  4628                           ;menu.c: 67: _delay((unsigned long)((250)*(8000000/4000.0)));
  4629  006DAC  0E03               	movlw	3
  4630  006DAE  6E1F               	movwf	(??_menu_game+1)^0,c
  4631  006DB0  0E8A               	movlw	138
  4632  006DB2  6E1E               	movwf	??_menu_game^0,c
  4633  006DB4  0E56               	movlw	86
  4634  006DB6                     u2407:
  4635  006DB6  2EE8               	decfsz	wreg,f,c
  4636  006DB8  D7FE               	bra	u2407
  4637  006DBA  2E1E               	decfsz	??_menu_game^0,f,c
  4638  006DBC  D7FC               	bra	u2407
  4639  006DBE  2E1F               	decfsz	(??_menu_game+1)^0,f,c
  4640  006DC0  D7FA               	bra	u2407
  4641                           
  4642                           ;menu.c: 71: while(!takeTurn(board, turn % 2, PIECES)){
  4643  006DC2  D013               	goto	l2601
  4644  006DC4                     l2595:
  4645                           
  4646                           ;menu.c: 72: printBoard(board);
  4647  006DC4  0E82               	movlw	low menu_game@board
  4648  006DC6  6E10               	movwf	printBoard@board^0,c
  4649  006DC8  ECC5  F032         	call	_printBoard	;wreg free
  4650                           
  4651                           ;menu.c: 73: glcd_SetCursor(10,1);
  4652  006DCC  0E01               	movlw	1
  4653  006DCE  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4654  006DD0  0E0A               	movlw	10
  4655  006DD2  EC6C  F031         	call	_glcd_SetCursor
  4656                           
  4657                           ;menu.c: 74: glcd_WriteString(" Collumn full !", 1, 2);
  4658  006DD6  0EA2               	movlw	low STR_7
  4659  006DD8  6E0C               	movwf	glcd_WriteString@str^0,c
  4660  006DDA  0E7F               	movlw	high STR_7
  4661  006DDC  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4662  006DDE  0E01               	movlw	1
  4663  006DE0  6E0E               	movwf	glcd_WriteString@font^0,c
  4664  006DE2  0E02               	movlw	2
  4665  006DE4  6E0F               	movwf	glcd_WriteString@color^0,c
  4666  006DE6  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4667  006DEA                     l2601:
  4668  006DEA  0E82               	movlw	low menu_game@board
  4669  006DEC  6E05               	movwf	takeTurn@board^0,c
  4670  006DEE  0E01               	movlw	1
  4671  006DF0  0100               	movlb	0	; () banked
  4672  006DF2  15B2               	andwf	menu_game@turn& (0+255),w,b
  4673  006DF4  6E06               	movwf	takeTurn@player^0,c
  4674  006DF6  6A07               	clrf	(takeTurn@player+1)^0,c
  4675  006DF8  C0AC  F008         	movff	menu_game@PIECES,takeTurn@PIECES
  4676  006DFC  C0AD  F009         	movff	menu_game@PIECES+1,takeTurn@PIECES+1
  4677  006E00  ECFA  F031         	call	_takeTurn	;wreg free
  4678  006E04  5005               	movf	?_takeTurn^0,w,c
  4679  006E06  1006               	iorwf	(?_takeTurn+1)^0,w,c
  4680  006E08  B4D8               	btfsc	status,2,c
  4681  006E0A  D7DC               	goto	l2595
  4682                           
  4683                           ;menu.c: 75: };menu.c: 76: glcd_SetCursor(0,1);
  4684  006E0C  0E01               	movlw	1
  4685  006E0E  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4686  006E10  0E00               	movlw	0
  4687  006E12  EC6C  F031         	call	_glcd_SetCursor
  4688                           
  4689                           ;menu.c: 77: glcd_WriteString("                ", 1, 2);
  4690  006E16  0E91               	movlw	low STR_8
  4691  006E18  6E0C               	movwf	glcd_WriteString@str^0,c
  4692  006E1A  0E7F               	movlw	high STR_8
  4693  006E1C  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4694  006E1E  0E01               	movlw	1
  4695  006E20  6E0E               	movwf	glcd_WriteString@font^0,c
  4696  006E22  0E02               	movlw	2
  4697  006E24  6E0F               	movwf	glcd_WriteString@color^0,c
  4698  006E26  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4699                           
  4700                           ;menu.c: 79: done = checkWin(board);
  4701  006E2A  0E82               	movlw	low menu_game@board
  4702  006E2C  6E1B               	movwf	checkWin@board^0,c
  4703  006E2E  EC4C  F031         	call	_checkWin	;wreg free
  4704  006E32  C01B  F0AE         	movff	?_checkWin,menu_game@done
  4705  006E36  C01C  F0AF         	movff	?_checkWin+1,menu_game@done+1
  4706  006E3A  0100               	movlb	0	; () banked
  4707  006E3C  4BB2               	infsnz	menu_game@turn& (0+255),f,b
  4708  006E3E  2BB3               	incf	(menu_game@turn+1)& (0+255),f,b
  4709  006E40                     l2611:
  4710                           
  4711                           ; BSR set to: 0
  4712  006E40  BFB3               	btfsc	(menu_game@turn+1)& (0+255),7,b
  4713  006E42  D006               	goto	u2270
  4714  006E44  51B3               	movf	(menu_game@turn+1)& (0+255),w,b
  4715  006E46  E108               	bnz	l2615
  4716  006E48  0E2A               	movlw	42
  4717  006E4A  5DB2               	subwf	menu_game@turn& (0+255),w,b
  4718  006E4C  B0D8               	btfsc	status,0,c
  4719  006E4E  D004               	goto	u2280
  4720  006E50                     u2270:
  4721                           
  4722                           ; BSR set to: 0
  4723  006E50  51AE               	movf	menu_game@done& (0+255),w,b
  4724  006E52  11AF               	iorwf	(menu_game@done+1)& (0+255),w,b
  4725  006E54  B4D8               	btfsc	status,2,c
  4726  006E56  D773               	goto	l2579
  4727  006E58                     u2280:
  4728  006E58                     l2615:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;menu.c: 80: };menu.c: 82: printBoard(board);
  4732  006E58  0E82               	movlw	low menu_game@board
  4733  006E5A  6E10               	movwf	printBoard@board^0,c
  4734  006E5C  ECC5  F032         	call	_printBoard	;wreg free
  4735                           
  4736                           ;menu.c: 84: if(turn == 6 * 7 && !done){
  4737  006E60  0E2A               	movlw	42
  4738  006E62  0100               	movlb	0	; () banked
  4739  006E64  19B2               	xorwf	menu_game@turn& (0+255),w,b
  4740  006E66  11B3               	iorwf	(menu_game@turn+1)& (0+255),w,b
  4741  006E68  A4D8               	btfss	status,2,c
  4742  006E6A  D023               	goto	l2627
  4743                           
  4744                           ; BSR set to: 0
  4745  006E6C  51AE               	movf	menu_game@done& (0+255),w,b
  4746  006E6E  11AF               	iorwf	(menu_game@done+1)& (0+255),w,b
  4747  006E70  A4D8               	btfss	status,2,c
  4748  006E72  D01F               	goto	l2627
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;menu.c: 85: glcd_SetCursor(0,1);
  4752  006E74  0E01               	movlw	1
  4753  006E76  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4754  006E78  0E00               	movlw	0
  4755  006E7A  EC6C  F031         	call	_glcd_SetCursor
  4756                           
  4757                           ;menu.c: 86: glcd_WriteString("                ", 1, 2);
  4758  006E7E  0E91               	movlw	low STR_8
  4759  006E80  6E0C               	movwf	glcd_WriteString@str^0,c
  4760  006E82  0E7F               	movlw	high STR_8
  4761  006E84  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4762  006E86  0E01               	movlw	1
  4763  006E88  6E0E               	movwf	glcd_WriteString@font^0,c
  4764  006E8A  0E02               	movlw	2
  4765  006E8C  6E0F               	movwf	glcd_WriteString@color^0,c
  4766  006E8E  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4767                           
  4768                           ;menu.c: 87: glcd_SetCursor(0,1);
  4769  006E92  0E01               	movlw	1
  4770  006E94  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4771  006E96  0E00               	movlw	0
  4772  006E98  EC6C  F031         	call	_glcd_SetCursor
  4773                           
  4774                           ;menu.c: 88: glcd_WriteString("It's a tie!", 1, 2);
  4775  006E9C  0ECE               	movlw	low STR_10
  4776  006E9E  6E0C               	movwf	glcd_WriteString@str^0,c
  4777  006EA0  0E7F               	movlw	high STR_10
  4778  006EA2  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4779  006EA4  0E01               	movlw	1
  4780  006EA6  6E0E               	movwf	glcd_WriteString@font^0,c
  4781  006EA8  0E02               	movlw	2
  4782  006EAA  6E0F               	movwf	glcd_WriteString@color^0,c
  4783  006EAC  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4784                           
  4785                           ;menu.c: 90: } else {
  4786  006EB0  0012               	return	
  4787  006EB2                     l2627:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;menu.c: 91: turn--;
  4791  006EB2  07B2               	decf	menu_game@turn& (0+255),f,b
  4792  006EB4  A0D8               	btfss	status,0,c
  4793  006EB6  07B3               	decf	(menu_game@turn+1)& (0+255),f,b
  4794                           
  4795                           ;menu.c: 92: switch (turn%2+1){
  4796  006EB8  D060               	goto	l2659
  4797  006EBA                     l2629:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;menu.c: 94: glcd_SetCursor(0,0);
  4801  006EBA  0E00               	movlw	0
  4802  006EBC  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4803  006EBE  0E00               	movlw	0
  4804  006EC0  EC6C  F031         	call	_glcd_SetCursor
  4805                           
  4806                           ;menu.c: 95: glcd_WriteString("        ", 1, 2);
  4807  006EC4  0E99               	movlw	low (STR_8+8)
  4808  006EC6  6E0C               	movwf	glcd_WriteString@str^0,c
  4809  006EC8  0E7F               	movlw	high (STR_8+8)
  4810  006ECA  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4811  006ECC  0E01               	movlw	1
  4812  006ECE  6E0E               	movwf	glcd_WriteString@font^0,c
  4813  006ED0  0E02               	movlw	2
  4814  006ED2  6E0F               	movwf	glcd_WriteString@color^0,c
  4815  006ED4  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4816                           
  4817                           ;menu.c: 96: glcd_SetCursor(1,0);
  4818  006ED8  0E00               	movlw	0
  4819  006EDA  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4820  006EDC  0E01               	movlw	1
  4821  006EDE  EC6C  F031         	call	_glcd_SetCursor
  4822                           
  4823                           ;menu.c: 97: unsigned char message1[] = "Player 1(X) wins";
  4824  006EE2  EE20  F0C5         	lfsr	2,menu_game@F3100
  4825  006EE6  EE10  F060         	lfsr	1,menu_game@message1
  4826  006EEA  0E10               	movlw	16
  4827  006EEC                     u2311:
  4828  006EEC  CFDB FFE3          	movff	plusw2,plusw1
  4829  006EF0  06E8               	decf	wreg,f,c
  4830  006EF2  E2FC               	bc	u2311
  4831                           
  4832                           ;menu.c: 98: glcd_WriteString(message1, 1, 2);
  4833  006EF4  0E60               	movlw	low menu_game@message1
  4834  006EF6  6E0C               	movwf	glcd_WriteString@str^0,c
  4835  006EF8  6A0D               	clrf	(glcd_WriteString@str+1)^0,c
  4836  006EFA  0E01               	movlw	1
  4837  006EFC  6E0E               	movwf	glcd_WriteString@font^0,c
  4838  006EFE  0E02               	movlw	2
  4839  006F00  6E0F               	movwf	glcd_WriteString@color^0,c
  4840  006F02  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4841                           
  4842                           ;menu.c: 99: uartWrite('X');
  4843  006F06  0E58               	movlw	88
  4844  006F08  ECD0  F030         	call	_uartWrite
  4845  006F0C                     l2641:
  4846                           
  4847                           ;menu.c: 100: _delay((unsigned long)((2000)*(8000000/4000.0)));
  4848  006F0C  0E15               	movlw	21
  4849  006F0E  6E1F               	movwf	(??_menu_game+1)^0,c
  4850  006F10  0E4B               	movlw	75
  4851  006F12  6E1E               	movwf	??_menu_game^0,c
  4852  006F14  0EBE               	movlw	190
  4853  006F16                     u2417:
  4854  006F16  2EE8               	decfsz	wreg,f,c
  4855  006F18  D7FE               	bra	u2417
  4856  006F1A  2E1E               	decfsz	??_menu_game^0,f,c
  4857  006F1C  D7FC               	bra	u2417
  4858  006F1E  2E1F               	decfsz	(??_menu_game+1)^0,f,c
  4859  006F20  D7FA               	bra	u2417
  4860  006F22  D000               	nop2	
  4861                           
  4862                           ;menu.c: 101: break;
  4863  006F24  0012               	return	
  4864  006F26                     l2643:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;menu.c: 103: glcd_SetCursor(0,0);
  4868  006F26  0E00               	movlw	0
  4869  006F28  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4870  006F2A  0E00               	movlw	0
  4871  006F2C  EC6C  F031         	call	_glcd_SetCursor
  4872                           
  4873                           ;menu.c: 104: glcd_WriteString("        ", 1, 2);
  4874  006F30  0E99               	movlw	low (STR_8+8)
  4875  006F32  6E0C               	movwf	glcd_WriteString@str^0,c
  4876  006F34  0E7F               	movlw	high (STR_8+8)
  4877  006F36  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  4878  006F38  0E01               	movlw	1
  4879  006F3A  6E0E               	movwf	glcd_WriteString@font^0,c
  4880  006F3C  0E02               	movlw	2
  4881  006F3E  6E0F               	movwf	glcd_WriteString@color^0,c
  4882  006F40  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4883                           
  4884                           ;menu.c: 105: glcd_SetCursor(1,0);
  4885  006F44  0E00               	movlw	0
  4886  006F46  6E03               	movwf	glcd_SetCursor@ypos^0,c
  4887  006F48  0E01               	movlw	1
  4888  006F4A  EC6C  F031         	call	_glcd_SetCursor
  4889                           
  4890                           ;menu.c: 106: unsigned char message2[] = "Player 2(0) wins";
  4891  006F4E  EE20  F0B4         	lfsr	2,menu_game@F3103
  4892  006F52  EE10  F071         	lfsr	1,menu_game@message2
  4893  006F56  0E10               	movlw	16
  4894  006F58                     u2321:
  4895  006F58  CFDB FFE3          	movff	plusw2,plusw1
  4896  006F5C  06E8               	decf	wreg,f,c
  4897  006F5E  E2FC               	bc	u2321
  4898                           
  4899                           ;menu.c: 107: glcd_WriteString(message2, 1, 2);
  4900  006F60  0E71               	movlw	low menu_game@message2
  4901  006F62  6E0C               	movwf	glcd_WriteString@str^0,c
  4902  006F64  6A0D               	clrf	(glcd_WriteString@str+1)^0,c
  4903  006F66  0E01               	movlw	1
  4904  006F68  6E0E               	movwf	glcd_WriteString@font^0,c
  4905  006F6A  0E02               	movlw	2
  4906  006F6C  6E0F               	movwf	glcd_WriteString@color^0,c
  4907  006F6E  EC3A  F032         	call	_glcd_WriteString	;wreg free
  4908                           
  4909                           ;menu.c: 108: uartWrite('O');
  4910  006F72  0E4F               	movlw	79
  4911  006F74  ECD0  F030         	call	_uartWrite
  4912  006F78  D7C9               	goto	l2641
  4913  006F7A                     l2659:
  4914                           
  4915                           ; BSR set to: 0
  4916  006F7A  0E01               	movlw	1
  4917  006F7C  15B2               	andwf	menu_game@turn& (0+255),w,b
  4918  006F7E  6E1E               	movwf	??_menu_game^0,c
  4919  006F80  0E00               	movlw	0
  4920  006F82  15B3               	andwf	(menu_game@turn+1)& (0+255),w,b
  4921  006F84  6E1F               	movwf	(??_menu_game+1)^0,c
  4922  006F86  0E01               	movlw	1
  4923  006F88  261E               	addwf	??_menu_game^0,f,c
  4924  006F8A  0E00               	movlw	0
  4925  006F8C  221F               	addwfc	(??_menu_game+1)^0,f,c
  4926                           
  4927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4928                           ; Switch size 1, requested type "simple"
  4929                           ; Number of cases is 1, Range of values is 0 to 0
  4930                           ; switch strategies available:
  4931                           ; Name         Instructions Cycles
  4932                           ; simple_byte            4     3 (average)
  4933                           ;	Chosen strategy is simple_byte
  4934  006F8E  501F               	movf	(??_menu_game+1)^0,w,c
  4935  006F90  0A00               	xorlw	0	; case 0
  4936  006F92  A4D8               	btfss	status,2,c
  4937  006F94  0012               	return	
  4938                           
  4939                           ; BSR set to: 0
  4940                           ; Switch size 1, requested type "simple"
  4941                           ; Number of cases is 2, Range of values is 1 to 2
  4942                           ; switch strategies available:
  4943                           ; Name         Instructions Cycles
  4944                           ; simple_byte            7     4 (average)
  4945                           ;	Chosen strategy is simple_byte
  4946  006F96  501E               	movf	??_menu_game^0,w,c
  4947  006F98  0A01               	xorlw	1	; case 1
  4948  006F9A  B4D8               	btfsc	status,2,c
  4949  006F9C  D78E               	goto	l2629
  4950  006F9E  0A03               	xorlw	3	; case 2
  4951  006FA0  A4D8               	btfss	status,2,c
  4952  006FA2  0012               	return	
  4953  006FA4  D7C0               	goto	l2643
  4954  006FA6                     __end_of_menu_game:
  4955                           	opt callstack 0
  4956                           
  4957 ;; *************** function _uartWrite *****************
  4958 ;; Defined at:
  4959 ;;		line 37 in file "uart.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  c               1    wreg     unsigned char 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  c               1    0[COMRAM] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  2  148[None  ] int 
  4966 ;; Registers used:
  4967 ;;		wreg
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0
  4974 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4976 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4977 ;;Total ram usage:        1 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_menu_game
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text5
  4987  0061A0                     __ptext5:
  4988                           	opt callstack 0
  4989  0061A0                     _uartWrite:
  4990                           	opt callstack 28
  4991                           
  4992                           ;incstack = 0
  4993                           ;uartWrite@c stored from wreg
  4994  0061A0  6E01               	movwf	uartWrite@c^0,c
  4995                           
  4996                           ;uart.c: 40: if(PIR1bits.TXIF!=0)
  4997  0061A2  A89E               	btfss	158,4,c	;volatile
  4998  0061A4  0012               	return	
  4999                           
  5000                           ;uart.c: 41: {;uart.c: 42: TXREG=c;
  5001  0061A6  C001  FFAD         	movff	uartWrite@c,4013	;volatile
  5002  0061AA  0012               	return		;funcret
  5003  0061AC                     __end_of_uartWrite:
  5004                           	opt callstack 0
  5005                           
  5006 ;; *************** function _takeTurn *****************
  5007 ;; Defined at:
  5008 ;;		line 134 in file "menu.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  board           1    4[COMRAM] PTR unsigned char 
  5011 ;;		 -> menu_game@board(42), 
  5012 ;;  player          2    5[COMRAM] int 
  5013 ;;  PIECES          2    7[COMRAM] PTR const unsigned char 
  5014 ;;		 -> STR_4(3), 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  row             2   13[COMRAM] int 
  5017 ;;  col             2   11[COMRAM] int 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2    4[COMRAM] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 3F/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         5       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5030 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:       11 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    1
  5034 ;; This function calls:
  5035 ;;		_player_choice
  5036 ;; This function is called by:
  5037 ;;		_menu_game
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text6
  5042  0063F4                     __ptext6:
  5043                           	opt callstack 0
  5044  0063F4                     _takeTurn:
  5045                           	opt callstack 27
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;menu.c: 135: int row, col;;menu.c: 136: col = player_choice();
  5049                           
  5050                           ;incstack = 0
  5051  0063F4  ECD3  F037         	call	_player_choice	;wreg free
  5052  0063F8  C001  F00C         	movff	?_player_choice,takeTurn@col
  5053  0063FC  C002  F00D         	movff	?_player_choice+1,takeTurn@col+1
  5054                           
  5055                           ;menu.c: 137: col--;
  5056  006400  060C               	decf	takeTurn@col^0,f,c
  5057  006402  A0D8               	btfss	status,0,c
  5058  006404  060D               	decf	(takeTurn@col+1)^0,f,c
  5059                           
  5060                           ;menu.c: 139: for(row = 0; row <6; row++){
  5061  006406  0E00               	movlw	0
  5062  006408  6E0F               	movwf	(takeTurn@row+1)^0,c
  5063  00640A  0E00               	movlw	0
  5064  00640C  6E0E               	movwf	takeTurn@row^0,c
  5065  00640E                     l2439:
  5066                           
  5067                           ;menu.c: 140: if(board[7 * row + col] == ' '){
  5068  00640E  500E               	movf	takeTurn@row^0,w,c
  5069  006410  0D07               	mullw	7
  5070  006412  5005               	movf	takeTurn@board^0,w,c
  5071  006414  24F3               	addwf	243,w,c
  5072  006416  240C               	addwf	takeTurn@col^0,w,c
  5073  006418  6ED9               	movwf	fsr2l,c
  5074  00641A  6ADA               	clrf	fsr2h,c
  5075  00641C  0E20               	movlw	32
  5076  00641E  18DE               	xorwf	postinc2,w,c
  5077  006420  A4D8               	btfss	status,2,c
  5078  006422  D019               	goto	l2447
  5079                           
  5080                           ;menu.c: 141: board[7 * row + col] = PIECES[player];
  5081  006424  5006               	movf	takeTurn@player^0,w,c
  5082  006426  2408               	addwf	takeTurn@PIECES^0,w,c
  5083  006428  6E0A               	movwf	??_takeTurn^0,c
  5084  00642A  5007               	movf	(takeTurn@player+1)^0,w,c
  5085  00642C  2009               	addwfc	(takeTurn@PIECES+1)^0,w,c
  5086  00642E  6E0B               	movwf	(??_takeTurn+1)^0,c
  5087  006430  C00A  FFF6         	movff	??_takeTurn,tblptrl
  5088  006434  C00B  FFF7         	movff	??_takeTurn+1,tblptrh
  5089  006438                     	if	0	;tblptru may be non-zero
  5090  006438                     	endif
  5091  006438                     	if	0	;tblptru may be non-zero
  5092  006438                     	endif
  5093  006438  500E               	movf	takeTurn@row^0,w,c
  5094  00643A  0D07               	mullw	7
  5095  00643C  5005               	movf	takeTurn@board^0,w,c
  5096  00643E  24F3               	addwf	243,w,c
  5097  006440  240C               	addwf	takeTurn@col^0,w,c
  5098  006442  6ED9               	movwf	fsr2l,c
  5099  006444  6ADA               	clrf	fsr2h,c
  5100  006446  0008               	tblrd		*
  5101  006448  CFF5 FFDF          	movff	tablat,indf2
  5102                           
  5103                           ;menu.c: 142: return 1;
  5104  00644C  0E00               	movlw	0
  5105  00644E  6E06               	movwf	(?_takeTurn+1)^0,c
  5106  006450  0E01               	movlw	1
  5107  006452  6E05               	movwf	?_takeTurn^0,c
  5108  006454  0012               	return	
  5109  006456                     l2447:
  5110  006456  4A0E               	infsnz	takeTurn@row^0,f,c
  5111  006458  2A0F               	incf	(takeTurn@row+1)^0,f,c
  5112  00645A  BE0F               	btfsc	(takeTurn@row+1)^0,7,c
  5113  00645C  D7D8               	goto	l2439
  5114  00645E  500F               	movf	(takeTurn@row+1)^0,w,c
  5115  006460  E104               	bnz	u2030
  5116  006462  0E06               	movlw	6
  5117  006464  5C0E               	subwf	takeTurn@row^0,w,c
  5118  006466  A0D8               	btfss	status,0,c
  5119  006468  D7D2               	goto	l2439
  5120  00646A                     u2030:
  5121                           
  5122                           ;menu.c: 144: };menu.c: 145: };menu.c: 147: return 0;
  5123  00646A  0E00               	movlw	0
  5124  00646C  6E06               	movwf	(?_takeTurn+1)^0,c
  5125  00646E  0E00               	movlw	0
  5126  006470  6E05               	movwf	?_takeTurn^0,c
  5127  006472  0012               	return		;funcret
  5128  006474                     __end_of_takeTurn:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function _player_choice *****************
  5132 ;; Defined at:
  5133 ;;		line 151 in file "menu.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2    0[COMRAM] int 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 3F/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5149 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5150 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5151 ;;Total ram usage:        4 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_takeTurn
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text7
  5161  006FA6                     __ptext7:
  5162                           	opt callstack 0
  5163  006FA6                     _player_choice:
  5164                           	opt callstack 27
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;menu.c: 154: choice = 0;
  5168                           
  5169                           ;incstack = 0
  5170  006FA6  0E00               	movlw	0
  5171  006FA8  6E2B               	movwf	(_choice+1)^0,c
  5172  006FAA  0E00               	movlw	0
  5173  006FAC  6E2A               	movwf	_choice^0,c
  5174                           
  5175                           ;menu.c: 155: tempx = 0;
  5176  006FAE  0E00               	movlw	0
  5177  006FB0  6E35               	movwf	(_tempx+1)^0,c
  5178  006FB2  0E00               	movlw	0
  5179  006FB4  6E34               	movwf	_tempx^0,c
  5180                           
  5181                           ;menu.c: 156: tempy = 0;
  5182  006FB6  0E00               	movlw	0
  5183  006FB8  6E33               	movwf	(_tempy+1)^0,c
  5184  006FBA  0E00               	movlw	0
  5185  006FBC  6E32               	movwf	_tempy^0,c
  5186                           
  5187                           ;menu.c: 157: pressed = 0;
  5188  006FBE  0E00               	movlw	0
  5189  006FC0  6E31               	movwf	(_pressed+1)^0,c
  5190  006FC2  0E00               	movlw	0
  5191  006FC4  6E30               	movwf	_pressed^0,c
  5192  006FC6                     l2163:
  5193                           
  5194                           ;menu.c: 160: _delay((unsigned long)((5)*(8000000/4000000.0)));
  5195  006FC6  0E03               	movlw	3
  5196  006FC8                     u2427:
  5197  006FC8  2EE8               	decfsz	wreg,f,c
  5198  006FCA  D7FE               	bra	u2427
  5199  006FCC  F000               	nop	
  5200                           
  5201                           ;menu.c: 163: ADCON0bits.CHS = 0;
  5202  006FCE  0EC3               	movlw	-61
  5203  006FD0  16C2               	andwf	194,f,c	;volatile
  5204                           
  5205                           ;menu.c: 164: ADCON0bits.GO = 1;
  5206  006FD2  82C2               	bsf	194,1,c	;volatile
  5207                           
  5208                           ;menu.c: 165: PORTCbits.RC0 = 1;
  5209  006FD4  8082               	bsf	130,0,c	;volatile
  5210  006FD6                     l236:
  5211  006FD6  B2C2               	btfsc	194,1,c	;volatile
  5212  006FD8  D7FE               	goto	l236
  5213                           
  5214                           ;menu.c: 168: resultx = (ADRESH<<8)+ADRESL;
  5215  006FDA  50C4               	movf	196,w,c	;volatile
  5216  006FDC  6E04               	movwf	(??_player_choice+1)^0,c
  5217  006FDE  6A03               	clrf	??_player_choice^0,c
  5218  006FE0  50C3               	movf	195,w,c	;volatile
  5219  006FE2  2403               	addwf	??_player_choice^0,w,c
  5220  006FE4  6E2E               	movwf	_resultx^0,c
  5221  006FE6  0E00               	movlw	0
  5222  006FE8  2004               	addwfc	(??_player_choice+1)^0,w,c
  5223  006FEA  6E2F               	movwf	(_resultx+1)^0,c
  5224                           
  5225                           ;menu.c: 169: PORTCbits.RC0 = 0;
  5226  006FEC  9082               	bcf	130,0,c	;volatile
  5227                           
  5228                           ;menu.c: 171: _delay((unsigned long)((5)*(8000000/4000000.0)));
  5229  006FEE  0E03               	movlw	3
  5230  006FF0                     u2437:
  5231  006FF0  2EE8               	decfsz	wreg,f,c
  5232  006FF2  D7FE               	bra	u2437
  5233  006FF4  F000               	nop	
  5234                           
  5235                           ;menu.c: 174: ADCON0bits.CHS = 1;
  5236  006FF6  50C2               	movf	194,w,c	;volatile
  5237  006FF8  0BC3               	andlw	-61
  5238  006FFA  0904               	iorlw	4
  5239  006FFC  6EC2               	movwf	194,c	;volatile
  5240                           
  5241                           ;menu.c: 175: ADCON0bits.GO = 1;
  5242  006FFE  82C2               	bsf	194,1,c	;volatile
  5243                           
  5244                           ;menu.c: 176: PORTCbits.RC1 = 1;
  5245  007000  8282               	bsf	130,1,c	;volatile
  5246  007002                     l239:
  5247  007002  B2C2               	btfsc	194,1,c	;volatile
  5248  007004  D7FE               	goto	l239
  5249                           
  5250                           ;menu.c: 179: resulty = (ADRESH<<8)+ADRESL;
  5251  007006  50C4               	movf	196,w,c	;volatile
  5252  007008  6E04               	movwf	(??_player_choice+1)^0,c
  5253  00700A  6A03               	clrf	??_player_choice^0,c
  5254  00700C  50C3               	movf	195,w,c	;volatile
  5255  00700E  2403               	addwf	??_player_choice^0,w,c
  5256  007010  6E2C               	movwf	_resulty^0,c
  5257  007012  0E00               	movlw	0
  5258  007014  2004               	addwfc	(??_player_choice+1)^0,w,c
  5259  007016  6E2D               	movwf	(_resulty+1)^0,c
  5260                           
  5261                           ;menu.c: 180: PORTCbits.RC1 = 0;
  5262  007018  9282               	bcf	130,1,c	;volatile
  5263                           
  5264                           ;menu.c: 183: if (((resultx == tempx) && (resulty == tempy)) && ((tempx > 350) && ((temp
      +                          y < 896)))){
  5265  00701A  5034               	movf	_tempx^0,w,c
  5266  00701C  182E               	xorwf	_resultx^0,w,c
  5267  00701E  E103               	bnz	u1431
  5268  007020  5035               	movf	(_tempx+1)^0,w,c
  5269  007022  182F               	xorwf	(_resultx+1)^0,w,c
  5270  007024  A4D8               	btfss	status,2,c
  5271  007026                     u1431:
  5272  007026  D136               	goto	l2287
  5273  007028  5032               	movf	_tempy^0,w,c
  5274  00702A  182C               	xorwf	_resulty^0,w,c
  5275  00702C  E103               	bnz	u1441
  5276  00702E  5033               	movf	(_tempy+1)^0,w,c
  5277  007030  182D               	xorwf	(_resulty+1)^0,w,c
  5278  007032  A4D8               	btfss	status,2,c
  5279  007034                     u1441:
  5280  007034  D12F               	goto	l2287
  5281  007036  BE35               	btfsc	(_tempx+1)^0,7,c
  5282  007038  D12D               	goto	l2287
  5283  00703A  0E5F               	movlw	95
  5284  00703C  5C34               	subwf	_tempx^0,w,c
  5285  00703E  0E01               	movlw	1
  5286  007040  5835               	subwfb	(_tempx+1)^0,w,c
  5287  007042  A0D8               	btfss	status,0,c
  5288  007044  D127               	goto	l2287
  5289  007046  BE33               	btfsc	(_tempy+1)^0,7,c
  5290  007048  D006               	goto	u1460
  5291  00704A  0E80               	movlw	128
  5292  00704C  5C32               	subwf	_tempy^0,w,c
  5293  00704E  0E03               	movlw	3
  5294  007050  5833               	subwfb	(_tempy+1)^0,w,c
  5295  007052  B0D8               	btfsc	status,0,c
  5296  007054  D11F               	goto	l2287
  5297  007056                     u1460:
  5298                           
  5299                           ;menu.c: 187: if ( ((resultx == 384) || (resultx == 448)) && (resulty == 832))
  5300  007056  0E80               	movlw	128
  5301  007058  182E               	xorwf	_resultx^0,w,c
  5302  00705A  E103               	bnz	u1470
  5303  00705C  042F               	decf	(_resultx+1)^0,w,c
  5304  00705E  B4D8               	btfsc	status,2,c
  5305  007060  D006               	goto	u1480
  5306  007062                     u1470:
  5307  007062  0EC0               	movlw	192
  5308  007064  182E               	xorwf	_resultx^0,w,c
  5309  007066  E10E               	bnz	l2201
  5310  007068  042F               	decf	(_resultx+1)^0,w,c
  5311  00706A  A4D8               	btfss	status,2,c
  5312  00706C  D00B               	goto	l2201
  5313  00706E                     u1480:
  5314  00706E  0E40               	movlw	64
  5315  007070  182C               	xorwf	_resulty^0,w,c
  5316  007072  E108               	bnz	l2201
  5317  007074  0E03               	movlw	3
  5318  007076  182D               	xorwf	(_resulty+1)^0,w,c
  5319  007078  A4D8               	btfss	status,2,c
  5320  00707A  D004               	goto	l2201
  5321                           
  5322                           ;menu.c: 188: {;menu.c: 189: choice = 1;
  5323  00707C  0E00               	movlw	0
  5324  00707E  6E2B               	movwf	(_choice+1)^0,c
  5325  007080  0E01               	movlw	1
  5326  007082  D102               	goto	L6
  5327  007084                     l2201:
  5328                           
  5329                           ;menu.c: 192: };menu.c: 195: if ( ((resultx == 512) && (resulty == 768)) || ((resultx ==
      +                           576) && (resulty == 704)) || ((resultx == 576) && (resulty == 704)) )
  5330  007084  0E02               	movlw	2
  5331  007086  182F               	xorwf	(_resultx+1)^0,w,c
  5332  007088  102E               	iorwf	_resultx^0,w,c
  5333  00708A  A4D8               	btfss	status,2,c
  5334  00708C  D005               	goto	u1510
  5335  00708E  0E03               	movlw	3
  5336  007090  182D               	xorwf	(_resulty+1)^0,w,c
  5337  007092  102C               	iorwf	_resulty^0,w,c
  5338  007094  B4D8               	btfsc	status,2,c
  5339  007096  D01C               	goto	u1550
  5340  007098                     u1510:
  5341  007098  0E40               	movlw	64
  5342  00709A  182E               	xorwf	_resultx^0,w,c
  5343  00709C  E10B               	bnz	l2209
  5344  00709E  0E02               	movlw	2
  5345  0070A0  182F               	xorwf	(_resultx+1)^0,w,c
  5346  0070A2  A4D8               	btfss	status,2,c
  5347  0070A4  D007               	goto	u1530
  5348  0070A6  0EC0               	movlw	192
  5349  0070A8  182C               	xorwf	_resulty^0,w,c
  5350  0070AA  E104               	bnz	u1530
  5351  0070AC  0E02               	movlw	2
  5352  0070AE  182D               	xorwf	(_resulty+1)^0,w,c
  5353  0070B0  B4D8               	btfsc	status,2,c
  5354  0070B2  D00E               	goto	u1550
  5355  0070B4                     u1530:
  5356  0070B4                     l2209:
  5357  0070B4  0E40               	movlw	64
  5358  0070B6  182E               	xorwf	_resultx^0,w,c
  5359  0070B8  E10F               	bnz	l2215
  5360  0070BA  0E02               	movlw	2
  5361  0070BC  182F               	xorwf	(_resultx+1)^0,w,c
  5362  0070BE  A4D8               	btfss	status,2,c
  5363  0070C0  D00B               	goto	l2215
  5364  0070C2  0EC0               	movlw	192
  5365  0070C4  182C               	xorwf	_resulty^0,w,c
  5366  0070C6  E108               	bnz	l2215
  5367  0070C8  0E02               	movlw	2
  5368  0070CA  182D               	xorwf	(_resulty+1)^0,w,c
  5369  0070CC  A4D8               	btfss	status,2,c
  5370  0070CE  D004               	goto	l2215
  5371  0070D0                     u1550:
  5372                           
  5373                           ;menu.c: 196: {;menu.c: 197: choice = 2;
  5374  0070D0  0E00               	movlw	0
  5375  0070D2  6E2B               	movwf	(_choice+1)^0,c
  5376  0070D4  0E02               	movlw	2
  5377  0070D6  D0D8               	goto	L6
  5378  0070D8                     l2215:
  5379                           
  5380                           ;menu.c: 200: };menu.c: 202: if ( ((resultx == 576) && (resulty == 768)) || ((resultx ==
      +                           640) && (resulty == 704)) || ((resultx == 704) && (resulty == 640)) )
  5381  0070D8  0E40               	movlw	64
  5382  0070DA  182E               	xorwf	_resultx^0,w,c
  5383  0070DC  E109               	bnz	l2219
  5384  0070DE  0E02               	movlw	2
  5385  0070E0  182F               	xorwf	(_resultx+1)^0,w,c
  5386  0070E2  A4D8               	btfss	status,2,c
  5387  0070E4  D005               	goto	u1570
  5388  0070E6  0E03               	movlw	3
  5389  0070E8  182D               	xorwf	(_resulty+1)^0,w,c
  5390  0070EA  102C               	iorwf	_resulty^0,w,c
  5391  0070EC  B4D8               	btfsc	status,2,c
  5392  0070EE  D01C               	goto	u1610
  5393  0070F0                     u1570:
  5394  0070F0                     l2219:
  5395  0070F0  0E80               	movlw	128
  5396  0070F2  182E               	xorwf	_resultx^0,w,c
  5397  0070F4  E10B               	bnz	l2223
  5398  0070F6  0E02               	movlw	2
  5399  0070F8  182F               	xorwf	(_resultx+1)^0,w,c
  5400  0070FA  A4D8               	btfss	status,2,c
  5401  0070FC  D007               	goto	u1590
  5402  0070FE  0EC0               	movlw	192
  5403  007100  182C               	xorwf	_resulty^0,w,c
  5404  007102  E104               	bnz	u1590
  5405  007104  0E02               	movlw	2
  5406  007106  182D               	xorwf	(_resulty+1)^0,w,c
  5407  007108  B4D8               	btfsc	status,2,c
  5408  00710A  D00E               	goto	u1610
  5409  00710C                     u1590:
  5410  00710C                     l2223:
  5411  00710C  0EC0               	movlw	192
  5412  00710E  182E               	xorwf	_resultx^0,w,c
  5413  007110  E10F               	bnz	l2229
  5414  007112  0E02               	movlw	2
  5415  007114  182F               	xorwf	(_resultx+1)^0,w,c
  5416  007116  A4D8               	btfss	status,2,c
  5417  007118  D00B               	goto	l2229
  5418  00711A  0E80               	movlw	128
  5419  00711C  182C               	xorwf	_resulty^0,w,c
  5420  00711E  E108               	bnz	l2229
  5421  007120  0E02               	movlw	2
  5422  007122  182D               	xorwf	(_resulty+1)^0,w,c
  5423  007124  A4D8               	btfss	status,2,c
  5424  007126  D004               	goto	l2229
  5425  007128                     u1610:
  5426                           
  5427                           ;menu.c: 203: {;menu.c: 204: choice = 3;
  5428  007128  0E00               	movlw	0
  5429  00712A  6E2B               	movwf	(_choice+1)^0,c
  5430  00712C  0E03               	movlw	3
  5431  00712E  D0AC               	goto	L6
  5432  007130                     l2229:
  5433                           
  5434                           ;menu.c: 207: };menu.c: 209: if ( ((resultx == 640) && (resulty == 768)) || ((resultx ==
      +                           704) && (resulty == 704)) || ((resultx == 768) && (resulty == 704)) || ((resultx == 768
      +                          ) && (resulty == 640)) )
  5435  007130  0E80               	movlw	128
  5436  007132  182E               	xorwf	_resultx^0,w,c
  5437  007134  E109               	bnz	l2233
  5438  007136  0E02               	movlw	2
  5439  007138  182F               	xorwf	(_resultx+1)^0,w,c
  5440  00713A  A4D8               	btfss	status,2,c
  5441  00713C  D005               	goto	u1630
  5442  00713E  0E03               	movlw	3
  5443  007140  182D               	xorwf	(_resulty+1)^0,w,c
  5444  007142  102C               	iorwf	_resulty^0,w,c
  5445  007144  B4D8               	btfsc	status,2,c
  5446  007146  D026               	goto	u1690
  5447  007148                     u1630:
  5448  007148                     l2233:
  5449  007148  0EC0               	movlw	192
  5450  00714A  182E               	xorwf	_resultx^0,w,c
  5451  00714C  E10B               	bnz	l2237
  5452  00714E  0E02               	movlw	2
  5453  007150  182F               	xorwf	(_resultx+1)^0,w,c
  5454  007152  A4D8               	btfss	status,2,c
  5455  007154  D007               	goto	u1650
  5456  007156  0EC0               	movlw	192
  5457  007158  182C               	xorwf	_resulty^0,w,c
  5458  00715A  E104               	bnz	u1650
  5459  00715C  0E02               	movlw	2
  5460  00715E  182D               	xorwf	(_resulty+1)^0,w,c
  5461  007160  B4D8               	btfsc	status,2,c
  5462  007162  D018               	goto	u1690
  5463  007164                     u1650:
  5464  007164                     l2237:
  5465  007164  0E03               	movlw	3
  5466  007166  182F               	xorwf	(_resultx+1)^0,w,c
  5467  007168  102E               	iorwf	_resultx^0,w,c
  5468  00716A  A4D8               	btfss	status,2,c
  5469  00716C  D007               	goto	u1670
  5470  00716E  0EC0               	movlw	192
  5471  007170  182C               	xorwf	_resulty^0,w,c
  5472  007172  E104               	bnz	u1670
  5473  007174  0E02               	movlw	2
  5474  007176  182D               	xorwf	(_resulty+1)^0,w,c
  5475  007178  B4D8               	btfsc	status,2,c
  5476  00717A  D00C               	goto	u1690
  5477  00717C                     u1670:
  5478  00717C  0E03               	movlw	3
  5479  00717E  182F               	xorwf	(_resultx+1)^0,w,c
  5480  007180  102E               	iorwf	_resultx^0,w,c
  5481  007182  A4D8               	btfss	status,2,c
  5482  007184  D00B               	goto	l2247
  5483  007186  0E80               	movlw	128
  5484  007188  182C               	xorwf	_resulty^0,w,c
  5485  00718A  E108               	bnz	l2247
  5486  00718C  0E02               	movlw	2
  5487  00718E  182D               	xorwf	(_resulty+1)^0,w,c
  5488  007190  A4D8               	btfss	status,2,c
  5489  007192  D004               	goto	l2247
  5490  007194                     u1690:
  5491                           
  5492                           ;menu.c: 210: {;menu.c: 211: choice = 4;
  5493  007194  0E00               	movlw	0
  5494  007196  6E2B               	movwf	(_choice+1)^0,c
  5495  007198  0E04               	movlw	4
  5496  00719A  D076               	goto	L6
  5497  00719C                     l2247:
  5498                           
  5499                           ;menu.c: 214: };menu.c: 216: if ( ((resultx == 704) && (resulty == 768)) || ((resultx ==
      +                           768) && (resulty == 768)) || ((resultx == 832) && (resulty == 704)) )
  5500  00719C  0EC0               	movlw	192
  5501  00719E  182E               	xorwf	_resultx^0,w,c
  5502  0071A0  E109               	bnz	l2251
  5503  0071A2  0E02               	movlw	2
  5504  0071A4  182F               	xorwf	(_resultx+1)^0,w,c
  5505  0071A6  A4D8               	btfss	status,2,c
  5506  0071A8  D005               	goto	u1710
  5507  0071AA  0E03               	movlw	3
  5508  0071AC  182D               	xorwf	(_resulty+1)^0,w,c
  5509  0071AE  102C               	iorwf	_resulty^0,w,c
  5510  0071B0  B4D8               	btfsc	status,2,c
  5511  0071B2  D018               	goto	u1750
  5512  0071B4                     u1710:
  5513  0071B4                     l2251:
  5514  0071B4  0E03               	movlw	3
  5515  0071B6  182F               	xorwf	(_resultx+1)^0,w,c
  5516  0071B8  102E               	iorwf	_resultx^0,w,c
  5517  0071BA  A4D8               	btfss	status,2,c
  5518  0071BC  D005               	goto	u1730
  5519  0071BE  0E03               	movlw	3
  5520  0071C0  182D               	xorwf	(_resulty+1)^0,w,c
  5521  0071C2  102C               	iorwf	_resulty^0,w,c
  5522  0071C4  B4D8               	btfsc	status,2,c
  5523  0071C6  D00E               	goto	u1750
  5524  0071C8                     u1730:
  5525  0071C8  0E40               	movlw	64
  5526  0071CA  182E               	xorwf	_resultx^0,w,c
  5527  0071CC  E10F               	bnz	l2261
  5528  0071CE  0E03               	movlw	3
  5529  0071D0  182F               	xorwf	(_resultx+1)^0,w,c
  5530  0071D2  A4D8               	btfss	status,2,c
  5531  0071D4  D00B               	goto	l2261
  5532  0071D6  0EC0               	movlw	192
  5533  0071D8  182C               	xorwf	_resulty^0,w,c
  5534  0071DA  E108               	bnz	l2261
  5535  0071DC  0E02               	movlw	2
  5536  0071DE  182D               	xorwf	(_resulty+1)^0,w,c
  5537  0071E0  A4D8               	btfss	status,2,c
  5538  0071E2  D004               	goto	l2261
  5539  0071E4                     u1750:
  5540                           
  5541                           ;menu.c: 217: {;menu.c: 218: choice = 5;
  5542  0071E4  0E00               	movlw	0
  5543  0071E6  6E2B               	movwf	(_choice+1)^0,c
  5544  0071E8  0E05               	movlw	5
  5545  0071EA  D04E               	goto	L6
  5546  0071EC                     l2261:
  5547                           
  5548                           ;menu.c: 221: };menu.c: 223: if ( ((resultx == 832) && (resulty == 768)) || (( (resultx 
      +                          == 960) || (resultx == 896)) && (resulty == 704)) )
  5549  0071EC  0E40               	movlw	64
  5550  0071EE  182E               	xorwf	_resultx^0,w,c
  5551  0071F0  E109               	bnz	l2265
  5552  0071F2  0E03               	movlw	3
  5553  0071F4  182F               	xorwf	(_resultx+1)^0,w,c
  5554  0071F6  A4D8               	btfss	status,2,c
  5555  0071F8  D005               	goto	u1770
  5556  0071FA  0E03               	movlw	3
  5557  0071FC  182D               	xorwf	(_resulty+1)^0,w,c
  5558  0071FE  102C               	iorwf	_resulty^0,w,c
  5559  007200  B4D8               	btfsc	status,2,c
  5560  007202  D015               	goto	u1800
  5561  007204                     u1770:
  5562  007204                     l2265:
  5563  007204  0EC0               	movlw	192
  5564  007206  182E               	xorwf	_resultx^0,w,c
  5565  007208  E104               	bnz	u1780
  5566  00720A  0E03               	movlw	3
  5567  00720C  182F               	xorwf	(_resultx+1)^0,w,c
  5568  00720E  B4D8               	btfsc	status,2,c
  5569  007210  D007               	goto	u1790
  5570  007212                     u1780:
  5571  007212  0E80               	movlw	128
  5572  007214  182E               	xorwf	_resultx^0,w,c
  5573  007216  E10F               	bnz	l2273
  5574  007218  0E03               	movlw	3
  5575  00721A  182F               	xorwf	(_resultx+1)^0,w,c
  5576  00721C  A4D8               	btfss	status,2,c
  5577  00721E  D00B               	goto	l2273
  5578  007220                     u1790:
  5579  007220  0EC0               	movlw	192
  5580  007222  182C               	xorwf	_resulty^0,w,c
  5581  007224  E108               	bnz	l2273
  5582  007226  0E02               	movlw	2
  5583  007228  182D               	xorwf	(_resulty+1)^0,w,c
  5584  00722A  A4D8               	btfss	status,2,c
  5585  00722C  D004               	goto	l2273
  5586  00722E                     u1800:
  5587                           
  5588                           ;menu.c: 224: {;menu.c: 225: choice = 6;
  5589  00722E  0E00               	movlw	0
  5590  007230  6E2B               	movwf	(_choice+1)^0,c
  5591  007232  0E06               	movlw	6
  5592  007234  D029               	goto	L6
  5593  007236                     l2273:
  5594                           
  5595                           ;menu.c: 228: };menu.c: 230: if ( (((resultx == 896) || (resultx == 960) || (resultx == 
      +                          1024)) && (resulty == 768)) || ((resultx == 1152) && (resulty == 704)) )
  5596  007236  0E80               	movlw	128
  5597  007238  182E               	xorwf	_resultx^0,w,c
  5598  00723A  E104               	bnz	u1810
  5599  00723C  0E03               	movlw	3
  5600  00723E  182F               	xorwf	(_resultx+1)^0,w,c
  5601  007240  B4D8               	btfsc	status,2,c
  5602  007242  D00C               	goto	u1830
  5603  007244                     u1810:
  5604  007244  0EC0               	movlw	192
  5605  007246  182E               	xorwf	_resultx^0,w,c
  5606  007248  E104               	bnz	u1820
  5607  00724A  0E03               	movlw	3
  5608  00724C  182F               	xorwf	(_resultx+1)^0,w,c
  5609  00724E  B4D8               	btfsc	status,2,c
  5610  007250  D005               	goto	u1830
  5611  007252                     u1820:
  5612  007252  0E04               	movlw	4
  5613  007254  182F               	xorwf	(_resultx+1)^0,w,c
  5614  007256  102E               	iorwf	_resultx^0,w,c
  5615  007258  A4D8               	btfss	status,2,c
  5616  00725A  D005               	goto	u1840
  5617  00725C                     u1830:
  5618  00725C  0E03               	movlw	3
  5619  00725E  182D               	xorwf	(_resulty+1)^0,w,c
  5620  007260  102C               	iorwf	_resulty^0,w,c
  5621  007262  B4D8               	btfsc	status,2,c
  5622  007264  D00E               	goto	u1860
  5623  007266                     u1840:
  5624  007266  0E80               	movlw	128
  5625  007268  182E               	xorwf	_resultx^0,w,c
  5626  00726A  E114               	bnz	l2287
  5627  00726C  0E04               	movlw	4
  5628  00726E  182F               	xorwf	(_resultx+1)^0,w,c
  5629  007270  A4D8               	btfss	status,2,c
  5630  007272  D010               	goto	l2287
  5631  007274  0EC0               	movlw	192
  5632  007276  182C               	xorwf	_resulty^0,w,c
  5633  007278  E10D               	bnz	l2287
  5634  00727A  0E02               	movlw	2
  5635  00727C  182D               	xorwf	(_resulty+1)^0,w,c
  5636  00727E  A4D8               	btfss	status,2,c
  5637  007280  D009               	goto	l2287
  5638  007282                     u1860:
  5639                           
  5640                           ;menu.c: 231: {;menu.c: 232: choice = 7;
  5641  007282  0E00               	movlw	0
  5642  007284  6E2B               	movwf	(_choice+1)^0,c
  5643  007286  0E07               	movlw	7
  5644  007288                     L6:
  5645  007288  6E2A               	movwf	_choice^0,c
  5646                           
  5647                           ;menu.c: 233: pressed = 1;
  5648  00728A  0E00               	movlw	0
  5649  00728C  6E31               	movwf	(_pressed+1)^0,c
  5650  00728E  0E01               	movlw	1
  5651  007290  6E30               	movwf	_pressed^0,c
  5652                           
  5653                           ;menu.c: 234: break;
  5654  007292  D017               	goto	u1870
  5655  007294                     l2287:
  5656                           
  5657                           ;menu.c: 235: };menu.c: 237: };menu.c: 239: _delay((unsigned long)((250)*(8000000/4000.0
      +                          )));
  5658  007294  0E03               	movlw	3
  5659  007296  6E04               	movwf	(??_player_choice+1)^0,c
  5660  007298  0E8A               	movlw	138
  5661  00729A  6E03               	movwf	??_player_choice^0,c
  5662  00729C  0E56               	movlw	86
  5663  00729E                     u2447:
  5664  00729E  2EE8               	decfsz	wreg,f,c
  5665  0072A0  D7FE               	bra	u2447
  5666  0072A2  2E03               	decfsz	??_player_choice^0,f,c
  5667  0072A4  D7FC               	bra	u2447
  5668  0072A6  2E04               	decfsz	(??_player_choice+1)^0,f,c
  5669  0072A8  D7FA               	bra	u2447
  5670                           
  5671                           ;menu.c: 241: tempx = resultx;
  5672  0072AA  C02E  F034         	movff	_resultx,_tempx
  5673  0072AE  C02F  F035         	movff	_resultx+1,_tempx+1
  5674                           
  5675                           ;menu.c: 242: tempy = resulty;
  5676  0072B2  C02C  F032         	movff	_resulty,_tempy
  5677  0072B6  C02D  F033         	movff	_resulty+1,_tempy+1
  5678                           
  5679                           ;menu.c: 245: } while(pressed != 1);
  5680  0072BA  0430               	decf	_pressed^0,w,c
  5681  0072BC  1031               	iorwf	(_pressed+1)^0,w,c
  5682  0072BE  A4D8               	btfss	status,2,c
  5683  0072C0  D682               	goto	l2163
  5684  0072C2                     u1870:
  5685                           
  5686                           ;menu.c: 247: return choice;
  5687  0072C2  C02A  F001         	movff	_choice,?_player_choice
  5688  0072C6  C02B  F002         	movff	_choice+1,?_player_choice+1
  5689  0072CA  0012               	return		;funcret
  5690  0072CC                     __end_of_player_choice:
  5691                           	opt callstack 0
  5692                           
  5693 ;; *************** function _printBoard *****************
  5694 ;; Defined at:
  5695 ;;		line 119 in file "menu.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  board           1   15[COMRAM] PTR unsigned char 
  5698 ;;		 -> menu_game@board(42), 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  temp            1   16[COMRAM] unsigned char 
  5701 ;;  col             2   19[COMRAM] int 
  5702 ;;  row             2   17[COMRAM] int 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5712 ;;      Params:         1       0       0       0       0       0       0       0       0
  5713 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5715 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5716 ;;Total ram usage:        6 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    3
  5719 ;; This function calls:
  5720 ;;		_glcd_SetCursor
  5721 ;;		_glcd_WriteChar8X8
  5722 ;;		_glcd_WriteString
  5723 ;; This function is called by:
  5724 ;;		_menu_game
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text8
  5729  00658A                     __ptext8:
  5730                           	opt callstack 0
  5731  00658A                     _printBoard:
  5732                           	opt callstack 25
  5733                           
  5734                           ;menu.c: 120: for (int row=0; row<6; row++){
  5735                           
  5736                           ;incstack = 0
  5737  00658A  0E00               	movlw	0
  5738  00658C  6E13               	movwf	(printBoard@row+1)^0,c
  5739  00658E  0E00               	movlw	0
  5740  006590  6E12               	movwf	printBoard@row^0,c
  5741  006592                     l2405:
  5742                           
  5743                           ;menu.c: 121: for (int col=0; col<7; col++){
  5744  006592  0E00               	movlw	0
  5745  006594  6E15               	movwf	(printBoard@col+1)^0,c
  5746  006596  0E00               	movlw	0
  5747  006598  6E14               	movwf	printBoard@col^0,c
  5748  00659A                     l2411:
  5749                           
  5750                           ;menu.c: 122: glcd_SetCursor(2+col*17,7-row);
  5751  00659A  5012               	movf	printBoard@row^0,w,c
  5752  00659C  0807               	sublw	7
  5753  00659E  6E03               	movwf	glcd_SetCursor@ypos^0,c
  5754  0065A0  5014               	movf	printBoard@col^0,w,c
  5755  0065A2  0D11               	mullw	17
  5756  0065A4  50F3               	movf	243,w,c
  5757  0065A6  0F02               	addlw	2
  5758  0065A8  EC6C  F031         	call	_glcd_SetCursor
  5759                           
  5760                           ;menu.c: 123: glcd_WriteString("I", 1, 2);
  5761  0065AC  0EFD               	movlw	low STR_13
  5762  0065AE  6E0C               	movwf	glcd_WriteString@str^0,c
  5763  0065B0  0E7F               	movlw	high STR_13
  5764  0065B2  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  5765  0065B4  0E01               	movlw	1
  5766  0065B6  6E0E               	movwf	glcd_WriteString@font^0,c
  5767  0065B8  0E02               	movlw	2
  5768  0065BA  6E0F               	movwf	glcd_WriteString@color^0,c
  5769  0065BC  EC3A  F032         	call	_glcd_WriteString	;wreg free
  5770                           
  5771                           ;menu.c: 125: char temp = board[7 * row + col];
  5772  0065C0  5012               	movf	printBoard@row^0,w,c
  5773  0065C2  0D07               	mullw	7
  5774  0065C4  5010               	movf	printBoard@board^0,w,c
  5775  0065C6  24F3               	addwf	243,w,c
  5776  0065C8  2414               	addwf	printBoard@col^0,w,c
  5777  0065CA  6ED9               	movwf	fsr2l,c
  5778  0065CC  6ADA               	clrf	fsr2h,c
  5779  0065CE  50DF               	movf	indf2,w,c
  5780  0065D0  6E11               	movwf	printBoard@temp^0,c
  5781                           
  5782                           ;menu.c: 126: glcd_WriteChar8X8(temp, 2);
  5783  0065D2  0E02               	movlw	2
  5784  0065D4  6E03               	movwf	glcd_WriteChar8X8@color^0,c
  5785  0065D6  5011               	movf	printBoard@temp^0,w,c
  5786  0065D8  ECCD  F033         	call	_glcd_WriteChar8X8
  5787  0065DC  4A14               	infsnz	printBoard@col^0,f,c
  5788  0065DE  2A15               	incf	(printBoard@col+1)^0,f,c
  5789  0065E0  BE15               	btfsc	(printBoard@col+1)^0,7,c
  5790  0065E2  D7DB               	goto	l2411
  5791  0065E4  5015               	movf	(printBoard@col+1)^0,w,c
  5792  0065E6  E104               	bnz	u2000
  5793  0065E8  0E07               	movlw	7
  5794  0065EA  5C14               	subwf	printBoard@col^0,w,c
  5795  0065EC  A0D8               	btfss	status,0,c
  5796  0065EE  D7D5               	goto	l2411
  5797  0065F0                     u2000:
  5798                           
  5799                           ;menu.c: 127: };menu.c: 128: glcd_WriteString("I", 1, 2);
  5800  0065F0  0EFD               	movlw	low STR_13
  5801  0065F2  6E0C               	movwf	glcd_WriteString@str^0,c
  5802  0065F4  0E7F               	movlw	high STR_13
  5803  0065F6  6E0D               	movwf	(glcd_WriteString@str+1)^0,c
  5804  0065F8  0E01               	movlw	1
  5805  0065FA  6E0E               	movwf	glcd_WriteString@font^0,c
  5806  0065FC  0E02               	movlw	2
  5807  0065FE  6E0F               	movwf	glcd_WriteString@color^0,c
  5808  006600  EC3A  F032         	call	_glcd_WriteString	;wreg free
  5809  006604  4A12               	infsnz	printBoard@row^0,f,c
  5810  006606  2A13               	incf	(printBoard@row+1)^0,f,c
  5811  006608  BE13               	btfsc	(printBoard@row+1)^0,7,c
  5812  00660A  D7C3               	goto	l2405
  5813  00660C  5013               	movf	(printBoard@row+1)^0,w,c
  5814  00660E  E105               	bnz	u2010
  5815  006610  0E06               	movlw	6
  5816  006612  5C12               	subwf	printBoard@row^0,w,c
  5817  006614  B0D8               	btfsc	status,0,c
  5818  006616  0012               	return	
  5819  006618  D7BC               	goto	l2405
  5820  00661A                     u2010:
  5821  00661A  0012               	return		;funcret
  5822  00661C                     __end_of_printBoard:
  5823                           	opt callstack 0
  5824                           
  5825 ;; *************** function _glcd_WriteString *****************
  5826 ;; Defined at:
  5827 ;;		line 728 in file "glcd.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  str             2   11[COMRAM] PTR unsigned char 
  5830 ;;		 -> STR_14(2), STR_13(2), menu_game@message2(17), STR_12(9), 
  5831 ;;		 -> menu_game@message1(17), STR_11(9), STR_10(12), STR_9(17), 
  5832 ;;		 -> STR_8(17), STR_7(16), STR_6(14), STR_5(14), 
  5833 ;;		 -> STR_3(11), STR_2(11), STR_1(10), 
  5834 ;;  font            1   13[COMRAM] unsigned char 
  5835 ;;  color           1   14[COMRAM] unsigned char 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5847 ;;      Params:         4       0       0       0       0       0       0       0       0
  5848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5850 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5851 ;;Total ram usage:        4 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    2
  5854 ;; This function calls:
  5855 ;;		_glcd_WriteChar3x6
  5856 ;;		_glcd_WriteChar8X8
  5857 ;; This function is called by:
  5858 ;;		_opening_menu
  5859 ;;		_menu_game
  5860 ;;		_printBoard
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text9
  5865  006474                     __ptext9:
  5866                           	opt callstack 0
  5867  006474                     _glcd_WriteString:
  5868                           	opt callstack 25
  5869                           
  5870                           ;glcd.c: 730: while(*str)
  5871                           
  5872                           ;incstack = 0
  5873  006474  D02E               	goto	l2159
  5874  006476                     l2151:
  5875                           
  5876                           ;glcd.c: 731: {;glcd.c: 732: if(font)
  5877  006476  500E               	movf	glcd_WriteString@font^0,w,c
  5878  006478  B4D8               	btfsc	status,2,c
  5879  00647A  D015               	goto	l2155
  5880                           
  5881                           ;glcd.c: 733: glcd_WriteChar8X8(*str, color);
  5882  00647C  C00F  F003         	movff	glcd_WriteString@color,glcd_WriteChar8X8@color
  5883  006480  C00C  FFF6         	movff	glcd_WriteString@str,tblptrl
  5884  006484  C00D  FFF7         	movff	glcd_WriteString@str+1,tblptrh
  5885  006488  6AF8               	clrf	tblptru,c
  5886  00648A  0E07               	movlw	(high __ramtop+-1)
  5887  00648C  64F7               	cpfsgt	tblptrh,c
  5888  00648E  D003               	bra	u1377
  5889  006490  0008               	tblrd		*
  5890  006492  50F5               	movf	tablat,w,c
  5891  006494  D005               	bra	u1370
  5892  006496                     u1377:
  5893  006496  CFF6 FFE1          	movff	tblptrl,fsr1l
  5894  00649A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5895  00649E  50E7               	movf	indf1,w,c
  5896  0064A0                     u1370:
  5897  0064A0  ECCD  F033         	call	_glcd_WriteChar8X8
  5898  0064A4  D014               	goto	l2157
  5899  0064A6                     l2155:
  5900                           
  5901                           ;glcd.c: 734: else;glcd.c: 735: glcd_WriteChar3x6(*str, color);
  5902  0064A6  C00F  F003         	movff	glcd_WriteString@color,glcd_WriteChar3x6@color
  5903  0064AA  C00C  FFF6         	movff	glcd_WriteString@str,tblptrl
  5904  0064AE  C00D  FFF7         	movff	glcd_WriteString@str+1,tblptrh
  5905  0064B2  6AF8               	clrf	tblptru,c
  5906  0064B4  0E07               	movlw	(high __ramtop+-1)
  5907  0064B6  64F7               	cpfsgt	tblptrh,c
  5908  0064B8  D003               	bra	u1387
  5909  0064BA  0008               	tblrd		*
  5910  0064BC  50F5               	movf	tablat,w,c
  5911  0064BE  D005               	bra	u1380
  5912  0064C0                     u1387:
  5913  0064C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5914  0064C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5915  0064C8  50E7               	movf	indf1,w,c
  5916  0064CA                     u1380:
  5917  0064CA  EC61  F033         	call	_glcd_WriteChar3x6
  5918  0064CE                     l2157:
  5919                           
  5920                           ;glcd.c: 736: str++;
  5921  0064CE  4A0C               	infsnz	glcd_WriteString@str^0,f,c
  5922  0064D0  2A0D               	incf	(glcd_WriteString@str+1)^0,f,c
  5923  0064D2                     l2159:
  5924  0064D2  C00C  FFF6         	movff	glcd_WriteString@str,tblptrl
  5925  0064D6  C00D  FFF7         	movff	glcd_WriteString@str+1,tblptrh
  5926  0064DA  6AF8               	clrf	tblptru,c
  5927  0064DC  0E07               	movlw	(high __ramtop+-1)
  5928  0064DE  64F7               	cpfsgt	tblptrh,c
  5929  0064E0  D003               	bra	u1397
  5930  0064E2  0008               	tblrd		*
  5931  0064E4  50F5               	movf	tablat,w,c
  5932  0064E6  D005               	bra	u1390
  5933  0064E8                     u1397:
  5934  0064E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5935  0064EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5936  0064F0  50E7               	movf	indf1,w,c
  5937  0064F2                     u1390:
  5938  0064F2  0900               	iorlw	0
  5939  0064F4  B4D8               	btfsc	status,2,c
  5940  0064F6  0012               	return	
  5941  0064F8  D7BE               	goto	l2151
  5942  0064FA                     __end_of_glcd_WriteString:
  5943                           	opt callstack 0
  5944                           
  5945 ;; *************** function _glcd_WriteChar8X8 *****************
  5946 ;; Defined at:
  5947 ;;		line 635 in file "glcd.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  ch              1    wreg     unsigned char 
  5950 ;;  color           1    2[COMRAM] unsigned char 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  ch              1    7[COMRAM] unsigned char 
  5953 ;;  chr             2    5[COMRAM] unsigned int 
  5954 ;;  side            1   10[COMRAM] unsigned char 
  5955 ;;  i               1    9[COMRAM] unsigned char 
  5956 ;;  xpos            1    8[COMRAM] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5966 ;;      Params:         1       0       0       0       0       0       0       0       0
  5967 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5968 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5969 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5970 ;;Total ram usage:        9 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    1
  5973 ;; This function calls:
  5974 ;;		_glcd_WriteByte
  5975 ;; This function is called by:
  5976 ;;		_glcd_WriteString
  5977 ;;		_printBoard
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text10
  5982  00679A                     __ptext10:
  5983                           	opt callstack 0
  5984  00679A                     _glcd_WriteChar8X8:
  5985                           	opt callstack 25
  5986                           
  5987                           ;incstack = 0
  5988                           ;glcd_WriteChar8X8@ch stored from wreg
  5989  00679A  6E08               	movwf	glcd_WriteChar8X8@ch^0,c
  5990                           
  5991                           ;glcd.c: 637: unsigned char i,xpos;;glcd.c: 638: unsigned char side = 0;
  5992  00679C  0E00               	movlw	0
  5993  00679E  6E0B               	movwf	glcd_WriteChar8X8@side^0,c
  5994                           
  5995                           ;glcd.c: 639: unsigned int chr;;glcd.c: 641: if (ch=='\n')
  5996  0067A0  0E0A               	movlw	10
  5997  0067A2  1808               	xorwf	glcd_WriteChar8X8@ch^0,w,c
  5998  0067A4  A4D8               	btfss	status,2,c
  5999  0067A6  D004               	goto	l2013
  6000                           
  6001                           ;glcd.c: 642: {;glcd.c: 643: x=0;
  6002  0067A8  0E00               	movlw	0
  6003  0067AA  6E37               	movwf	_x^0,c
  6004                           
  6005                           ;glcd.c: 644: y++;
  6006  0067AC  2A36               	incf	_y^0,f,c
  6007  0067AE  0012               	return	
  6008  0067B0                     l2013:
  6009                           
  6010                           ;glcd.c: 646: };glcd.c: 648: if(x > 63)
  6011  0067B0  0E3F               	movlw	63
  6012  0067B2  6437               	cpfsgt	_x^0,c
  6013  0067B4  D006               	goto	l103
  6014                           
  6015                           ;glcd.c: 649: {;glcd.c: 650: side = 1;
  6016  0067B6  0E01               	movlw	1
  6017  0067B8  6E0B               	movwf	glcd_WriteChar8X8@side^0,c
  6018                           
  6019                           ;glcd.c: 651: xpos=x-64;
  6020  0067BA  5037               	movf	_x^0,w,c
  6021  0067BC  0FC0               	addlw	192
  6022  0067BE  6E09               	movwf	glcd_WriteChar8X8@xpos^0,c
  6023                           
  6024                           ;glcd.c: 652: }
  6025  0067C0  D002               	goto	l2019
  6026  0067C2                     l103:
  6027                           
  6028                           ;glcd.c: 653: else;glcd.c: 654: xpos=x;
  6029  0067C2  C037  F009         	movff	_x,glcd_WriteChar8X8@xpos
  6030  0067C6                     l2019:
  6031                           
  6032                           ;glcd.c: 656: chr = (int)ch*8;
  6033  0067C6  5008               	movf	glcd_WriteChar8X8@ch^0,w,c
  6034  0067C8  0D08               	mullw	8
  6035  0067CA  CFF3 F006          	movff	prodl,glcd_WriteChar8X8@chr
  6036  0067CE  CFF4 F007          	movff	prodh,glcd_WriteChar8X8@chr+1
  6037                           
  6038                           ;glcd.c: 658: for(i = 0; i < 8; i++)
  6039  0067D2  0E00               	movlw	0
  6040  0067D4  6E0A               	movwf	glcd_WriteChar8X8@i^0,c
  6041  0067D6                     l2027:
  6042                           
  6043                           ;glcd.c: 659: {;glcd.c: 661: if(xpos > 63)
  6044  0067D6  0E3F               	movlw	63
  6045  0067D8  6409               	cpfsgt	glcd_WriteChar8X8@xpos^0,c
  6046  0067DA  D012               	goto	l2041
  6047                           
  6048                           ;glcd.c: 662: {;glcd.c: 663: xpos -= 64;
  6049  0067DC  0E40               	movlw	64
  6050  0067DE  5E09               	subwf	glcd_WriteChar8X8@xpos^0,f,c
  6051                           
  6052                           ;glcd.c: 664: side = 1;
  6053  0067E0  0E01               	movlw	1
  6054  0067E2  6E0B               	movwf	glcd_WriteChar8X8@side^0,c
  6055                           
  6056                           ;glcd.c: 665: LATBbits.LATB2=0;
  6057  0067E4  948A               	bcf	138,2,c	;volatile
  6058                           
  6059                           ;glcd.c: 666: glcd_WriteByte(side, 0x40 | xpos);
  6060  0067E6  5009               	movf	glcd_WriteChar8X8@xpos^0,w,c
  6061  0067E8  0940               	iorlw	64
  6062  0067EA  6E01               	movwf	glcd_WriteByte@data^0,c
  6063  0067EC  0E01               	movlw	1
  6064  0067EE  EC1C  F031         	call	_glcd_WriteByte
  6065                           
  6066                           ;glcd.c: 667: glcd_WriteByte(side, 0xB8 | y);
  6067  0067F2  5036               	movf	_y^0,w,c
  6068  0067F4  09B8               	iorlw	184
  6069  0067F6  6E01               	movwf	glcd_WriteByte@data^0,c
  6070  0067F8  0E01               	movlw	1
  6071  0067FA  EC1C  F031         	call	_glcd_WriteByte
  6072                           
  6073                           ;glcd.c: 668: LATBbits.LATB2=1;
  6074  0067FE  848A               	bsf	138,2,c	;volatile
  6075  006800                     l2041:
  6076                           
  6077                           ;glcd.c: 669: };glcd.c: 670: if(color)
  6078  006800  5003               	movf	glcd_WriteChar8X8@color^0,w,c
  6079  006802  B4D8               	btfsc	status,2,c
  6080  006804  D017               	goto	l2045
  6081                           
  6082                           ;glcd.c: 671: glcd_WriteByte(side,Font8x8[chr+i]);
  6083  006806  0ECD               	movlw	low _Font8x8
  6084  006808  6E04               	movwf	??_glcd_WriteChar8X8^0,c
  6085  00680A  0E72               	movlw	high _Font8x8
  6086  00680C  6E05               	movwf	(??_glcd_WriteChar8X8+1)^0,c
  6087  00680E  500A               	movf	glcd_WriteChar8X8@i^0,w,c
  6088  006810  2604               	addwf	??_glcd_WriteChar8X8^0,f,c
  6089  006812  0E00               	movlw	0
  6090  006814  2205               	addwfc	(??_glcd_WriteChar8X8+1)^0,f,c
  6091  006816  5006               	movf	glcd_WriteChar8X8@chr^0,w,c
  6092  006818  2604               	addwf	??_glcd_WriteChar8X8^0,f,c
  6093  00681A  5007               	movf	(glcd_WriteChar8X8@chr+1)^0,w,c
  6094  00681C  2205               	addwfc	(??_glcd_WriteChar8X8+1)^0,f,c
  6095  00681E  C004  FFF6         	movff	??_glcd_WriteChar8X8,tblptrl
  6096  006822  C005  FFF7         	movff	??_glcd_WriteChar8X8+1,tblptrh
  6097  006826                     	if	0	;tblptru may be non-zero
  6098  006826                     	endif
  6099  006826                     	if	0	;tblptru may be non-zero
  6100  006826                     	endif
  6101  006826  0008               	tblrd		*
  6102  006828  CFF5 F001          	movff	tablat,glcd_WriteByte@data
  6103  00682C  500B               	movf	glcd_WriteChar8X8@side^0,w,c
  6104  00682E  EC1C  F031         	call	_glcd_WriteByte
  6105  006832  D017               	goto	l2047
  6106  006834                     l2045:
  6107                           
  6108                           ;glcd.c: 672: else;glcd.c: 673: glcd_WriteByte(side,~(Font8x8[chr+i]));
  6109  006834  0ECD               	movlw	low _Font8x8
  6110  006836  6E04               	movwf	??_glcd_WriteChar8X8^0,c
  6111  006838  0E72               	movlw	high _Font8x8
  6112  00683A  6E05               	movwf	(??_glcd_WriteChar8X8+1)^0,c
  6113  00683C  500A               	movf	glcd_WriteChar8X8@i^0,w,c
  6114  00683E  2604               	addwf	??_glcd_WriteChar8X8^0,f,c
  6115  006840  0E00               	movlw	0
  6116  006842  2205               	addwfc	(??_glcd_WriteChar8X8+1)^0,f,c
  6117  006844  5006               	movf	glcd_WriteChar8X8@chr^0,w,c
  6118  006846  2604               	addwf	??_glcd_WriteChar8X8^0,f,c
  6119  006848  5007               	movf	(glcd_WriteChar8X8@chr+1)^0,w,c
  6120  00684A  2205               	addwfc	(??_glcd_WriteChar8X8+1)^0,f,c
  6121  00684C  C004  FFF6         	movff	??_glcd_WriteChar8X8,tblptrl
  6122  006850  C005  FFF7         	movff	??_glcd_WriteChar8X8+1,tblptrh
  6123  006854                     	if	0	;tblptru may be non-zero
  6124  006854                     	endif
  6125  006854                     	if	0	;tblptru may be non-zero
  6126  006854                     	endif
  6127  006854  0008               	tblrd		*
  6128  006856  50F5               	movf	tablat,w,c
  6129  006858  0AFF               	xorlw	255
  6130  00685A  6E01               	movwf	glcd_WriteByte@data^0,c
  6131  00685C  500B               	movf	glcd_WriteChar8X8@side^0,w,c
  6132  00685E  EC1C  F031         	call	_glcd_WriteByte
  6133  006862                     l2047:
  6134                           
  6135                           ;glcd.c: 674: xpos++;
  6136  006862  2A09               	incf	glcd_WriteChar8X8@xpos^0,f,c
  6137  006864  2A0A               	incf	glcd_WriteChar8X8@i^0,f,c
  6138  006866  0E07               	movlw	7
  6139  006868  640A               	cpfsgt	glcd_WriteChar8X8@i^0,c
  6140  00686A  D7B5               	goto	l2027
  6141                           
  6142                           ;glcd.c: 675: };glcd.c: 676: x+=8;
  6143  00686C  0E08               	movlw	8
  6144  00686E  2637               	addwf	_x^0,f,c
  6145  006870  0012               	return		;funcret
  6146  006872                     __end_of_glcd_WriteChar8X8:
  6147                           	opt callstack 0
  6148                           
  6149 ;; *************** function _glcd_WriteChar3x6 *****************
  6150 ;; Defined at:
  6151 ;;		line 683 in file "glcd.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  ch              1    wreg     unsigned char 
  6154 ;;  color           1    2[COMRAM] unsigned char 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  ch              1    6[COMRAM] unsigned char 
  6157 ;;  side            1    8[COMRAM] unsigned char 
  6158 ;;  i               1    7[COMRAM] unsigned char 
  6159 ;;  xpos            1    5[COMRAM] unsigned char 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6169 ;;      Params:         1       0       0       0       0       0       0       0       0
  6170 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6171 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6172 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6173 ;;Total ram usage:        7 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    1
  6176 ;; This function calls:
  6177 ;;		_glcd_WriteByte
  6178 ;; This function is called by:
  6179 ;;		_glcd_WriteString
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text11
  6184  0066C2                     __ptext11:
  6185                           	opt callstack 0
  6186  0066C2                     _glcd_WriteChar3x6:
  6187                           	opt callstack 25
  6188                           
  6189                           ;incstack = 0
  6190                           ;glcd_WriteChar3x6@ch stored from wreg
  6191  0066C2  6E07               	movwf	glcd_WriteChar3x6@ch^0,c
  6192                           
  6193                           ;glcd.c: 685: unsigned char i,xpos;;glcd.c: 686: unsigned char side = 0;
  6194  0066C4  0E00               	movlw	0
  6195  0066C6  6E09               	movwf	glcd_WriteChar3x6@side^0,c
  6196                           
  6197                           ;glcd.c: 688: if (ch=='\n')
  6198  0066C8  0E0A               	movlw	10
  6199  0066CA  1807               	xorwf	glcd_WriteChar3x6@ch^0,w,c
  6200  0066CC  A4D8               	btfss	status,2,c
  6201  0066CE  D004               	goto	l2065
  6202                           
  6203                           ;glcd.c: 689: {;glcd.c: 690: x=0;
  6204  0066D0  0E00               	movlw	0
  6205  0066D2  6E37               	movwf	_x^0,c
  6206                           
  6207                           ;glcd.c: 691: y++;
  6208  0066D4  2A36               	incf	_y^0,f,c
  6209  0066D6  0012               	return	
  6210  0066D8                     l2065:
  6211                           
  6212                           ;glcd.c: 693: };glcd.c: 695: if(x > 63)
  6213  0066D8  0E3F               	movlw	63
  6214  0066DA  6437               	cpfsgt	_x^0,c
  6215  0066DC  D006               	goto	l114
  6216                           
  6217                           ;glcd.c: 696: {;glcd.c: 697: side = 1;
  6218  0066DE  0E01               	movlw	1
  6219  0066E0  6E09               	movwf	glcd_WriteChar3x6@side^0,c
  6220                           
  6221                           ;glcd.c: 698: xpos=x-64;
  6222  0066E2  5037               	movf	_x^0,w,c
  6223  0066E4  0FC0               	addlw	192
  6224  0066E6  6E06               	movwf	glcd_WriteChar3x6@xpos^0,c
  6225                           
  6226                           ;glcd.c: 699: }
  6227  0066E8  D002               	goto	l2071
  6228  0066EA                     l114:
  6229                           
  6230                           ;glcd.c: 700: else;glcd.c: 701: xpos=x;
  6231  0066EA  C037  F006         	movff	_x,glcd_WriteChar3x6@xpos
  6232  0066EE                     l2071:
  6233                           
  6234                           ;glcd.c: 703: ch -= 32;
  6235  0066EE  0E20               	movlw	32
  6236  0066F0  5E07               	subwf	glcd_WriteChar3x6@ch^0,f,c
  6237                           
  6238                           ;glcd.c: 705: for(i = 0; i < 3; i++)
  6239  0066F2  0E00               	movlw	0
  6240  0066F4  6E08               	movwf	glcd_WriteChar3x6@i^0,c
  6241  0066F6                     l2079:
  6242                           
  6243                           ;glcd.c: 706: {;glcd.c: 707: if(xpos > 63)
  6244  0066F6  0E3F               	movlw	63
  6245  0066F8  6406               	cpfsgt	glcd_WriteChar3x6@xpos^0,c
  6246  0066FA  D012               	goto	l2093
  6247                           
  6248                           ;glcd.c: 708: {;glcd.c: 709: xpos -= 64;
  6249  0066FC  0E40               	movlw	64
  6250  0066FE  5E06               	subwf	glcd_WriteChar3x6@xpos^0,f,c
  6251                           
  6252                           ;glcd.c: 710: side = 1;
  6253  006700  0E01               	movlw	1
  6254  006702  6E09               	movwf	glcd_WriteChar3x6@side^0,c
  6255                           
  6256                           ;glcd.c: 711: LATBbits.LATB2=0;
  6257  006704  948A               	bcf	138,2,c	;volatile
  6258                           
  6259                           ;glcd.c: 712: glcd_WriteByte(side, 0x40 | xpos);
  6260  006706  5006               	movf	glcd_WriteChar3x6@xpos^0,w,c
  6261  006708  0940               	iorlw	64
  6262  00670A  6E01               	movwf	glcd_WriteByte@data^0,c
  6263  00670C  0E01               	movlw	1
  6264  00670E  EC1C  F031         	call	_glcd_WriteByte
  6265                           
  6266                           ;glcd.c: 713: glcd_WriteByte(side, 0xB8 | y);
  6267  006712  5036               	movf	_y^0,w,c
  6268  006714  09B8               	iorlw	184
  6269  006716  6E01               	movwf	glcd_WriteByte@data^0,c
  6270  006718  0E01               	movlw	1
  6271  00671A  EC1C  F031         	call	_glcd_WriteByte
  6272                           
  6273                           ;glcd.c: 714: LATBbits.LATB2=1;
  6274  00671E  848A               	bsf	138,2,c	;volatile
  6275  006720                     l2093:
  6276                           
  6277                           ;glcd.c: 715: };glcd.c: 716: if(color)
  6278  006720  5003               	movf	glcd_WriteChar3x6@color^0,w,c
  6279  006722  B4D8               	btfsc	status,2,c
  6280  006724  D019               	goto	l2097
  6281                           
  6282                           ;glcd.c: 717: glcd_WriteByte(side,Font3x6[ch][i]);
  6283  006726  5007               	movf	glcd_WriteChar3x6@ch^0,w,c
  6284  006728  0D03               	mullw	3
  6285  00672A  0ECD               	movlw	low _Font3x6
  6286  00672C  6E04               	movwf	??_glcd_WriteChar3x6^0,c
  6287  00672E  0E7E               	movlw	high _Font3x6
  6288  006730  6E05               	movwf	(??_glcd_WriteChar3x6+1)^0,c
  6289  006732  50F3               	movf	243,w,c
  6290  006734  2604               	addwf	??_glcd_WriteChar3x6^0,f,c
  6291  006736  50F4               	movf	244,w,c
  6292  006738  2205               	addwfc	(??_glcd_WriteChar3x6+1)^0,f,c
  6293  00673A  5008               	movf	glcd_WriteChar3x6@i^0,w,c
  6294  00673C  2604               	addwf	??_glcd_WriteChar3x6^0,f,c
  6295  00673E  0E00               	movlw	0
  6296  006740  2205               	addwfc	(??_glcd_WriteChar3x6+1)^0,f,c
  6297  006742  C004  FFF6         	movff	??_glcd_WriteChar3x6,tblptrl
  6298  006746  C005  FFF7         	movff	??_glcd_WriteChar3x6+1,tblptrh
  6299  00674A                     	if	0	;tblptru may be non-zero
  6300  00674A                     	endif
  6301  00674A                     	if	0	;tblptru may be non-zero
  6302  00674A                     	endif
  6303  00674A  0008               	tblrd		*
  6304  00674C  CFF5 F001          	movff	tablat,glcd_WriteByte@data
  6305  006750  5009               	movf	glcd_WriteChar3x6@side^0,w,c
  6306  006752  EC1C  F031         	call	_glcd_WriteByte
  6307  006756  D019               	goto	l2099
  6308  006758                     l2097:
  6309                           
  6310                           ;glcd.c: 718: else;glcd.c: 719: glcd_WriteByte(side,~(Font3x6[ch][i]));
  6311  006758  5007               	movf	glcd_WriteChar3x6@ch^0,w,c
  6312  00675A  0D03               	mullw	3
  6313  00675C  0ECD               	movlw	low _Font3x6
  6314  00675E  6E04               	movwf	??_glcd_WriteChar3x6^0,c
  6315  006760  0E7E               	movlw	high _Font3x6
  6316  006762  6E05               	movwf	(??_glcd_WriteChar3x6+1)^0,c
  6317  006764  50F3               	movf	243,w,c
  6318  006766  2604               	addwf	??_glcd_WriteChar3x6^0,f,c
  6319  006768  50F4               	movf	244,w,c
  6320  00676A  2205               	addwfc	(??_glcd_WriteChar3x6+1)^0,f,c
  6321  00676C  5008               	movf	glcd_WriteChar3x6@i^0,w,c
  6322  00676E  2604               	addwf	??_glcd_WriteChar3x6^0,f,c
  6323  006770  0E00               	movlw	0
  6324  006772  2205               	addwfc	(??_glcd_WriteChar3x6+1)^0,f,c
  6325  006774  C004  FFF6         	movff	??_glcd_WriteChar3x6,tblptrl
  6326  006778  C005  FFF7         	movff	??_glcd_WriteChar3x6+1,tblptrh
  6327  00677C                     	if	0	;tblptru may be non-zero
  6328  00677C                     	endif
  6329  00677C                     	if	0	;tblptru may be non-zero
  6330  00677C                     	endif
  6331  00677C  0008               	tblrd		*
  6332  00677E  50F5               	movf	tablat,w,c
  6333  006780  0AFF               	xorlw	255
  6334  006782  6E01               	movwf	glcd_WriteByte@data^0,c
  6335  006784  5009               	movf	glcd_WriteChar3x6@side^0,w,c
  6336  006786  EC1C  F031         	call	_glcd_WriteByte
  6337  00678A                     l2099:
  6338                           
  6339                           ;glcd.c: 720: xpos++;
  6340  00678A  2A06               	incf	glcd_WriteChar3x6@xpos^0,f,c
  6341  00678C  2A08               	incf	glcd_WriteChar3x6@i^0,f,c
  6342  00678E  0E02               	movlw	2
  6343  006790  6408               	cpfsgt	glcd_WriteChar3x6@i^0,c
  6344  006792  D7B1               	goto	l2079
  6345                           
  6346                           ;glcd.c: 721: };glcd.c: 722: x+=5;
  6347  006794  0E05               	movlw	5
  6348  006796  2637               	addwf	_x^0,f,c
  6349  006798  0012               	return		;funcret
  6350  00679A                     __end_of_glcd_WriteChar3x6:
  6351                           	opt callstack 0
  6352                           
  6353 ;; *************** function _glcd_SetCursor *****************
  6354 ;; Defined at:
  6355 ;;		line 609 in file "glcd.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  xpos            1    wreg     unsigned char 
  6358 ;;  ypos            1    2[COMRAM] unsigned char 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  xpos            1    4[COMRAM] unsigned char 
  6361 ;;  side            1    3[COMRAM] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      void 
  6364 ;; Registers used:
  6365 ;;		wreg, status,2, status,0, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6371 ;;      Params:         1       0       0       0       0       0       0       0       0
  6372 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6374 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6375 ;;Total ram usage:        3 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    1
  6378 ;; This function calls:
  6379 ;;		_glcd_WriteByte
  6380 ;; This function is called by:
  6381 ;;		_opening_menu
  6382 ;;		_menu_game
  6383 ;;		_printBoard
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text12
  6388  0062D8                     __ptext12:
  6389                           	opt callstack 0
  6390  0062D8                     _glcd_SetCursor:
  6391                           	opt callstack 26
  6392                           
  6393                           ;incstack = 0
  6394                           ;glcd_SetCursor@xpos stored from wreg
  6395  0062D8  6E05               	movwf	glcd_SetCursor@xpos^0,c
  6396                           
  6397                           ;glcd.c: 611: unsigned char side = 0;
  6398  0062DA  0E00               	movlw	0
  6399  0062DC  6E04               	movwf	glcd_SetCursor@side^0,c
  6400                           
  6401                           ;glcd.c: 613: if(xpos > 127 | ypos > 7)
  6402  0062DE  0E80               	movlw	128
  6403  0062E0  6005               	cpfslt	glcd_SetCursor@xpos^0,c
  6404  0062E2  0012               	return	
  6405  0062E4  0E07               	movlw	7
  6406  0062E6  6403               	cpfsgt	glcd_SetCursor@ypos^0,c
  6407  0062E8  D001               	goto	l94
  6408  0062EA  0012               	return	
  6409  0062EC                     l94:
  6410                           
  6411                           ;glcd.c: 616: x = xpos;
  6412  0062EC  C005  F037         	movff	glcd_SetCursor@xpos,_x
  6413                           
  6414                           ;glcd.c: 617: y = ypos;
  6415  0062F0  C003  F036         	movff	glcd_SetCursor@ypos,_y
  6416                           
  6417                           ;glcd.c: 619: if(xpos > 63)
  6418  0062F4  0E3F               	movlw	63
  6419  0062F6  6405               	cpfsgt	glcd_SetCursor@xpos^0,c
  6420  0062F8  D004               	goto	l2141
  6421                           
  6422                           ;glcd.c: 620: {;glcd.c: 621: xpos -= 64;
  6423  0062FA  0E40               	movlw	64
  6424  0062FC  5E05               	subwf	glcd_SetCursor@xpos^0,f,c
  6425                           
  6426                           ;glcd.c: 622: side = 1;
  6427  0062FE  0E01               	movlw	1
  6428  006300  6E04               	movwf	glcd_SetCursor@side^0,c
  6429  006302                     l2141:
  6430                           
  6431                           ;glcd.c: 623: };glcd.c: 625: LATBbits.LATB2=0;
  6432  006302  948A               	bcf	138,2,c	;volatile
  6433                           
  6434                           ;glcd.c: 626: glcd_WriteByte(side, 0x40 | xpos);
  6435  006304  5005               	movf	glcd_SetCursor@xpos^0,w,c
  6436  006306  0940               	iorlw	64
  6437  006308  6E01               	movwf	glcd_WriteByte@data^0,c
  6438  00630A  5004               	movf	glcd_SetCursor@side^0,w,c
  6439  00630C  EC1C  F031         	call	_glcd_WriteByte
  6440                           
  6441                           ;glcd.c: 627: glcd_WriteByte(side, 0xB8 | ypos);
  6442  006310  5003               	movf	glcd_SetCursor@ypos^0,w,c
  6443  006312  09B8               	iorlw	184
  6444  006314  6E01               	movwf	glcd_WriteByte@data^0,c
  6445  006316  5004               	movf	glcd_SetCursor@side^0,w,c
  6446  006318  EC1C  F031         	call	_glcd_WriteByte
  6447                           
  6448                           ;glcd.c: 628: LATBbits.LATB2=1;
  6449  00631C  848A               	bsf	138,2,c	;volatile
  6450  00631E  0012               	return		;funcret
  6451  006320                     __end_of_glcd_SetCursor:
  6452                           	opt callstack 0
  6453                           
  6454 ;; *************** function _checkWin *****************
  6455 ;; Defined at:
  6456 ;;		line 302 in file "menu.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  board           1   26[COMRAM] PTR unsigned char 
  6459 ;;		 -> menu_game@board(42), 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  2   26[COMRAM] int 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6471 ;;      Params:         2       0       0       0       0       0       0       0       0
  6472 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6474 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6475 ;;Total ram usage:        3 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    2
  6478 ;; This function calls:
  6479 ;;		_diagonalCheck
  6480 ;;		_horizontalCheck
  6481 ;;		_verticalCheck
  6482 ;; This function is called by:
  6483 ;;		_menu_game
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text13
  6488  006298                     __ptext13:
  6489                           	opt callstack 0
  6490  006298                     _checkWin:
  6491                           	opt callstack 26
  6492                           
  6493                           ;menu.c: 303: return (horizontalCheck(board) || verticalCheck(board) || diagonalCheck(bo
      +                          ard));
  6494                           
  6495                           ;incstack = 0
  6496  006298  0E01               	movlw	1
  6497  00629A  6E1D               	movwf	_checkWin$471^0,c
  6498  00629C  C01B  F013         	movff	checkWin@board,horizontalCheck@board
  6499  0062A0  EC39  F034         	call	_horizontalCheck	;wreg free
  6500  0062A4  5013               	movf	?_horizontalCheck^0,w,c
  6501  0062A6  1014               	iorwf	(?_horizontalCheck+1)^0,w,c
  6502  0062A8  A4D8               	btfss	status,2,c
  6503  0062AA  D012               	goto	l2465
  6504  0062AC  C01B  F013         	movff	checkWin@board,verticalCheck@board
  6505  0062B0  ECA8  F034         	call	_verticalCheck	;wreg free
  6506  0062B4  5013               	movf	?_verticalCheck^0,w,c
  6507  0062B6  1014               	iorwf	(?_verticalCheck+1)^0,w,c
  6508  0062B8  A4D8               	btfss	status,2,c
  6509  0062BA  D00A               	goto	l2465
  6510  0062BC  C01B  F013         	movff	checkWin@board,diagonalCheck@board
  6511  0062C0  ECBD  F035         	call	_diagonalCheck	;wreg free
  6512  0062C4  5013               	movf	?_diagonalCheck^0,w,c
  6513  0062C6  1014               	iorwf	(?_diagonalCheck+1)^0,w,c
  6514  0062C8  A4D8               	btfss	status,2,c
  6515  0062CA  D002               	goto	l2465
  6516  0062CC  0E00               	movlw	0
  6517  0062CE  6E1D               	movwf	_checkWin$471^0,c
  6518  0062D0                     l2465:
  6519  0062D0  C01D  F01B         	movff	_checkWin$471,?_checkWin
  6520  0062D4  6A1C               	clrf	(?_checkWin+1)^0,c
  6521  0062D6  0012               	return		;funcret
  6522  0062D8                     __end_of_checkWin:
  6523                           	opt callstack 0
  6524                           
  6525 ;; *************** function _verticalCheck *****************
  6526 ;; Defined at:
  6527 ;;		line 330 in file "menu.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  board           1   18[COMRAM] PTR unsigned char 
  6530 ;;		 -> menu_game@board(42), 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  HEIGHT          2   22[COMRAM] const int 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  2   18[COMRAM] int 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6542 ;;      Params:         2       0       0       0       0       0       0       0       0
  6543 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6544 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6545 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6546 ;;Total ram usage:        6 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    1
  6549 ;; This function calls:
  6550 ;;		___wmul
  6551 ;;		_checkFour
  6552 ;; This function is called by:
  6553 ;;		_checkWin
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text14
  6558  006950                     __ptext14:
  6559                           	opt callstack 0
  6560  006950                     _verticalCheck:
  6561                           	opt callstack 26
  6562                           
  6563                           ;menu.c: 331: row, col, idx = 0;
  6564                           
  6565                           ;incstack = 0
  6566  006950  0E00               	movlw	0
  6567  006952  6E25               	movwf	(_idx+1)^0,c
  6568  006954  0E00               	movlw	0
  6569  006956  6E24               	movwf	_idx^0,c
  6570                           
  6571                           ;menu.c: 332: const int HEIGHT = 7;
  6572  006958  0E00               	movlw	0
  6573  00695A  6E18               	movwf	(verticalCheck@HEIGHT+1)^0,c
  6574  00695C  0E07               	movlw	7
  6575  00695E  6E17               	movwf	verticalCheck@HEIGHT^0,c
  6576                           
  6577                           ;menu.c: 334: for(row = 0; row < 6 - 3; row++){
  6578  006960  0E00               	movlw	0
  6579  006962  6E39               	movwf	(_row+1)^0,c
  6580  006964  0E00               	movlw	0
  6581  006966  6E38               	movwf	_row^0,c
  6582  006968                     l2329:
  6583  006968  BE39               	btfsc	(_row+1)^0,7,c
  6584  00696A  D006               	goto	l2333
  6585  00696C  5039               	movf	(_row+1)^0,w,c
  6586  00696E  E15A               	bnz	l2355
  6587  006970  0E03               	movlw	3
  6588  006972  5C38               	subwf	_row^0,w,c
  6589  006974  B0D8               	btfsc	status,0,c
  6590  006976  D056               	goto	l2355
  6591  006978                     l2333:
  6592                           
  6593                           ;menu.c: 335: for(col = 0; col < 7; col++){
  6594  006978  0E00               	movlw	0
  6595  00697A  6E27               	movwf	(_col+1)^0,c
  6596  00697C  0E00               	movlw	0
  6597  00697E  6E26               	movwf	_col^0,c
  6598  006980                     l2335:
  6599  006980  BE27               	btfsc	(_col+1)^0,7,c
  6600  006982  D006               	goto	l2339
  6601  006984  5027               	movf	(_col+1)^0,w,c
  6602  006986  E14B               	bnz	l2351
  6603  006988  0E07               	movlw	7
  6604  00698A  5C26               	subwf	_col^0,w,c
  6605  00698C  B0D8               	btfsc	status,0,c
  6606  00698E  D047               	goto	l2351
  6607  006990                     l2339:
  6608                           
  6609                           ;menu.c: 336: idx = 7 * row + col;
  6610  006990  C038  F001         	movff	_row,___wmul@multiplier
  6611  006994  C039  F002         	movff	_row+1,___wmul@multiplier+1
  6612  006998  0E00               	movlw	0
  6613  00699A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6614  00699C  0E07               	movlw	7
  6615  00699E  6E03               	movwf	___wmul@multiplicand^0,c
  6616  0069A0  EC09  F031         	call	___wmul	;wreg free
  6617  0069A4  5026               	movf	_col^0,w,c
  6618  0069A6  2401               	addwf	?___wmul^0,w,c
  6619  0069A8  6E24               	movwf	_idx^0,c
  6620  0069AA  5027               	movf	(_col+1)^0,w,c
  6621  0069AC  2002               	addwfc	(?___wmul+1)^0,w,c
  6622  0069AE  6E25               	movwf	(_idx+1)^0,c
  6623                           
  6624                           ;menu.c: 337: if(checkFour(board, idx, idx + HEIGHT, idx + HEIGHT * 2, idx + HEIGHT * 3)
      +                          ){
  6625  0069B0  C013  F007         	movff	verticalCheck@board,checkFour@board
  6626  0069B4  C024  F008         	movff	_idx,checkFour@a
  6627  0069B8  C025  F009         	movff	_idx+1,checkFour@a+1
  6628  0069BC  5017               	movf	verticalCheck@HEIGHT^0,w,c
  6629  0069BE  2424               	addwf	_idx^0,w,c
  6630  0069C0  6E0A               	movwf	checkFour@b^0,c
  6631  0069C2  5018               	movf	(verticalCheck@HEIGHT+1)^0,w,c
  6632  0069C4  2025               	addwfc	(_idx+1)^0,w,c
  6633  0069C6  6E0B               	movwf	(checkFour@b+1)^0,c
  6634  0069C8  C017  F015         	movff	verticalCheck@HEIGHT,??_verticalCheck
  6635  0069CC  C018  F016         	movff	verticalCheck@HEIGHT+1,??_verticalCheck+1
  6636  0069D0  90D8               	bcf	status,0,c
  6637  0069D2  3615               	rlcf	??_verticalCheck^0,f,c
  6638  0069D4  3616               	rlcf	(??_verticalCheck+1)^0,f,c
  6639  0069D6  5024               	movf	_idx^0,w,c
  6640  0069D8  2415               	addwf	??_verticalCheck^0,w,c
  6641  0069DA  6E0C               	movwf	checkFour@c^0,c
  6642  0069DC  5025               	movf	(_idx+1)^0,w,c
  6643  0069DE  2016               	addwfc	(??_verticalCheck+1)^0,w,c
  6644  0069E0  6E0D               	movwf	(checkFour@c+1)^0,c
  6645  0069E2  C017  F001         	movff	verticalCheck@HEIGHT,___wmul@multiplier
  6646  0069E6  C018  F002         	movff	verticalCheck@HEIGHT+1,___wmul@multiplier+1
  6647  0069EA  0E00               	movlw	0
  6648  0069EC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6649  0069EE  0E03               	movlw	3
  6650  0069F0  6E03               	movwf	___wmul@multiplicand^0,c
  6651  0069F2  EC09  F031         	call	___wmul	;wreg free
  6652  0069F6  5024               	movf	_idx^0,w,c
  6653  0069F8  2401               	addwf	?___wmul^0,w,c
  6654  0069FA  6E0E               	movwf	checkFour@d^0,c
  6655  0069FC  5025               	movf	(_idx+1)^0,w,c
  6656  0069FE  2002               	addwfc	(?___wmul+1)^0,w,c
  6657  006A00  6E0F               	movwf	(checkFour@d+1)^0,c
  6658  006A02  EC90  F031         	call	_checkFour	;wreg free
  6659  006A06  5007               	movf	?_checkFour^0,w,c
  6660  006A08  1008               	iorwf	(?_checkFour+1)^0,w,c
  6661  006A0A  B4D8               	btfsc	status,2,c
  6662  006A0C  D005               	goto	l2347
  6663                           
  6664                           ;menu.c: 338: return 1;
  6665  006A0E  0E00               	movlw	0
  6666  006A10  6E14               	movwf	(?_verticalCheck+1)^0,c
  6667  006A12  0E01               	movlw	1
  6668  006A14  6E13               	movwf	?_verticalCheck^0,c
  6669  006A16  0012               	return	
  6670  006A18                     l2347:
  6671  006A18  4A26               	infsnz	_col^0,f,c
  6672  006A1A  2A27               	incf	(_col+1)^0,f,c
  6673  006A1C  D7B1               	goto	l2335
  6674  006A1E                     l2351:
  6675  006A1E  4A38               	infsnz	_row^0,f,c
  6676  006A20  2A39               	incf	(_row+1)^0,f,c
  6677  006A22  D7A2               	goto	l2329
  6678  006A24                     l2355:
  6679                           
  6680                           ;menu.c: 339: };menu.c: 340: };menu.c: 341: };menu.c: 342: return 0;
  6681  006A24  0E00               	movlw	0
  6682  006A26  6E14               	movwf	(?_verticalCheck+1)^0,c
  6683  006A28  0E00               	movlw	0
  6684  006A2A  6E13               	movwf	?_verticalCheck^0,c
  6685  006A2C  0012               	return		;funcret
  6686  006A2E                     __end_of_verticalCheck:
  6687                           	opt callstack 0
  6688                           
  6689 ;; *************** function _horizontalCheck *****************
  6690 ;; Defined at:
  6691 ;;		line 314 in file "menu.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  board           1   18[COMRAM] PTR unsigned char 
  6694 ;;		 -> menu_game@board(42), 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  WIDTH           2   22[COMRAM] const int 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  2   18[COMRAM] int 
  6699 ;; Registers used:
  6700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6706 ;;      Params:         2       0       0       0       0       0       0       0       0
  6707 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6708 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6709 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6710 ;;Total ram usage:        6 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    1
  6713 ;; This function calls:
  6714 ;;		___wmul
  6715 ;;		_checkFour
  6716 ;; This function is called by:
  6717 ;;		_checkWin
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text15
  6722  006872                     __ptext15:
  6723                           	opt callstack 0
  6724  006872                     _horizontalCheck:
  6725                           	opt callstack 26
  6726                           
  6727                           ;menu.c: 315: row, col, idx = 0;
  6728                           
  6729                           ;incstack = 0
  6730  006872  0E00               	movlw	0
  6731  006874  6E25               	movwf	(_idx+1)^0,c
  6732  006876  0E00               	movlw	0
  6733  006878  6E24               	movwf	_idx^0,c
  6734                           
  6735                           ;menu.c: 316: const int WIDTH = 1;
  6736  00687A  0E00               	movlw	0
  6737  00687C  6E18               	movwf	(horizontalCheck@WIDTH+1)^0,c
  6738  00687E  0E01               	movlw	1
  6739  006880  6E17               	movwf	horizontalCheck@WIDTH^0,c
  6740                           
  6741                           ;menu.c: 318: for(row = 0; row < 6; row++){
  6742  006882  0E00               	movlw	0
  6743  006884  6E39               	movwf	(_row+1)^0,c
  6744  006886  0E00               	movlw	0
  6745  006888  6E38               	movwf	_row^0,c
  6746  00688A                     l2297:
  6747  00688A  BE39               	btfsc	(_row+1)^0,7,c
  6748  00688C  D006               	goto	l2301
  6749  00688E  5039               	movf	(_row+1)^0,w,c
  6750  006890  E15A               	bnz	l2323
  6751  006892  0E06               	movlw	6
  6752  006894  5C38               	subwf	_row^0,w,c
  6753  006896  B0D8               	btfsc	status,0,c
  6754  006898  D056               	goto	l2323
  6755  00689A                     l2301:
  6756                           
  6757                           ;menu.c: 319: for(col = 0; col < 7 - 3; col++){
  6758  00689A  0E00               	movlw	0
  6759  00689C  6E27               	movwf	(_col+1)^0,c
  6760  00689E  0E00               	movlw	0
  6761  0068A0  6E26               	movwf	_col^0,c
  6762  0068A2                     l2303:
  6763  0068A2  BE27               	btfsc	(_col+1)^0,7,c
  6764  0068A4  D006               	goto	l2307
  6765  0068A6  5027               	movf	(_col+1)^0,w,c
  6766  0068A8  E14B               	bnz	l2319
  6767  0068AA  0E04               	movlw	4
  6768  0068AC  5C26               	subwf	_col^0,w,c
  6769  0068AE  B0D8               	btfsc	status,0,c
  6770  0068B0  D047               	goto	l2319
  6771  0068B2                     l2307:
  6772                           
  6773                           ;menu.c: 320: idx = 7 * row + col;
  6774  0068B2  C038  F001         	movff	_row,___wmul@multiplier
  6775  0068B6  C039  F002         	movff	_row+1,___wmul@multiplier+1
  6776  0068BA  0E00               	movlw	0
  6777  0068BC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6778  0068BE  0E07               	movlw	7
  6779  0068C0  6E03               	movwf	___wmul@multiplicand^0,c
  6780  0068C2  EC09  F031         	call	___wmul	;wreg free
  6781  0068C6  5026               	movf	_col^0,w,c
  6782  0068C8  2401               	addwf	?___wmul^0,w,c
  6783  0068CA  6E24               	movwf	_idx^0,c
  6784  0068CC  5027               	movf	(_col+1)^0,w,c
  6785  0068CE  2002               	addwfc	(?___wmul+1)^0,w,c
  6786  0068D0  6E25               	movwf	(_idx+1)^0,c
  6787                           
  6788                           ;menu.c: 321: if(checkFour(board, idx, idx + WIDTH, idx + WIDTH * 2, idx + WIDTH * 3)){
  6789  0068D2  C013  F007         	movff	horizontalCheck@board,checkFour@board
  6790  0068D6  C024  F008         	movff	_idx,checkFour@a
  6791  0068DA  C025  F009         	movff	_idx+1,checkFour@a+1
  6792  0068DE  5017               	movf	horizontalCheck@WIDTH^0,w,c
  6793  0068E0  2424               	addwf	_idx^0,w,c
  6794  0068E2  6E0A               	movwf	checkFour@b^0,c
  6795  0068E4  5018               	movf	(horizontalCheck@WIDTH+1)^0,w,c
  6796  0068E6  2025               	addwfc	(_idx+1)^0,w,c
  6797  0068E8  6E0B               	movwf	(checkFour@b+1)^0,c
  6798  0068EA  C017  F015         	movff	horizontalCheck@WIDTH,??_horizontalCheck
  6799  0068EE  C018  F016         	movff	horizontalCheck@WIDTH+1,??_horizontalCheck+1
  6800  0068F2  90D8               	bcf	status,0,c
  6801  0068F4  3615               	rlcf	??_horizontalCheck^0,f,c
  6802  0068F6  3616               	rlcf	(??_horizontalCheck+1)^0,f,c
  6803  0068F8  5024               	movf	_idx^0,w,c
  6804  0068FA  2415               	addwf	??_horizontalCheck^0,w,c
  6805  0068FC  6E0C               	movwf	checkFour@c^0,c
  6806  0068FE  5025               	movf	(_idx+1)^0,w,c
  6807  006900  2016               	addwfc	(??_horizontalCheck+1)^0,w,c
  6808  006902  6E0D               	movwf	(checkFour@c+1)^0,c
  6809  006904  C017  F001         	movff	horizontalCheck@WIDTH,___wmul@multiplier
  6810  006908  C018  F002         	movff	horizontalCheck@WIDTH+1,___wmul@multiplier+1
  6811  00690C  0E00               	movlw	0
  6812  00690E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6813  006910  0E03               	movlw	3
  6814  006912  6E03               	movwf	___wmul@multiplicand^0,c
  6815  006914  EC09  F031         	call	___wmul	;wreg free
  6816  006918  5024               	movf	_idx^0,w,c
  6817  00691A  2401               	addwf	?___wmul^0,w,c
  6818  00691C  6E0E               	movwf	checkFour@d^0,c
  6819  00691E  5025               	movf	(_idx+1)^0,w,c
  6820  006920  2002               	addwfc	(?___wmul+1)^0,w,c
  6821  006922  6E0F               	movwf	(checkFour@d+1)^0,c
  6822  006924  EC90  F031         	call	_checkFour	;wreg free
  6823  006928  5007               	movf	?_checkFour^0,w,c
  6824  00692A  1008               	iorwf	(?_checkFour+1)^0,w,c
  6825  00692C  B4D8               	btfsc	status,2,c
  6826  00692E  D005               	goto	l2315
  6827                           
  6828                           ;menu.c: 322: return 1;
  6829  006930  0E00               	movlw	0
  6830  006932  6E14               	movwf	(?_horizontalCheck+1)^0,c
  6831  006934  0E01               	movlw	1
  6832  006936  6E13               	movwf	?_horizontalCheck^0,c
  6833  006938  0012               	return	
  6834  00693A                     l2315:
  6835  00693A  4A26               	infsnz	_col^0,f,c
  6836  00693C  2A27               	incf	(_col+1)^0,f,c
  6837  00693E  D7B1               	goto	l2303
  6838  006940                     l2319:
  6839  006940  4A38               	infsnz	_row^0,f,c
  6840  006942  2A39               	incf	(_row+1)^0,f,c
  6841  006944  D7A2               	goto	l2297
  6842  006946                     l2323:
  6843                           
  6844                           ;menu.c: 323: };menu.c: 324: };menu.c: 325: };menu.c: 326: return 0;
  6845  006946  0E00               	movlw	0
  6846  006948  6E14               	movwf	(?_horizontalCheck+1)^0,c
  6847  00694A  0E00               	movlw	0
  6848  00694C  6E13               	movwf	?_horizontalCheck^0,c
  6849  00694E  0012               	return		;funcret
  6850  006950                     __end_of_horizontalCheck:
  6851                           	opt callstack 0
  6852                           
  6853 ;; *************** function _diagonalCheck *****************
  6854 ;; Defined at:
  6855 ;;		line 347 in file "menu.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  board           1   18[COMRAM] PTR unsigned char 
  6858 ;;		 -> menu_game@board(42), 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  DIAG_LFT        2   24[COMRAM] const int 
  6861 ;;  DIAG_RGT        2   22[COMRAM] const int 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  2   18[COMRAM] int 
  6864 ;; Registers used:
  6865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6871 ;;      Params:         2       0       0       0       0       0       0       0       0
  6872 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6873 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6874 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6875 ;;Total ram usage:        8 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    1
  6878 ;; This function calls:
  6879 ;;		___wmul
  6880 ;;		_checkFour
  6881 ;; This function is called by:
  6882 ;;		_checkWin
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text16
  6887  006B7A                     __ptext16:
  6888                           	opt callstack 0
  6889  006B7A                     _diagonalCheck:
  6890                           	opt callstack 26
  6891                           
  6892                           ;menu.c: 348: row, col, idx, count = 0;
  6893                           
  6894                           ;incstack = 0
  6895  006B7A  0E00               	movlw	0
  6896  006B7C  6E23               	movwf	(_count+1)^0,c
  6897  006B7E  0E00               	movlw	0
  6898  006B80  6E22               	movwf	_count^0,c
  6899                           
  6900                           ;menu.c: 349: const int DIAG_RGT = 6, DIAG_LFT = 8;
  6901  006B82  0E00               	movlw	0
  6902  006B84  6E18               	movwf	(diagonalCheck@DIAG_RGT+1)^0,c
  6903  006B86  0E06               	movlw	6
  6904  006B88  6E17               	movwf	diagonalCheck@DIAG_RGT^0,c
  6905  006B8A  0E00               	movlw	0
  6906  006B8C  6E1A               	movwf	(diagonalCheck@DIAG_LFT+1)^0,c
  6907  006B8E  0E08               	movlw	8
  6908  006B90  6E19               	movwf	diagonalCheck@DIAG_LFT^0,c
  6909                           
  6910                           ;menu.c: 351: for(row = 0; row < 6 - 3; row++){
  6911  006B92  0E00               	movlw	0
  6912  006B94  6E39               	movwf	(_row+1)^0,c
  6913  006B96  0E00               	movlw	0
  6914  006B98  6E38               	movwf	_row^0,c
  6915  006B9A                     l2361:
  6916  006B9A  BE39               	btfsc	(_row+1)^0,7,c
  6917  006B9C  D008               	goto	l2365
  6918  006B9E  5039               	movf	(_row+1)^0,w,c
  6919  006BA0  E105               	bnz	u1940
  6920  006BA2  0E03               	movlw	3
  6921  006BA4  5C38               	subwf	_row^0,w,c
  6922  006BA6  B0D8               	btfsc	status,0,c
  6923  006BA8  D09F               	goto	l2395
  6924  006BAA  D001               	goto	l2365
  6925  006BAC                     u1940:
  6926  006BAC  D09D               	goto	l2395
  6927  006BAE                     l2365:
  6928                           
  6929                           ;menu.c: 352: for(col = 0; col < 7; col++){
  6930  006BAE  0E00               	movlw	0
  6931  006BB0  6E27               	movwf	(_col+1)^0,c
  6932  006BB2  0E00               	movlw	0
  6933  006BB4  6E26               	movwf	_col^0,c
  6934  006BB6                     l2367:
  6935  006BB6  BE27               	btfsc	(_col+1)^0,7,c
  6936  006BB8  D008               	goto	l2371
  6937  006BBA  5027               	movf	(_col+1)^0,w,c
  6938  006BBC  E105               	bnz	u1950
  6939  006BBE  0E07               	movlw	7
  6940  006BC0  5C26               	subwf	_col^0,w,c
  6941  006BC2  B0D8               	btfsc	status,0,c
  6942  006BC4  D08A               	goto	l2389
  6943  006BC6  D001               	goto	l2371
  6944  006BC8                     u1950:
  6945  006BC8  D088               	goto	l2389
  6946  006BCA                     l2371:
  6947                           
  6948                           ;menu.c: 353: idx = 7 * row + col;
  6949  006BCA  C038  F001         	movff	_row,___wmul@multiplier
  6950  006BCE  C039  F002         	movff	_row+1,___wmul@multiplier+1
  6951  006BD2  0E00               	movlw	0
  6952  006BD4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6953  006BD6  0E07               	movlw	7
  6954  006BD8  6E03               	movwf	___wmul@multiplicand^0,c
  6955  006BDA  EC09  F031         	call	___wmul	;wreg free
  6956  006BDE  5026               	movf	_col^0,w,c
  6957  006BE0  2401               	addwf	?___wmul^0,w,c
  6958  006BE2  6E24               	movwf	_idx^0,c
  6959  006BE4  5027               	movf	(_col+1)^0,w,c
  6960  006BE6  2002               	addwfc	(?___wmul+1)^0,w,c
  6961  006BE8  6E25               	movwf	(_idx+1)^0,c
  6962                           
  6963                           ;menu.c: 354: if(count <= 3 && checkFour(board, idx, idx + DIAG_LFT, idx + DIAG_LFT * 2,
      +                           idx + DIAG_LFT * 3) || count >= 3 && checkFour(board, idx, idx + DIAG_RGT, idx + DIAG_R
      +                          GT * 2, idx + DIAG_RGT * 3)){
  6964  006BEA  BE23               	btfsc	(_count+1)^0,7,c
  6965  006BEC  D006               	goto	u1960
  6966  006BEE  5023               	movf	(_count+1)^0,w,c
  6967  006BF0  E133               	bnz	l2377
  6968  006BF2  0E04               	movlw	4
  6969  006BF4  5C22               	subwf	_count^0,w,c
  6970  006BF6  B0D8               	btfsc	status,0,c
  6971  006BF8  D02F               	goto	u1970
  6972  006BFA                     u1960:
  6973  006BFA  C013  F007         	movff	diagonalCheck@board,checkFour@board
  6974  006BFE  C024  F008         	movff	_idx,checkFour@a
  6975  006C02  C025  F009         	movff	_idx+1,checkFour@a+1
  6976  006C06  5019               	movf	diagonalCheck@DIAG_LFT^0,w,c
  6977  006C08  2424               	addwf	_idx^0,w,c
  6978  006C0A  6E0A               	movwf	checkFour@b^0,c
  6979  006C0C  501A               	movf	(diagonalCheck@DIAG_LFT+1)^0,w,c
  6980  006C0E  2025               	addwfc	(_idx+1)^0,w,c
  6981  006C10  6E0B               	movwf	(checkFour@b+1)^0,c
  6982  006C12  C019  F015         	movff	diagonalCheck@DIAG_LFT,??_diagonalCheck
  6983  006C16  C01A  F016         	movff	diagonalCheck@DIAG_LFT+1,??_diagonalCheck+1
  6984  006C1A  90D8               	bcf	status,0,c
  6985  006C1C  3615               	rlcf	??_diagonalCheck^0,f,c
  6986  006C1E  3616               	rlcf	(??_diagonalCheck+1)^0,f,c
  6987  006C20  5024               	movf	_idx^0,w,c
  6988  006C22  2415               	addwf	??_diagonalCheck^0,w,c
  6989  006C24  6E0C               	movwf	checkFour@c^0,c
  6990  006C26  5025               	movf	(_idx+1)^0,w,c
  6991  006C28  2016               	addwfc	(??_diagonalCheck+1)^0,w,c
  6992  006C2A  6E0D               	movwf	(checkFour@c+1)^0,c
  6993  006C2C  C019  F001         	movff	diagonalCheck@DIAG_LFT,___wmul@multiplier
  6994  006C30  C01A  F002         	movff	diagonalCheck@DIAG_LFT+1,___wmul@multiplier+1
  6995  006C34  0E00               	movlw	0
  6996  006C36  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6997  006C38  0E03               	movlw	3
  6998  006C3A  6E03               	movwf	___wmul@multiplicand^0,c
  6999  006C3C  EC09  F031         	call	___wmul	;wreg free
  7000  006C40  5024               	movf	_idx^0,w,c
  7001  006C42  2401               	addwf	?___wmul^0,w,c
  7002  006C44  6E0E               	movwf	checkFour@d^0,c
  7003  006C46  5025               	movf	(_idx+1)^0,w,c
  7004  006C48  2002               	addwfc	(?___wmul+1)^0,w,c
  7005  006C4A  6E0F               	movwf	(checkFour@d+1)^0,c
  7006  006C4C  EC90  F031         	call	_checkFour	;wreg free
  7007  006C50  5007               	movf	?_checkFour^0,w,c
  7008  006C52  1008               	iorwf	(?_checkFour+1)^0,w,c
  7009  006C54  A4D8               	btfss	status,2,c
  7010  006C56  D037               	goto	u1990
  7011  006C58                     u1970:
  7012  006C58                     l2377:
  7013  006C58  BE23               	btfsc	(_count+1)^0,7,c
  7014  006C5A  D03A               	goto	l2385
  7015  006C5C  5023               	movf	(_count+1)^0,w,c
  7016  006C5E  E104               	bnz	u1980
  7017  006C60  0E03               	movlw	3
  7018  006C62  5C22               	subwf	_count^0,w,c
  7019  006C64  A0D8               	btfss	status,0,c
  7020  006C66  D034               	goto	l2385
  7021  006C68                     u1980:
  7022  006C68  C013  F007         	movff	diagonalCheck@board,checkFour@board
  7023  006C6C  C024  F008         	movff	_idx,checkFour@a
  7024  006C70  C025  F009         	movff	_idx+1,checkFour@a+1
  7025  006C74  5017               	movf	diagonalCheck@DIAG_RGT^0,w,c
  7026  006C76  2424               	addwf	_idx^0,w,c
  7027  006C78  6E0A               	movwf	checkFour@b^0,c
  7028  006C7A  5018               	movf	(diagonalCheck@DIAG_RGT+1)^0,w,c
  7029  006C7C  2025               	addwfc	(_idx+1)^0,w,c
  7030  006C7E  6E0B               	movwf	(checkFour@b+1)^0,c
  7031  006C80  C017  F015         	movff	diagonalCheck@DIAG_RGT,??_diagonalCheck
  7032  006C84  C018  F016         	movff	diagonalCheck@DIAG_RGT+1,??_diagonalCheck+1
  7033  006C88  90D8               	bcf	status,0,c
  7034  006C8A  3615               	rlcf	??_diagonalCheck^0,f,c
  7035  006C8C  3616               	rlcf	(??_diagonalCheck+1)^0,f,c
  7036  006C8E  5024               	movf	_idx^0,w,c
  7037  006C90  2415               	addwf	??_diagonalCheck^0,w,c
  7038  006C92  6E0C               	movwf	checkFour@c^0,c
  7039  006C94  5025               	movf	(_idx+1)^0,w,c
  7040  006C96  2016               	addwfc	(??_diagonalCheck+1)^0,w,c
  7041  006C98  6E0D               	movwf	(checkFour@c+1)^0,c
  7042  006C9A  C017  F001         	movff	diagonalCheck@DIAG_RGT,___wmul@multiplier
  7043  006C9E  C018  F002         	movff	diagonalCheck@DIAG_RGT+1,___wmul@multiplier+1
  7044  006CA2  0E00               	movlw	0
  7045  006CA4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7046  006CA6  0E03               	movlw	3
  7047  006CA8  6E03               	movwf	___wmul@multiplicand^0,c
  7048  006CAA  EC09  F031         	call	___wmul	;wreg free
  7049  006CAE  5024               	movf	_idx^0,w,c
  7050  006CB0  2401               	addwf	?___wmul^0,w,c
  7051  006CB2  6E0E               	movwf	checkFour@d^0,c
  7052  006CB4  5025               	movf	(_idx+1)^0,w,c
  7053  006CB6  2002               	addwfc	(?___wmul+1)^0,w,c
  7054  006CB8  6E0F               	movwf	(checkFour@d+1)^0,c
  7055  006CBA  EC90  F031         	call	_checkFour	;wreg free
  7056  006CBE  5007               	movf	?_checkFour^0,w,c
  7057  006CC0  1008               	iorwf	(?_checkFour+1)^0,w,c
  7058  006CC2  B4D8               	btfsc	status,2,c
  7059  006CC4  D005               	goto	l2385
  7060  006CC6                     u1990:
  7061                           
  7062                           ;menu.c: 355: return 1;
  7063  006CC6  0E00               	movlw	0
  7064  006CC8  6E14               	movwf	(?_diagonalCheck+1)^0,c
  7065  006CCA  0E01               	movlw	1
  7066  006CCC  6E13               	movwf	?_diagonalCheck^0,c
  7067  006CCE  0012               	return	
  7068  006CD0                     l2385:
  7069                           
  7070                           ;menu.c: 356: };menu.c: 357: count++;
  7071  006CD0  4A22               	infsnz	_count^0,f,c
  7072  006CD2  2A23               	incf	(_count+1)^0,f,c
  7073  006CD4  4A26               	infsnz	_col^0,f,c
  7074  006CD6  2A27               	incf	(_col+1)^0,f,c
  7075  006CD8  D76E               	goto	l2367
  7076  006CDA                     l2389:
  7077                           
  7078                           ;menu.c: 358: };menu.c: 359: count = 0;
  7079  006CDA  0E00               	movlw	0
  7080  006CDC  6E23               	movwf	(_count+1)^0,c
  7081  006CDE  0E00               	movlw	0
  7082  006CE0  6E22               	movwf	_count^0,c
  7083  006CE2  4A38               	infsnz	_row^0,f,c
  7084  006CE4  2A39               	incf	(_row+1)^0,f,c
  7085  006CE6  D759               	goto	l2361
  7086  006CE8                     l2395:
  7087                           
  7088                           ;menu.c: 360: };menu.c: 361: return 0;
  7089  006CE8  0E00               	movlw	0
  7090  006CEA  6E14               	movwf	(?_diagonalCheck+1)^0,c
  7091  006CEC  0E00               	movlw	0
  7092  006CEE  6E13               	movwf	?_diagonalCheck^0,c
  7093  006CF0  0012               	return		;funcret
  7094  006CF2                     __end_of_diagonalCheck:
  7095                           	opt callstack 0
  7096                           
  7097 ;; *************** function _checkFour *****************
  7098 ;; Defined at:
  7099 ;;		line 308 in file "menu.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  board           1    6[COMRAM] PTR unsigned char 
  7102 ;;		 -> menu_game@board(42), 
  7103 ;;  a               2    7[COMRAM] int 
  7104 ;;  b               2    9[COMRAM] int 
  7105 ;;  c               2   11[COMRAM] int 
  7106 ;;  d               2   13[COMRAM] int 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2    6[COMRAM] int 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7118 ;;      Params:         9       0       0       0       0       0       0       0       0
  7119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7120 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7121 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7122 ;;Total ram usage:       12 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_horizontalCheck
  7128 ;;		_verticalCheck
  7129 ;;		_diagonalCheck
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text17
  7134  006320                     __ptext17:
  7135                           	opt callstack 0
  7136  006320                     _checkFour:
  7137                           	opt callstack 26
  7138                           
  7139                           ;menu.c: 309: return (board[a] == board[b] && board[b] == board[c] && board[c] == board[
      +                          d] && board[a] != ' ');
  7140                           
  7141                           ;incstack = 0
  7142  006320  0E00               	movlw	0
  7143  006322  6E12               	movwf	_checkFour$478^0,c
  7144  006324  5007               	movf	checkFour@board^0,w,c
  7145  006326  240A               	addwf	checkFour@b^0,w,c
  7146  006328  6ED9               	movwf	fsr2l,c
  7147  00632A  6ADA               	clrf	fsr2h,c
  7148  00632C  5007               	movf	checkFour@board^0,w,c
  7149  00632E  2408               	addwf	checkFour@a^0,w,c
  7150  006330  6EE1               	movwf	fsr1l,c
  7151  006332  6AE2               	clrf	fsr1h,c
  7152  006334  50DE               	movf	postinc2,w,c
  7153  006336  18E6               	xorwf	postinc1,w,c
  7154  006338  A4D8               	btfss	status,2,c
  7155  00633A  D022               	goto	l2119
  7156  00633C  5007               	movf	checkFour@board^0,w,c
  7157  00633E  240C               	addwf	checkFour@c^0,w,c
  7158  006340  6ED9               	movwf	fsr2l,c
  7159  006342  6ADA               	clrf	fsr2h,c
  7160  006344  5007               	movf	checkFour@board^0,w,c
  7161  006346  240A               	addwf	checkFour@b^0,w,c
  7162  006348  6EE1               	movwf	fsr1l,c
  7163  00634A  6AE2               	clrf	fsr1h,c
  7164  00634C  50DE               	movf	postinc2,w,c
  7165  00634E  18E6               	xorwf	postinc1,w,c
  7166  006350  A4D8               	btfss	status,2,c
  7167  006352  D016               	goto	l2119
  7168  006354  5007               	movf	checkFour@board^0,w,c
  7169  006356  240E               	addwf	checkFour@d^0,w,c
  7170  006358  6ED9               	movwf	fsr2l,c
  7171  00635A  6ADA               	clrf	fsr2h,c
  7172  00635C  5007               	movf	checkFour@board^0,w,c
  7173  00635E  240C               	addwf	checkFour@c^0,w,c
  7174  006360  6EE1               	movwf	fsr1l,c
  7175  006362  6AE2               	clrf	fsr1h,c
  7176  006364  50DE               	movf	postinc2,w,c
  7177  006366  18E6               	xorwf	postinc1,w,c
  7178  006368  A4D8               	btfss	status,2,c
  7179  00636A  D00A               	goto	l2119
  7180  00636C  5007               	movf	checkFour@board^0,w,c
  7181  00636E  2408               	addwf	checkFour@a^0,w,c
  7182  006370  6ED9               	movwf	fsr2l,c
  7183  006372  6ADA               	clrf	fsr2h,c
  7184  006374  0E20               	movlw	32
  7185  006376  18DE               	xorwf	postinc2,w,c
  7186  006378  B4D8               	btfsc	status,2,c
  7187  00637A  D002               	goto	l2119
  7188  00637C  0E01               	movlw	1
  7189  00637E  6E12               	movwf	_checkFour$478^0,c
  7190  006380                     l2119:
  7191  006380  C012  F007         	movff	_checkFour$478,?_checkFour
  7192  006384  6A08               	clrf	(?_checkFour+1)^0,c
  7193  006386  0012               	return		;funcret
  7194  006388                     __end_of_checkFour:
  7195                           	opt callstack 0
  7196                           
  7197 ;; *************** function ___wmul *****************
  7198 ;; Defined at:
  7199 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  multiplier      2    0[COMRAM] unsigned int 
  7202 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  product         2    4[COMRAM] unsigned int 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2    0[COMRAM] unsigned int 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0, prodl, prodh
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7214 ;;      Params:         4       0       0       0       0       0       0       0       0
  7215 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7217 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7218 ;;Total ram usage:        6 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_horizontalCheck
  7224 ;;		_verticalCheck
  7225 ;;		_diagonalCheck
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text18
  7230  006212                     __ptext18:
  7231                           	opt callstack 0
  7232  006212                     ___wmul:
  7233                           	opt callstack 26
  7234                           
  7235                           ;incstack = 0
  7236  006212  5001               	movf	___wmul@multiplier^0,w,c
  7237  006214  0203               	mulwf	___wmul@multiplicand^0,c
  7238  006216  CFF3 F005          	movff	prodl,___wmul@product
  7239  00621A  CFF4 F006          	movff	prodh,___wmul@product+1
  7240  00621E  5001               	movf	___wmul@multiplier^0,w,c
  7241  006220  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7242  006222  50F3               	movf	243,w,c
  7243  006224  2606               	addwf	(___wmul@product+1)^0,f,c
  7244  006226  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7245  006228  0203               	mulwf	___wmul@multiplicand^0,c
  7246  00622A  50F3               	movf	243,w,c
  7247  00622C  2606               	addwf	(___wmul@product+1)^0,f,c
  7248  00622E  C005  F001         	movff	___wmul@product,?___wmul
  7249  006232  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7250  006236  0012               	return		;funcret
  7251  006238                     __end_of___wmul:
  7252                           	opt callstack 0
  7253                           
  7254 ;; *************** function _initMyPIC18F *****************
  7255 ;; Defined at:
  7256 ;;		line 4 in file "init.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text19
  7284  0061AC                     __ptext19:
  7285                           	opt callstack 0
  7286  0061AC                     _initMyPIC18F:
  7287                           	opt callstack 30
  7288                           
  7289                           ;init.c: 9: TRISB = 0;
  7290                           
  7291                           ;incstack = 0
  7292  0061AC  0E00               	movlw	0
  7293  0061AE  6E93               	movwf	147,c	;volatile
  7294                           
  7295                           ;init.c: 11: TRISA = 0xFF;
  7296  0061B0  6892               	setf	146,c	;volatile
  7297                           
  7298                           ;init.c: 13: TRISC = 0xFF;
  7299  0061B2  6894               	setf	148,c	;volatile
  7300                           
  7301                           ;init.c: 14: TRISE = 0x00;
  7302  0061B4  0E00               	movlw	0
  7303  0061B6  6E96               	movwf	150,c	;volatile
  7304  0061B8  0012               	return		;funcret
  7305  0061BA                     __end_of_initMyPIC18F:
  7306                           	opt callstack 0
  7307                           
  7308 ;; *************** function _glcd_Init *****************
  7309 ;; Defined at:
  7310 ;;		line 401 in file "glcd.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  mode            1    wreg     unsigned char 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  mode            1    5[COMRAM] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0
  7325 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7327 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7328 ;;Total ram usage:        1 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    2
  7331 ;; This function calls:
  7332 ;;		_glcd_FillScreen
  7333 ;;		_glcd_WriteByte
  7334 ;; This function is called by:
  7335 ;;		_main
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text20
  7340  0064FA                     __ptext20:
  7341                           	opt callstack 0
  7342  0064FA                     _glcd_Init:
  7343                           	opt callstack 28
  7344                           
  7345                           ;incstack = 0
  7346                           ;glcd_Init@mode stored from wreg
  7347  0064FA  6E06               	movwf	glcd_Init@mode^0,c
  7348                           
  7349                           ;glcd.c: 405: PORTD = 0x00;
  7350  0064FC  0E00               	movlw	0
  7351  0064FE  6E83               	movwf	131,c	;volatile
  7352                           
  7353                           ;glcd.c: 406: LATBbits.LATB5 = 0;
  7354  006500  9A8A               	bcf	138,5,c	;volatile
  7355                           
  7356                           ;glcd.c: 407: _delay((unsigned long)((50)*(8000000/4000000.0)));
  7357  006502  0E21               	movlw	33
  7358  006504                     u2457:
  7359  006504  2EE8               	decfsz	wreg,f,c
  7360  006506  D7FE               	bra	u2457
  7361  006508  F000               	nop	
  7362                           
  7363                           ;glcd.c: 408: LATBbits.LATB5 = 1;
  7364  00650A  8A8A               	bsf	138,5,c	;volatile
  7365                           
  7366                           ;glcd.c: 410: LATBbits.LATB4=0;
  7367  00650C  988A               	bcf	138,4,c	;volatile
  7368                           
  7369                           ;glcd.c: 411: LATBbits.LATB0=0;
  7370  00650E  908A               	bcf	138,0,c	;volatile
  7371                           
  7372                           ;glcd.c: 412: LATBbits.LATB1=0;
  7373  006510  928A               	bcf	138,1,c	;volatile
  7374                           
  7375                           ;glcd.c: 413: LATBbits.LATB2=0;
  7376  006512  948A               	bcf	138,2,c	;volatile
  7377                           
  7378                           ;glcd.c: 414: _delay((unsigned long)((1)*(8000000/4000000.0)));
  7379  006514  D000               	nop2		;2 cycle nop
  7380                           
  7381                           ;glcd.c: 416: glcd_WriteByte(0, 0xC0);
  7382  006516  0EC0               	movlw	192
  7383  006518  6E01               	movwf	glcd_WriteByte@data^0,c
  7384  00651A  0E00               	movlw	0
  7385  00651C  EC1C  F031         	call	_glcd_WriteByte
  7386                           
  7387                           ;glcd.c: 417: glcd_WriteByte(1, 0xC0);
  7388  006520  0EC0               	movlw	192
  7389  006522  6E01               	movwf	glcd_WriteByte@data^0,c
  7390  006524  0E01               	movlw	1
  7391  006526  EC1C  F031         	call	_glcd_WriteByte
  7392                           
  7393                           ;glcd.c: 418: glcd_WriteByte(0, 0x40);
  7394  00652A  0E40               	movlw	64
  7395  00652C  6E01               	movwf	glcd_WriteByte@data^0,c
  7396  00652E  0E00               	movlw	0
  7397  006530  EC1C  F031         	call	_glcd_WriteByte
  7398                           
  7399                           ;glcd.c: 419: glcd_WriteByte(1, 0x40);
  7400  006534  0E40               	movlw	64
  7401  006536  6E01               	movwf	glcd_WriteByte@data^0,c
  7402  006538  0E01               	movlw	1
  7403  00653A  EC1C  F031         	call	_glcd_WriteByte
  7404                           
  7405                           ;glcd.c: 420: glcd_WriteByte(0, 0xB8);
  7406  00653E  0EB8               	movlw	184
  7407  006540  6E01               	movwf	glcd_WriteByte@data^0,c
  7408  006542  0E00               	movlw	0
  7409  006544  EC1C  F031         	call	_glcd_WriteByte
  7410                           
  7411                           ;glcd.c: 421: glcd_WriteByte(1, 0xB8);
  7412  006548  0EB8               	movlw	184
  7413  00654A  6E01               	movwf	glcd_WriteByte@data^0,c
  7414  00654C  0E01               	movlw	1
  7415  00654E  EC1C  F031         	call	_glcd_WriteByte
  7416                           
  7417                           ;glcd.c: 423: if(mode == 1)
  7418  006552  0406               	decf	glcd_Init@mode^0,w,c
  7419  006554  A4D8               	btfss	status,2,c
  7420  006556  D00B               	goto	l2703
  7421                           
  7422                           ;glcd.c: 424: {;glcd.c: 425: glcd_WriteByte(0, 0x3F);
  7423  006558  0E3F               	movlw	63
  7424  00655A  6E01               	movwf	glcd_WriteByte@data^0,c
  7425  00655C  0E00               	movlw	0
  7426  00655E  EC1C  F031         	call	_glcd_WriteByte
  7427                           
  7428                           ;glcd.c: 426: glcd_WriteByte(1, 0x3F);
  7429  006562  0E3F               	movlw	63
  7430  006564  6E01               	movwf	glcd_WriteByte@data^0,c
  7431  006566  0E01               	movlw	1
  7432  006568  EC1C  F031         	call	_glcd_WriteByte
  7433                           
  7434                           ;glcd.c: 427: }
  7435  00656C  D00A               	goto	l2705
  7436  00656E                     l2703:
  7437                           
  7438                           ;glcd.c: 428: else;glcd.c: 429: {;glcd.c: 430: glcd_WriteByte(0, 0x3E);
  7439  00656E  0E3E               	movlw	62
  7440  006570  6E01               	movwf	glcd_WriteByte@data^0,c
  7441  006572  0E00               	movlw	0
  7442  006574  EC1C  F031         	call	_glcd_WriteByte
  7443                           
  7444                           ;glcd.c: 431: glcd_WriteByte(1, 0x3E);
  7445  006578  0E3E               	movlw	62
  7446  00657A  6E01               	movwf	glcd_WriteByte@data^0,c
  7447  00657C  0E01               	movlw	1
  7448  00657E  EC1C  F031         	call	_glcd_WriteByte
  7449  006582                     l2705:
  7450                           
  7451                           ;glcd.c: 432: };glcd.c: 434: glcd_FillScreen(0);
  7452  006582  0E00               	movlw	0
  7453  006584  ECC4  F031         	call	_glcd_FillScreen
  7454  006588  0012               	return		;funcret
  7455  00658A                     __end_of_glcd_Init:
  7456                           	opt callstack 0
  7457                           
  7458 ;; *************** function _glcd_FillScreen *****************
  7459 ;; Defined at:
  7460 ;;		line 475 in file "glcd.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  color           1    wreg     unsigned char 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  color           1    2[COMRAM] unsigned char 
  7465 ;;  i               1    4[COMRAM] unsigned char 
  7466 ;;  j               1    3[COMRAM] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7476 ;;      Params:         0       0       0       0       0       0       0       0       0
  7477 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7479 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7480 ;;Total ram usage:        3 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    1
  7483 ;; This function calls:
  7484 ;;		_glcd_WriteByte
  7485 ;; This function is called by:
  7486 ;;		_glcd_Init
  7487 ;;		_opening_menu
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text21
  7492  006388                     __ptext21:
  7493                           	opt callstack 0
  7494  006388                     _glcd_FillScreen:
  7495                           	opt callstack 28
  7496                           
  7497                           ;incstack = 0
  7498                           ;glcd_FillScreen@color stored from wreg
  7499  006388  6E03               	movwf	glcd_FillScreen@color^0,c
  7500                           
  7501                           ;glcd.c: 477: unsigned char i, j;;glcd.c: 479: for(i = 0; i < 8; i ++)
  7502  00638A  0E00               	movlw	0
  7503  00638C  6E05               	movwf	glcd_FillScreen@i^0,c
  7504  00638E                     l67:
  7505                           
  7506                           ;glcd.c: 480: {;glcd.c: 481: LATBbits.LATB2=0;
  7507  00638E  948A               	bcf	138,2,c	;volatile
  7508                           
  7509                           ;glcd.c: 482: glcd_WriteByte(0, 0b01000000);
  7510  006390  0E40               	movlw	64
  7511  006392  6E01               	movwf	glcd_WriteByte@data^0,c
  7512  006394  0E00               	movlw	0
  7513  006396  EC1C  F031         	call	_glcd_WriteByte
  7514                           
  7515                           ;glcd.c: 483: glcd_WriteByte(1, 0b01000000);
  7516  00639A  0E40               	movlw	64
  7517  00639C  6E01               	movwf	glcd_WriteByte@data^0,c
  7518  00639E  0E01               	movlw	1
  7519  0063A0  EC1C  F031         	call	_glcd_WriteByte
  7520                           
  7521                           ;glcd.c: 484: glcd_WriteByte(0, i | 0b10111000);
  7522  0063A4  5005               	movf	glcd_FillScreen@i^0,w,c
  7523  0063A6  09B8               	iorlw	184
  7524  0063A8  6E01               	movwf	glcd_WriteByte@data^0,c
  7525  0063AA  0E00               	movlw	0
  7526  0063AC  EC1C  F031         	call	_glcd_WriteByte
  7527                           
  7528                           ;glcd.c: 485: glcd_WriteByte(1, i | 0b10111000);
  7529  0063B0  5005               	movf	glcd_FillScreen@i^0,w,c
  7530  0063B2  09B8               	iorlw	184
  7531  0063B4  6E01               	movwf	glcd_WriteByte@data^0,c
  7532  0063B6  0E01               	movlw	1
  7533  0063B8  EC1C  F031         	call	_glcd_WriteByte
  7534                           
  7535                           ;glcd.c: 486: LATBbits.LATB2=1;
  7536  0063BC  848A               	bsf	138,2,c	;volatile
  7537                           
  7538                           ;glcd.c: 488: for(j = 0; j < 64; j++)
  7539  0063BE  0E00               	movlw	0
  7540  0063C0  6E04               	movwf	glcd_FillScreen@j^0,c
  7541  0063C2                     l2495:
  7542                           
  7543                           ;glcd.c: 489: {;glcd.c: 490: glcd_WriteByte(0, 0xFF*color);
  7544  0063C2  5003               	movf	glcd_FillScreen@color^0,w,c
  7545  0063C4  0D01               	mullw	1
  7546  0063C6  50F3               	movf	243,w,c
  7547  0063C8  0800               	sublw	0
  7548  0063CA  6E01               	movwf	glcd_WriteByte@data^0,c
  7549  0063CC  0E00               	movlw	0
  7550  0063CE  EC1C  F031         	call	_glcd_WriteByte
  7551                           
  7552                           ;glcd.c: 491: glcd_WriteByte(1, 0xFF*color);
  7553  0063D2  5003               	movf	glcd_FillScreen@color^0,w,c
  7554  0063D4  0D01               	mullw	1
  7555  0063D6  50F3               	movf	243,w,c
  7556  0063D8  0800               	sublw	0
  7557  0063DA  6E01               	movwf	glcd_WriteByte@data^0,c
  7558  0063DC  0E01               	movlw	1
  7559  0063DE  EC1C  F031         	call	_glcd_WriteByte
  7560  0063E2  2A04               	incf	glcd_FillScreen@j^0,f,c
  7561  0063E4  0E3F               	movlw	63
  7562  0063E6  6404               	cpfsgt	glcd_FillScreen@j^0,c
  7563  0063E8  D7EC               	goto	l2495
  7564  0063EA  2A05               	incf	glcd_FillScreen@i^0,f,c
  7565  0063EC  0E07               	movlw	7
  7566  0063EE  6405               	cpfsgt	glcd_FillScreen@i^0,c
  7567  0063F0  D7CE               	goto	l67
  7568  0063F2  0012               	return	
  7569  0063F4                     __end_of_glcd_FillScreen:
  7570                           	opt callstack 0
  7571                           
  7572 ;; *************** function _glcd_WriteByte *****************
  7573 ;; Defined at:
  7574 ;;		line 441 in file "glcd.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  side            1    wreg     unsigned char 
  7577 ;;  data            1    0[COMRAM] unsigned char 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  side            1    1[COMRAM] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7589 ;;      Params:         1       0       0       0       0       0       0       0       0
  7590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7592 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7593 ;;Total ram usage:        2 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_glcd_Init
  7599 ;;		_glcd_FillScreen
  7600 ;;		_glcd_SetCursor
  7601 ;;		_glcd_WriteChar8X8
  7602 ;;		_glcd_WriteChar3x6
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text22
  7607  006238                     __ptext22:
  7608                           	opt callstack 0
  7609  006238                     _glcd_WriteByte:
  7610                           	opt callstack 25
  7611                           
  7612                           ;incstack = 0
  7613                           ;glcd_WriteByte@side stored from wreg
  7614  006238  6E02               	movwf	glcd_WriteByte@side^0,c
  7615                           
  7616                           ;glcd.c: 443: if(side)
  7617  00623A  5002               	movf	glcd_WriteByte@side^0,w,c
  7618  00623C  B4D8               	btfsc	status,2,c
  7619  00623E  D003               	goto	l62
  7620                           
  7621                           ;glcd.c: 444: {;glcd.c: 445: LATBbits.LATB0 = 1;
  7622  006240  808A               	bsf	138,0,c	;volatile
  7623                           
  7624                           ;glcd.c: 446: LATBbits.LATB1 = 0;
  7625  006242  928A               	bcf	138,1,c	;volatile
  7626                           
  7627                           ;glcd.c: 447: }
  7628  006244  D002               	goto	l1985
  7629  006246                     l62:
  7630                           
  7631                           ;glcd.c: 448: else;glcd.c: 449: {;glcd.c: 450: LATBbits.LATB1 = 0;
  7632  006246  928A               	bcf	138,1,c	;volatile
  7633                           
  7634                           ;glcd.c: 451: LATBbits.LATB1 = 1;
  7635  006248  828A               	bsf	138,1,c	;volatile
  7636  00624A                     l1985:
  7637                           
  7638                           ;glcd.c: 452: };glcd.c: 454: TRISD=0;
  7639  00624A  0E00               	movlw	0
  7640  00624C  6E95               	movwf	149,c	;volatile
  7641                           
  7642                           ;glcd.c: 455: LATBbits.LATB3=0;
  7643  00624E  968A               	bcf	138,3,c	;volatile
  7644                           
  7645                           ;glcd.c: 457: LATD = data;
  7646  006250  C001  FF8C         	movff	glcd_WriteByte@data,3980	;volatile
  7647                           
  7648                           ;glcd.c: 461: LATBbits.LATB4 = 1;
  7649  006254  888A               	bsf	138,4,c	;volatile
  7650                           
  7651                           ;glcd.c: 462: _delay((unsigned long)((1)*(8000000/4000000.0)));
  7652  006256  D000               	nop2		;2 cycle nop
  7653                           
  7654                           ;glcd.c: 463: LATBbits.LATB4 = 0;
  7655  006258  988A               	bcf	138,4,c	;volatile
  7656                           
  7657                           ;glcd.c: 464: _delay((unsigned long)((1)*(8000000/4000000.0)));
  7658  00625A  D000               	nop2		;2 cycle nop
  7659                           
  7660                           ;glcd.c: 467: LATBbits.LATB0 = 0;
  7661  00625C  908A               	bcf	138,0,c	;volatile
  7662                           
  7663                           ;glcd.c: 468: LATBbits.LATB1 = 0;
  7664  00625E  928A               	bcf	138,1,c	;volatile
  7665  006260  0012               	return		;funcret
  7666  006262                     __end_of_glcd_WriteByte:
  7667                           	opt callstack 0
  7668                           
  7669                           	psect	rparam
  7670  0000                     tosu	equ	0xFFF
  7671                           tosh	equ	0xFFE
  7672                           tosl	equ	0xFFD
  7673                           stkptr	equ	0xFFC
  7674                           pclatu	equ	0xFFB
  7675                           pclath	equ	0xFFA
  7676                           pcl	equ	0xFF9
  7677                           tblptru	equ	0xFF8
  7678                           tblptrh	equ	0xFF7
  7679                           tblptrl	equ	0xFF6
  7680                           tablat	equ	0xFF5
  7681                           prodh	equ	0xFF4
  7682                           prodl	equ	0xFF3
  7683                           indf0	equ	0xFEF
  7684                           postinc0	equ	0xFEE
  7685                           postdec0	equ	0xFED
  7686                           preinc0	equ	0xFEC
  7687                           plusw0	equ	0xFEB
  7688                           fsr0h	equ	0xFEA
  7689                           fsr0l	equ	0xFE9
  7690                           wreg	equ	0xFE8
  7691                           indf1	equ	0xFE7
  7692                           postinc1	equ	0xFE6
  7693                           postdec1	equ	0xFE5
  7694                           preinc1	equ	0xFE4
  7695                           plusw1	equ	0xFE3
  7696                           fsr1h	equ	0xFE2
  7697                           fsr1l	equ	0xFE1
  7698                           bsr	equ	0xFE0
  7699                           indf2	equ	0xFDF
  7700                           postinc2	equ	0xFDE
  7701                           postdec2	equ	0xFDD
  7702                           preinc2	equ	0xFDC
  7703                           plusw2	equ	0xFDB
  7704                           fsr2h	equ	0xFDA
  7705                           fsr2l	equ	0xFD9
  7706                           status	equ	0xFD8


Data Sizes:
    Strings     110
    Constant    3268
    Data        34
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      57
    BANK0           160     84     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    diagonalCheck@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    verticalCheck@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    horizontalCheck@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    checkFour@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    checkWin@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    takeTurn@PIECES	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    takeTurn@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    printBoard@board	PTR unsigned char  size(1) Largest target is 42
		 -> menu_game@board(BANK0[42]), 

    menu_game@PIECES	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), 

    glcd_WriteString@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[2]), STR_13(CODE[2]), menu_game@message2(BANK0[17]), STR_12(CODE[9]), 
		 -> menu_game@message1(BANK0[17]), STR_11(CODE[9]), STR_10(CODE[12]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[14]), STR_5(CODE[14]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_opening_menu
    _opening_menu->_menu_game
    _menu_game->_checkWin
    _takeTurn->_player_choice
    _printBoard->_glcd_WriteString
    _glcd_WriteString->_glcd_WriteChar8X8
    _glcd_WriteChar8X8->_glcd_WriteByte
    _glcd_WriteChar3x6->_glcd_WriteByte
    _glcd_SetCursor->_glcd_WriteByte
    _checkWin->_diagonalCheck
    _verticalCheck->_checkFour
    _horizontalCheck->_checkFour
    _diagonalCheck->_checkFour
    _checkFour->___wmul
    _glcd_Init->_glcd_FillScreen
    _glcd_FillScreen->_glcd_WriteByte

Critical Paths under _main in BANK0

    _opening_menu->_menu_game

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   62121
                          _glcd_Init
                       _initMyPIC18F
                       _opening_menu
                           _uartInit
 ---------------------------------------------------------------------------------
 (1) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _opening_menu                                         2     2      0   56997
                                             31 COMRAM     2     2      0
                    _glcd_FillScreen
                     _glcd_SetCursor
                   _glcd_WriteString
                          _menu_game
                        _mode_choice
 ---------------------------------------------------------------------------------
 (2) _mode_choice                                          4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _menu_game                                           86    86      0   41269
                                             29 COMRAM     2     2      0
                                              0 BANK0     84    84      0
                           _checkWin
                     _glcd_SetCursor
                   _glcd_WriteString
                         _printBoard
                           _takeTurn
                          _uartWrite
 ---------------------------------------------------------------------------------
 (3) _uartWrite                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _takeTurn                                            11     6      5     452
                                              4 COMRAM    11     6      5
                      _player_choice
 ---------------------------------------------------------------------------------
 (4) _player_choice                                        4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _printBoard                                           6     5      1   16493
                                             15 COMRAM     6     5      1
                     _glcd_SetCursor
                  _glcd_WriteChar8X8
                   _glcd_WriteString
 ---------------------------------------------------------------------------------
 (4) _glcd_WriteString                                     4     0      4    9361
                                             11 COMRAM     4     0      4
                  _glcd_WriteChar3x6
                  _glcd_WriteChar8X8
 ---------------------------------------------------------------------------------
 (5) _glcd_WriteChar8X8                                    9     8      1    2953
                                              2 COMRAM     9     8      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (5) _glcd_WriteChar3x6                                    7     6      1    2855
                                              2 COMRAM     7     6      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (4) _glcd_SetCursor                                       3     2      1    3726
                                              2 COMRAM     3     2      1
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (3) _checkWin                                             3     1      2   10767
                                             26 COMRAM     3     1      2
                      _diagonalCheck
                    _horizontalCheck
                      _verticalCheck
 ---------------------------------------------------------------------------------
 (4) _verticalCheck                                        6     4      2    3504
                                             18 COMRAM     6     4      2
                             ___wmul
                          _checkFour
 ---------------------------------------------------------------------------------
 (4) _horizontalCheck                                      6     4      2    3504
                                             18 COMRAM     6     4      2
                             ___wmul
                          _checkFour
 ---------------------------------------------------------------------------------
 (4) _diagonalCheck                                        8     6      2    3593
                                             18 COMRAM     8     6      2
                             ___wmul
                          _checkFour
 ---------------------------------------------------------------------------------
 (5) _checkFour                                           12     3      9    1852
                                              6 COMRAM    12     3      9
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1487
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initMyPIC18F                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _glcd_Init                                            1     1      0    5124
                                              5 COMRAM     1     1      0
                    _glcd_FillScreen
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (2) _glcd_FillScreen                                      3     3      0    2641
                                              2 COMRAM     3     3      0
                     _glcd_WriteByte
 ---------------------------------------------------------------------------------
 (6) _glcd_WriteByte                                       2     1      1    2461
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _glcd_Init
     _glcd_FillScreen
       _glcd_WriteByte
     _glcd_WriteByte
   _initMyPIC18F
   _opening_menu
     _glcd_FillScreen
       _glcd_WriteByte
     _glcd_SetCursor
       _glcd_WriteByte
     _glcd_WriteString
       _glcd_WriteChar3x6
         _glcd_WriteByte
       _glcd_WriteChar8X8
         _glcd_WriteByte
     _menu_game
       _checkWin
         _diagonalCheck
           ___wmul
           _checkFour
             ___wmul (ARG)
         _horizontalCheck
           ___wmul
           _checkFour
             ___wmul (ARG)
         _verticalCheck
           ___wmul
           _checkFour
             ___wmul (ARG)
       _glcd_SetCursor
         _glcd_WriteByte
       _glcd_WriteString
         _glcd_WriteChar3x6
           _glcd_WriteByte
         _glcd_WriteChar8X8
           _glcd_WriteByte
       _printBoard
         _glcd_SetCursor
           _glcd_WriteByte
         _glcd_WriteChar8X8
           _glcd_WriteByte
         _glcd_WriteString
           _glcd_WriteChar3x6
             _glcd_WriteByte
           _glcd_WriteChar8X8
             _glcd_WriteByte
       _takeTurn
         _player_choice
       _uartWrite
     _mode_choice
   _uartInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      76       5       73.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      39       1       60.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF      20        0.0%
DATA                 0      0      AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 28 20:48:57 2020

                         _x 0037                           _y 0036               printBoard@col 0014  
                        l62 6246                          l67 638E                          l94 62EC  
             printBoard@row 0012       diagonalCheck@DIAG_LFT 0019         ___wmul@multiplicand 0003  
     diagonalCheck@DIAG_RGT 0017                         l103 67C2                         l114 66EA  
                       l236 6FD6                         l239 7002                         l295 6A56  
                       l298 6A82              printBoard@temp 0011                __CFG_BOR$OFF 000000  
                       _col 0026                         _idx 0024                         _row 0038  
                       wreg 000FE8                __CFG_FOSC$HS 000000                __CFG_LVP$OFF 000000  
           printBoard@board 0010                __CFG_WDT$OFF 000000                        l2013 67B0  
                      l2041 6800                        l2201 7084                        l2027 67D6  
                      l2019 67C6                        l2301 689A                        l2141 6302  
                      l2045 6834                        l2119 6380                        l2303 68A2  
                      l2071 66EE                        l2047 6862                        l2151 6476  
                      l2223 710C                        l2215 70D8                        l2065 66D8  
                      l2233 7148                        l2209 70B4                        l2315 693A  
                      l2307 68B2                        l2323 6946                        l2155 64A6  
                      l2411 659A                        l2251 71B4                        l2219 70F0  
                      l2163 6FC6                        l2333 6978                        l2093 6720  
                      l2157 64CE                        l2405 6592                        l2261 71EC  
                      l2237 7164                        l2229 7130                        l2319 6940  
                      l2351 6A1E                        l2335 6980                        l2079 66F6  
                      l2159 64D2                        l2247 719C                        l2361 6B9A  
                      l2329 6968                        l2097 6758                        l2273 7236  
                      l2265 7204                        l2601 6DEA                        l2371 6BCA  
                      l2347 6A18                        l2339 6990                        l2355 6A24  
                      l2099 678A                        l2611 6E40                        l2507 6A46  
                      l2365 6BAE                        l2703 656E                        l2367 6BB6  
                      l2287 7294                        l2447 6456                        l2439 640E  
                      l2615 6E58                        l2705 6582                        l2385 6CD0  
                      l2377 6C58                        l2297 688A                        l2465 62D0  
                      l2641 6F0C                        l2395 6CE8                        l2643 6F26  
                      l2627 6EB2                        l2571 6D04                        l2555 6B42  
                      l2389 6CDA                        l2629 6EBA                        l2581 6D48  
                      l2495 63C2                        l2591 6D88                        l2585 6D68  
                      l2593 6DAC                        l2659 6F7A                        l2595 6DC4  
                      l2579 6D3E                        l1985 624A                        STR_1 7FF0  
                      STR_2 7FE5                        STR_3 7FDA               _verticalCheck 6950  
                      STR_4 7FFA                        STR_5 7FB2                        STR_6 7FC0  
                      STR_7 7FA2                        STR_8 7F91                        STR_9 7F91  
                      u2000 65F0                        u2010 661A                        u2030 646A  
                      u2200 6B12                        u2210 6B20                        u2220 6B2E  
                      u1510 7098                        u2230 6B38                        u2150 6AD4  
                      u1431 7026                        u2311 6EEC                        u2240 6B70  
                      _LATD 000F8C                        u1441 7034                        u2321 6F58  
                      u1370 64A0                        u1610 7128                        u1530 70B4  
                      u2250 6D24                        u2170 6AEC                        u1380 64CA  
                      u1460 7056                        u2180 6AFA                        u1390 64F2  
                      u1710 71B4                        u1630 7148                        u1550 70D0  
                      u1470 7062                        u2270 6E50                        u2190 6B08  
                      u2407 6DB6                        u1800 722E                        u1480 706E  
                      u2280 6E58                        u1377 6496                        u2417 6F16  
                      u1810 7244                        u1730 71C8                        u1650 7164  
                      u1570 70F0                        u1387 64C0                        u2427 6FC8  
                      u1820 7252               __CFG_DEBUG$ON 000000                        u1397 64E8  
                      u2437 6FF0                        u2357 6662                        u1830 725C  
                      u1750 71E4                        u1670 717C                        u1590 710C  
                      u2447 729E                        u2367 66AA                        u1840 7266  
                      u2457 6504                        u2377 6A48                        u1770 7204  
                      u1690 7194                        u2387 6A70                        u1940 6BAC  
                      u1860 7282                        u1780 7212                        u2397 6B4C  
                      u1950 6BC8                        u1870 72C2                        u1790 7220  
                      u1960 6BFA                        u1970 6C58                        u1980 6C68  
                      u1990 6CC6            ??_glcd_WriteByte 0002                        _main 61EE  
                      _mode 0028                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf1 000FE7                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        prodh 000FF4                        prodl 000FF3  
                      start 0000             __end_of_Font3x6 7F90                ___param_bank 000000  
           __end_of_Font8x8 7ACD          glcd_WriteChar8X8@i 000A          glcd_WriteChar3x6@i 0008  
                     ?_main 0001                       STR_10 7FCE                       STR_11 7F99  
                     STR_12 7F99                       STR_13 7FFD                       STR_14 7FFD  
                     _CMCON 000FB4             __end_of_acceuil 7ECD                       _SPBRG 000FAF  
                     _PORTD 000F83                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
                     _TXREG 000FAD               __CFG_PWRT$OFF 000000            ?_horizontalCheck 0013  
                     _color 7F90                       _count 0022              ?_verticalCheck 0013  
                     _tempx 0034                       _tempy 0032                ?_mode_choice 0001  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     status 000FD8               ?_initMyPIC18F 0001        horizontalCheck@WIDTH 0017  
        glcd_WriteByte@data 0001             __initialization 6262          glcd_WriteByte@side 0002  
              __end_of_main 6212       __end_of_diagonalCheck 6CF2        horizontalCheck@board 0013  
                    ??_main 0022               __activetblptr 000002             _glcd_FillScreen 6388  
       glcd_WriteChar8X8@ch 0008         glcd_WriteChar3x6@ch 0007                      _ADRESH 000FC4  
                    _ADRESL 000FC3       __end_of_player_choice 72CC                      _OSCCON 000FD3  
          __end_of_checkWin 62D8              ??_initMyPIC18F 0001           ?_glcd_WriteString 000C  
                    ___wmul 6212          ??_glcd_WriteString 0010                      _choice 002A  
                    clear_0 6288            __end_of_takeTurn 6474            __end_of_uartInit 61CC  
              __mediumconst 72CC                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8             ??_verticalCheck 0015                _checkWin$471 001D  
             checkWin@board 001B                  __accesstop 0060     __end_of__initialization 628E  
             ___rparam_used 000001               takeTurn@board 0005              __pcstackCOMRAM 0001  
              __pidataBANK0 61CC          __size_of_checkFour 0068     __end_of_glcd_FillScreen 63F4  
             __end_of_color 7F91      glcd_WriteChar8X8@color 0003          __size_of_glcd_Init 0090  
               takeTurn@col 000C                 takeTurn@row 000E        __size_of_mode_choice 014C  
      glcd_WriteChar8X8@chr 0006          __size_of_menu_game 02B4      glcd_WriteChar3x6@color 0003  
                   ?___wmul 0001          __size_of_uartWrite 000C           _glcd_WriteChar8X8 679A  
         _glcd_WriteChar3x6 66C2                   ?_checkWin 001B        __end_of_initMyPIC18F 61BA  
        ?_glcd_WriteChar8X8 0003          ?_glcd_WriteChar3x6 0003           __end_of_checkFour 6388  
       ??_glcd_WriteChar8X8 0004         ??_glcd_WriteChar3x6 0004               ?_opening_menu 0001  
                   _Font3x6 7ECD                     _Font8x8 72CD                   ?_takeTurn 0005  
         __end_of_glcd_Init 658A                     __Hparam 0000                     __Lparam 0000  
                 ?_uartInit 0001                  checkFour@a 0008                  checkFour@b 000A  
                checkFour@c 000C                  checkFour@d 000E             __size_of___wmul 0026  
          ?_glcd_FillScreen 0001                     _acceuil 7ACD         glcd_WriteString@str 000C  
         menu_game@message1 0060           menu_game@message2 0071                     __pcinit 6262  
                   __ramtop 0800              checkFour@board 0007   __end_of_glcd_WriteChar8X8 6872  
 __end_of_glcd_WriteChar3x6 679A                     __ptext0 61EE                     __ptext1 61BA  
                   __ptext2 661C                     __ptext3 6A2E                     __ptext4 6CF2  
                   __ptext5 61A0                     __ptext6 63F4                     __ptext7 6FA6  
                   __ptext8 658A                     __ptext9 6474     __size_of_glcd_SetCursor 0048  
                ??_checkWin 001D           __end_of_menu_game 6FA6                     _resultx 002E  
                   _resulty 002C                     _pressed 0030        end_of_initialization 628E  
            ??_opening_menu 0020          verticalCheck@board 0013               __Lmediumconst 72CC  
  __size_of_horizontalCheck 00DE                  ??_takeTurn 000A           __end_of_uartWrite 61AC  
             _checkFour$478 0012                  ??_uartInit 0001                   _RCSTAbits 000FAB  
                   postdec1 000FE5                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE     __size_of_glcd_WriteByte 002A                  _printBoard 658A  
                 _PORTCbits 000F82              takeTurn@PIECES 0008   __size_of_glcd_WriteString 0086  
    __size_of_diagonalCheck 0178                   _TXSTAbits 000FAC              takeTurn@player 0006  
            __end_of___wmul 6238       __size_of_initMyPIC18F 000E      __size_of_player_choice 0326  
__size_of_glcd_WriteChar8X8 00D8  __size_of_glcd_WriteChar3x6 00D8         start_initialization 6262  
     __end_of_verticalCheck 6A2E          glcd_SetCursor@side 0004          glcd_SetCursor@xpos 0005  
        glcd_SetCursor@ypos 0003                _initMyPIC18F 61AC                    ??___wmul 0005  
         ??_horizontalCheck 0015        glcd_FillScreen@color 0003                 __pdataBANK0 00B4  
             _diagonalCheck 6B7A                 ?_printBoard 0010        __end_of_opening_menu 66C2  
                menu_game@i 00B0              _glcd_SetCursor 62D8                 __pbssCOMRAM 0022  
             __pcstackBANK0 0060           __size_of_checkWin 0040       glcd_WriteString@color 000F  
             ??_mode_choice 0003       glcd_WriteChar8X8@side 000B       glcd_WriteChar8X8@xpos 0009  
             _player_choice 6FA6                   _checkFour 6320       glcd_WriteChar3x6@side 0009  
         __size_of_takeTurn 0080       glcd_WriteChar3x6@xpos 0006               __pmediumconst 72CC  
            _glcd_WriteByte 6238              ?_diagonalCheck 0013                   _glcd_Init 64FA  
         __size_of_uartInit 0012      __end_of_glcd_SetCursor 6320            _glcd_WriteString 6474  
                 _menu_game 6CF2              ?_player_choice 0001              ___wmul@product 0005  
                  _LATBbits 000F8A                  ?_checkFour 0007         __size_of_printBoard 0092  
       __end_of_mode_choice 6B7A      __end_of_glcd_WriteByte 6262                    _PIR1bits 000F9E  
                uartWrite@c 0001                   _uartWrite 61A0                  ?_glcd_Init 0001  
           ?_glcd_SetCursor 0003                  _ADCON0bits 000FC2           ___wmul@multiplier 0001  
  __size_of_glcd_FillScreen 006C          diagonalCheck@board 0013                   copy_data0 6276  
                ?_menu_game 0001            glcd_FillScreen@i 0005            glcd_FillScreen@j 0004  
                  __Hrparam 0000             ?_glcd_WriteByte 0001                    __Lrparam 0000  
           ??_diagonalCheck 0015       __size_of_opening_menu 00A6                  ?_uartWrite 0001  
      glcd_WriteString@font 000E             menu_game@PIECES 00AC                    _checkWin 6298  
           ??_player_choice 0003                    __ptext10 679A                    __ptext11 66C2  
                  __ptext20 64FA                    __ptext12 62D8                    __ptext21 6388  
                  __ptext13 6298                    __ptext22 6238                    __ptext14 6950  
                  __ptext15 6872                    __ptext16 6B7A                    __ptext17 6320  
                  __ptext18 6212                    __ptext19 61AC                 _mode_choice 6A2E  
           _horizontalCheck 6872                _opening_menu 661C               __size_of_main 0024  
               ??_checkFour 0010                    _takeTurn 63F4         verticalCheck@HEIGHT 0017  
                  _uartInit 61BA               glcd_Init@mode 0006                 ??_glcd_Init 0006  
              ??_printBoard 0011              menu_game@F3100 00C5              menu_game@F3103 00B4  
               ??_menu_game 001E           ??_glcd_FillScreen 0003              menu_game@board 0082  
        __end_of_printBoard 661C    __end_of_glcd_WriteString 64FA                 ??_uartWrite 0001  
    __size_of_verticalCheck 00DE               menu_game@done 00AE               menu_game@turn 00B2  
   __end_of_horizontalCheck 6950            ??_glcd_SetCursor 0004  
